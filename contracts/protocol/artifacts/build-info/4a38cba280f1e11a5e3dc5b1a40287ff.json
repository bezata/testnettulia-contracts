{
	"id": "4a38cba280f1e11a5e3dc5b1a40287ff",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/contracts/protocol/PoolOrganizer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"../interfaces/IPoolOrganizer.sol\";\nimport \"../interfaces/IVaultManager.sol\";\nimport \"../interfaces/IRewardManager.sol\";\n\n/**\n * @title Pool Organizer for managing pools, vaults, and rewards.\n * @dev Implements access control and management for pool lifecycle and integration with external managers.\n */\ncontract PoolOrganizer is AccessControl, IPoolOrganizer {\n    bytes32 public constant POOL_MANAGER_ROLE = keccak256(\"POOL_MANAGER_ROLE\");\n\n    IVaultManager public vaultManager;\n    IRewardManager public rewardManager;\n\n    address[] private pools;\n    mapping(address => IPoolOrganizer.PoolDetails) private poolDetails;\n    mapping(address => address[]) private lenderPools;\n    mapping(address => address) public poolVaults;\n    mapping(address => address[]) private borrowerPools;\n    mapping(address => LoanState) private loanStates;\n\n    /**\n     * @dev Emitted when a new pool is registered.\n     * @param pool The address of the pool.\n     * @param lender The address of the lender.\n     * @param borrower The address of the borrower.\n     * @param vault The address of the vault associated with the pool.\n     * @param poolType The type of the pool.\n     */\n    event PoolRegistered(\n        address indexed pool,\n        address indexed lender,\n        address indexed borrower,\n        address vault,\n        PoolType poolType\n    );\n\n    /**\n     * @dev Emitted when a pool is deregistered.\n     * @param pool The address of the deregistered pool.\n     */\n    event PoolDeregistered(address indexed pool);\n\n    /**\n     * @dev Emitted when managers are registered.\n     * @param vaultManager The address of the vault manager.\n     * @param rewardManager The address of the reward manager.\n     */\n    event ManagerRegistered(address vaultManager, address rewardManager);\n\n    /**\n     * @dev Emitted when a vault is registered for a pool.\n     * @param pool The address of the pool.\n     * @param vault The address of the registered vault.\n     */\n    event VaultRegistered(address indexed pool, address indexed vault);\n\n    /**\n     * @dev Emitted when the loan state of a pool is updated.\n     * @param pool The address of the pool.\n     * @param oldState The previous state of the loan.\n     * @param newState The new state of the loan.\n     */\n    event LoanStateUpdated(\n        address indexed pool,\n        LoanState oldState,\n        LoanState newState\n    );\n\n    /**\n     * @dev Constructor that grants the deployer the admin and pool manager roles.\n     */\n    constructor() {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(POOL_MANAGER_ROLE, msg.sender);\n    }\n\n    /**\n     * @notice Registers a new pool with the specified details.\n     * @dev Registers a pool and emits a `PoolRegistered` event.\n     * @param pool The address of the pool.\n     * @param lender The address of the lender.\n     * @param borrower The address of the borrower.\n     * @param vault The address of the vault.\n     * @param loanToken The ERC20 token for the loan.\n     * @param assetToken The ERC20 token for the asset.\n     * @param repaymentToken The ERC20 token for the repayment.\n     * @param loanAmount The amount of the loan.\n     * @param interestRate The interest rate for the loan.\n     * @param repaymentPeriod The repayment period for the loan.\n     * @param poolType The type of the pool.\n     */\n    function registerPool(\n        address pool,\n        address lender,\n        address borrower,\n        address vault,\n        IERC20 loanToken,\n        IERC20 assetToken,\n        IERC20 repaymentToken,\n        uint256 loanAmount,\n        uint256 interestRate,\n        uint256 repaymentPeriod,\n        PoolType poolType\n    ) external {\n        require(pool != address(0), \"Pool address cannot be zero\");\n        require(\n            poolDetails[pool].lender == address(0),\n            \"Pool already registered\"\n        );\n\n        poolDetails[pool] = IPoolOrganizer.PoolDetails({\n            lender: lender,\n            borrower: borrower,\n            creationTime: block.timestamp,\n            vault: vault,\n            loanToken: loanToken,\n            assetToken: assetToken,\n            repaymentToken: repaymentToken,\n            loanAmount: loanAmount,\n            interestRate: interestRate,\n            repaymentPeriod: repaymentPeriod,\n            poolType: poolType,\n            funded: false,\n            loanState: LoanState.CREATED,\n            pool: pool\n        });\n        lenderPools[lender].push(pool);\n        pools.push(pool);\n        loanStates[pool] = LoanState.CREATED;\n        emit PoolRegistered(pool, lender, borrower, vault, poolType);\n    }\n\n    /**\n     * @notice Updates the loan state of the specified pool and emits a `LoanStateUpdated` event.\n     * @param pool The address of the pool.\n     * @param newState The new state of the loan.\n     */\n    function updateLoanState(address pool, LoanState newState) external {\n        require(poolDetails[pool].lender != address(0), \"Pool not registered\");\n        LoanState oldState = loanStates[pool];\n        loanStates[pool] = newState;\n        emit LoanStateUpdated(pool, oldState, newState);\n    }\n\n    /**\n     * @notice Marks a pool as funded.\n     * @dev Marks the specified pool as funded.\n     * @param pool The address of the pool to mark as funded.\n     */\n    function markPoolAsFunded(address pool) external {\n        require(poolDetails[pool].lender != address(0), \"Pool not registered\");\n        poolDetails[pool].funded = true;\n    }\n\n    /**\n     * @notice Gets the current loan state of a specific pool.\n     * @param pool The address of the pool.\n     * @return The current loan state of the pool.\n     */\n    function getLoanState(address pool) external view returns (LoanState) {\n        return loanStates[pool];\n    }\n\n    /**\n     * @notice Gets the details of all pools associated with a lender.\n     * @param lender The address of the lender.\n     * @return An array of pool details.\n     */\n    function getAllLenderPoolDetails(address lender)\n        external\n        view\n        returns (IPoolOrganizer.PoolDetails[] memory)\n    {\n        address[] memory lenderPoolsArray = lenderPools[lender];\n        IPoolOrganizer.PoolDetails[]\n            memory details = new IPoolOrganizer.PoolDetails[](\n                lenderPoolsArray.length\n            );\n\n        for (uint256 i = 0; i < lenderPoolsArray.length; i++) {\n            details[i] = poolDetails[lenderPoolsArray[i]];\n        }\n        return details;\n    }\n\n    /**\n     * @notice Gets all pools associated with a borrower.\n     * @param borrower The address of the borrower.\n     * @return An array of pool addresses.\n     */\n    function getPoolsByBorrower(address borrower)\n        external\n        view\n        returns (address[] memory)\n    {\n        return borrowerPools[borrower];\n    }\n\n    /**\n     * @notice Gets the details of all pools associated with a borrower.\n     * @param borrower The address of the borrower.\n     * @return An array of pool details.\n     */\n    function getBorrowerPoolDetails(address borrower)\n        external\n        view\n        returns (IPoolOrganizer.PoolDetails[] memory)\n    {\n        address[] memory borrowerPoolsArray = borrowerPools[borrower];\n        IPoolOrganizer.PoolDetails[]\n            memory details = new IPoolOrganizer.PoolDetails[](\n                borrowerPoolsArray.length\n            );\n\n        for (uint256 i = 0; i < borrowerPoolsArray.length; i++) {\n            details[i] = poolDetails[borrowerPoolsArray[i]];\n        }\n        return details;\n    }\n\n    /**\n     * @notice Deregisters a pool.\n     * @dev Deregisters the specified pool and emits a `PoolDeregistered` event.\n     * @param pool The address of the pool to deregister.\n     */\n    function deregisterPool(address pool) external {\n        require(poolDetails[pool].lender != address(0), \"Pool not registered\");\n\n        address lender = poolDetails[pool].lender;\n        _removePoolFromLenderArray(lender, pool);\n        _removePoolFromMainArray(pool);\n\n        delete poolDetails[pool];\n        delete loanStates[pool];\n        emit PoolDeregistered(pool);\n    }\n\n    /**\n     * @notice Sets the borrower for a specified pool.\n     * @param pool The address of the pool.\n     * @param newBorrower The address of the new borrower.\n     */\n    function setBorrowerForPool(address pool, address newBorrower) external {\n        require(poolDetails[pool].lender != address(0), \"Pool not registered\");\n        require(\n            newBorrower != address(0),\n            \"Borrower cannot be the zero address\"\n        );\n\n        address currentBorrower = poolDetails[pool].borrower;\n        if (currentBorrower != newBorrower) {\n            if (currentBorrower != address(0)) {\n                _removePoolFromBorrowerArray(currentBorrower, pool);\n            }\n            borrowerPools[newBorrower].push(pool);\n            poolDetails[pool].borrower = newBorrower;\n        }\n    }\n\n    /**\n     * @notice Registers the vault and reward managers.\n     * @dev Registers the specified managers and emits a `ManagerRegistered` event.\n     * @param _vaultManager The address of the vault manager.\n     * @param _rewardManager The address of the reward manager.\n     */\n    function registerManagers(address _vaultManager, address _rewardManager)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        require(\n            _vaultManager != address(0),\n            \"VaultManager cannot be zero address\"\n        );\n        require(\n            _rewardManager != address(0),\n            \"RewardManager cannot be zero address\"\n        );\n\n        vaultManager = IVaultManager(_vaultManager);\n        rewardManager = IRewardManager(_rewardManager);\n\n        emit ManagerRegistered(_vaultManager, _rewardManager);\n    }\n\n    /**\n     * @notice Gets the addresses of the registered managers.\n     * @return The addresses of the vault and reward managers.\n     */\n    function getManagers() external view returns (address, address) {\n        return (address(vaultManager), address(rewardManager));\n    }\n\n    /**\n     * @notice Gets the total number of registered pools.\n     * @return The total number of pools.\n     */\n    function getTotalPools() external view returns (uint256) {\n        return pools.length;\n    }\n\n    /**\n     * @notice Gets all pools associated with a lender.\n     * @param lender The address of the lender.\n     * @return An array of pool addresses.\n     */\n    function getPoolsByLender(address lender)\n        external\n        view\n        returns (address[] memory)\n    {\n        return lenderPools[lender];\n    }\n\n    /**\n     * @notice Gets the details of a specified pool.\n     * @param pool The address of the pool.\n     * @return The details of the pool.\n     */\n    function getPoolDetails(address pool)\n        external\n        view\n        returns (IPoolOrganizer.PoolDetails memory)\n    {\n        require(poolDetails[pool].lender != address(0), \"Pool not registered\");\n        return poolDetails[pool];\n    }\n\n    /**\n     * @notice Gets the vault address associated with a pool.\n     * @param pool The address of the pool.\n     * @return The address of the vault.\n     */\n    function getVaultForPool(address pool) external view returns (address) {\n        require(\n            poolVaults[pool] != address(0),\n            \"Pool not registered or has no vault\"\n        );\n        return poolVaults[pool];\n    }\n\n    /**\n     * @notice Gets all registered pool addresses.\n     * @return An array of pool addresses.\n     */\n    function getAllPoolAddresses() external view returns (address[] memory) {\n        return pools;\n    }\n\n    /**\n     * @notice Grants factory access to the specified address.\n     * @param factoryAddress The address of the factory.\n     */\n    function grantFactoryAccess(address factoryAddress) external {\n        require(\n            hasRole(DEFAULT_ADMIN_ROLE, msg.sender),\n            \"Caller is not an admin\"\n        );\n        grantRole(POOL_MANAGER_ROLE, factoryAddress);\n        grantRole(DEFAULT_ADMIN_ROLE, factoryAddress);\n    }\n\n    /**\n     * @notice Registers a vault for a specified pool.\n     * @dev Registers the specified vault for the pool and emits a `VaultRegistered` event.\n     * @param pool The address of the pool.\n     * @param vault The address of the vault.\n     */\n    function registerVault(address pool, address vault) external {\n        require(pool != address(0) && vault != address(0), \"Invalid addresses\");\n        require(poolDetails[pool].lender != address(0), \"Pool not registered\");\n        require(\n            poolVaults[pool] == address(0),\n            \"Vault already registered for this pool\"\n        );\n\n        poolVaults[pool] = vault;\n        emit VaultRegistered(pool, vault);\n    }\n\n    // Private helper functions\n\n    /**\n     * @dev Removes a pool from the lender's array of pools.\n     * @param lender The address of the lender.\n     * @param pool The address of the pool.\n     */\n    function _removePoolFromLenderArray(address lender, address pool) private {\n        uint256 index = findIndexInArray(lenderPools[lender], pool);\n        uint256 lastIndex = lenderPools[lender].length - 1;\n        lenderPools[lender][index] = lenderPools[lender][lastIndex];\n        lenderPools[lender].pop();\n    }\n\n    /**\n     * @dev Removes a pool from the main array of pools.\n     * @param pool The address of the pool.\n     */\n    function _removePoolFromMainArray(address pool) private {\n        uint256 index = findIndexInArray(pools, pool);\n        uint256 lastIndex = pools.length - 1;\n        pools[index] = pools[lastIndex];\n        pools.pop();\n    }\n\n    /**\n     * @dev Finds the index of a target address in an array.\n     * @param array The array to search.\n     * @param target The target address.\n     * @return The index of the target address.\n     */\n    function findIndexInArray(address[] storage array, address target)\n        private\n        view\n        returns (uint256)\n    {\n        for (uint256 i = 0; i < array.length; i++) {\n            if (array[i] == target) return i;\n        }\n        return type(uint256).max; // Indicates not found\n    }\n\n    /**\n     * @dev Removes a pool from the borrower's array of pools.\n     * @param borrower The address of the borrower.\n     * @param pool The address of the pool.\n     */\n    function _removePoolFromBorrowerArray(address borrower, address pool)\n        private\n    {\n        uint256 index = findIndexInArray(borrowerPools[borrower], pool);\n        if (index < borrowerPools[borrower].length) {\n            uint256 lastIndex = borrowerPools[borrower].length - 1;\n            borrowerPools[borrower][index] = borrowerPools[borrower][lastIndex];\n            borrowerPools[borrower].pop();\n        }\n    }\n}\n"
			},
			"contracts/contracts/interfaces/IRewardManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ninterface IRewardManager {\r\n    /// @notice Registers a pool to be eligible for rewards, initializing its reward token.\r\n    /// @param pool The address of the pool to register.\r\n    /// @param rewardToken The ERC20 address for the reward token.\r\n    function registerPool(address pool, address rewardToken, bool isFlashPool) external;\r\n\r\n    /// @notice Accrues rewards for a specific pool.\r\n    /// @param pool The address of the pool.\r\n    function accrueRewards(address pool) external;\r\n\r\n    /// @notice Claims rewards for either the lender or borrower.\r\n    /// @param pool The address of the pool.\r\n    /// @param isLender True if the lender is claiming, false if the borrower.\r\n    function claimRewards(address pool, bool isLender) external;\r\n\r\n    /// @notice Deregisters a pool.\r\n    /// @param pool The address of the pool to deregister.\r\n    function deregisterPool(address pool) external;\r\n}\r\n"
			},
			"contracts/contracts/interfaces/IVaultManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n\r\n/// @title IVaultManager\r\n/// @dev Interface for the VaultManager contract.\r\ninterface IVaultManager {\r\n    /// @notice Registers a pool's vault upon creation.\r\n    /// @param pool Address of the pool.\r\n    function registerPoolVault(address pool) external;\r\n\r\n    /// @notice Deregisters a pool's vault upon loan closure.\r\n    /// @param pool Address of the pool.\r\n    function deregisterVault(address pool) external;\r\n\r\n    /// @notice Distributes accrued interest from a vault to a specified recipient.\r\n    /// @param pool Address of the pool initiating the interest payout.\r\n    /// @param to Recipient of the interest payment.\r\n    function distributeInterest(address pool, address to) external;\r\n\r\n    /// @notice Calculates the claimable interest for a user based on the pool's loan configuration.\r\n    /// @param pool Address of the pool for which to calculate interest.\r\n    /// @return amount The calculated interest amount.\r\n    function calculateClaimableInterest(address pool) external view returns (uint256);\r\n\r\n    /// @notice Refunds any remaining interest to the borrower when the loan is repaid.\r\n    /// @param pool Address of the pool.\r\n    /// @param borrower Address of the borrower.\r\n    function refundRemainingInterest(address pool, address borrower) external;\r\n    \r\n    /// @notice Handle the default for the lender to get remaining interest.\r\n    /// @param pool The address of the loan pool associated with this interest payment.\r\n    /// @param lender The lender address of that pool.\r\n    function handleDefault(address pool, address lender) external;\r\n}\r\n"
			},
			"contracts/contracts/interfaces/IPoolOrganizer.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\n/// @title IPoolOrganizer interface\r\n/// @notice Interface for the Pool Organizer contract managing pools, vaults, and rewards.\r\ninterface IPoolOrganizer {\r\n    enum PoolType { STANDARD, FLASH_LOAN }\r\n\r\n    enum LoanState {\r\n        CREATED,\r\n        PENDING,\r\n        ACTIVE,\r\n        DEFAULTED,\r\n        REPAID,\r\n        CLOSED,\r\n        FUNDED\r\n    }\r\n\r\n \r\n    struct PoolDetails {\r\n        address lender;\r\n        address borrower;\r\n        uint256 creationTime;\r\n        address vault;\r\n        IERC20 loanToken;\r\n        IERC20 assetToken;\r\n        IERC20 repaymentToken;\r\n        uint256 loanAmount;\r\n        uint256 interestRate;\r\n        uint256 repaymentPeriod;\r\n        PoolType poolType;\r\n        bool funded;\r\n        LoanState loanState;\r\n        address pool;\r\n    }\r\n\r\n    /// @notice Registers a new pool\r\n    /// @param pool The address of the pool contract\r\n    /// @param lender The address of the lender\r\n    /// @param borrower The address of the borrower\r\n    /// @param vault The address of the vault associated with the pool\r\n    /// @param loanToken The token to be loaned\r\n    /// @param assetToken The token used as collateral\r\n    /// @param repaymentToken The token used for loan repayment\r\n    /// @param loanAmount The amount of the loan\r\n    /// @param interestRate The interest rate of the loan\r\n    /// @param repaymentPeriod The loan repayment period\r\n    /// @param poolType The type of the pool (standard or flash loan)\r\n    function registerPool(\r\n        address pool,\r\n        address lender,\r\n        address borrower,\r\n        address vault,\r\n        IERC20 loanToken,\r\n        IERC20 assetToken,\r\n        IERC20 repaymentToken,\r\n        uint256 loanAmount,\r\n        uint256 interestRate,\r\n        uint256 repaymentPeriod,\r\n        PoolType poolType\r\n    \r\n    ) external;\r\n\r\n    /// @notice Deregisters a pool\r\n    /// @param pool The address of the pool to deregister\r\n    function deregisterPool(address pool) external;\r\n\r\n    /// @notice Gets the total number of registered pools\r\n    /// @return The total number of registered pools\r\n    function getTotalPools() external view returns (uint256);\r\n\r\n    /// @notice Retrieves all pool addresses associated with a specific lender\r\n    /// @param lender The address of the lender\r\n    /// @return An array of pool addresses\r\n    function getPoolsByLender(address lender) external view returns (address[] memory);\r\n\r\n    /// @notice Retrieves the loan state of a specific pool\r\n    /// @param pool The address of the pool\r\n    /// @return The loan state of the specified pool\r\n    function getLoanState(address pool) external view returns (LoanState);\r\n\r\n    /// @notice Updates the loan state of a specific pool\r\n    /// @param pool The address of the pool\r\n    /// @param newState The new state of the loan\r\n    function updateLoanState(address pool, LoanState newState) external;\r\n\r\n    /// @notice Retrieves detailed information about a specific pool\r\n    /// @param pool The address of the pool\r\n    /// @return The details of the specified pool\r\n    function getPoolDetails(address pool) external view returns (PoolDetails memory);\r\n\r\n    /// @notice Retrieves the associated vault address for a given pool\r\n    /// @param pool The address of the pool\r\n    /// @return The address of the linked vault\r\n    function getVaultForPool(address pool) external view returns (address);\r\n\r\n    /// @notice Grants factory access to manage pools\r\n    /// @param factoryAddress The address of the factory to be granted access\r\n    function grantFactoryAccess(address factoryAddress) external;\r\n\r\n    /// @notice Registers a vault for a specific pool\r\n    /// @param pool The address of the pool\r\n    /// @param vault The address of the vault\r\n    function registerVault(address pool, address vault) external;\r\n\r\n    /// @notice Registers manager contracts for managing vaults and rewards\r\n    /// @param _vaultManager The address of the VaultManager contract\r\n    /// @param _rewardManager The address of the RewardManager contract\r\n    function registerManagers(address _vaultManager, address _rewardManager) external;\r\n\r\n    /// @notice Marks a pool as funded\r\n    /// @param pool The address of the pool to mark as funded\r\n    function markPoolAsFunded(address pool) external;\r\n     \r\n    /// @notice Sets the borrower for a specified pool\r\n    /// @param pool The address of the pool\r\n    /// @param newBorrower The address of the new borrower\r\n    function setBorrowerForPool(address pool, address newBorrower) external;\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/interfaces/IPoolOrganizer.sol": {
				"IPoolOrganizer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "deregisterPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getLoanState",
							"outputs": [
								{
									"internalType": "enum IPoolOrganizer.LoanState",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getPoolDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "lender",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "borrower",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "creationTime",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "vault",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "loanToken",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "assetToken",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "repaymentToken",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "loanAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "interestRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "repaymentPeriod",
											"type": "uint256"
										},
										{
											"internalType": "enum IPoolOrganizer.PoolType",
											"name": "poolType",
											"type": "uint8"
										},
										{
											"internalType": "bool",
											"name": "funded",
											"type": "bool"
										},
										{
											"internalType": "enum IPoolOrganizer.LoanState",
											"name": "loanState",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "pool",
											"type": "address"
										}
									],
									"internalType": "struct IPoolOrganizer.PoolDetails",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								}
							],
							"name": "getPoolsByLender",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalPools",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getVaultForPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "factoryAddress",
									"type": "address"
								}
							],
							"name": "grantFactoryAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "markPoolAsFunded",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vaultManager",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardManager",
									"type": "address"
								}
							],
							"name": "registerManagers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "loanToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "assetToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "repaymentToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "loanAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "repaymentPeriod",
									"type": "uint256"
								},
								{
									"internalType": "enum IPoolOrganizer.PoolType",
									"name": "poolType",
									"type": "uint8"
								}
							],
							"name": "registerPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "registerVault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newBorrower",
									"type": "address"
								}
							],
							"name": "setBorrowerForPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "enum IPoolOrganizer.LoanState",
									"name": "newState",
									"type": "uint8"
								}
							],
							"name": "updateLoanState",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"deregisterPool(address)": {
								"params": {
									"pool": "The address of the pool to deregister"
								}
							},
							"getLoanState(address)": {
								"params": {
									"pool": "The address of the pool"
								},
								"returns": {
									"_0": "The loan state of the specified pool"
								}
							},
							"getPoolDetails(address)": {
								"params": {
									"pool": "The address of the pool"
								},
								"returns": {
									"_0": "The details of the specified pool"
								}
							},
							"getPoolsByLender(address)": {
								"params": {
									"lender": "The address of the lender"
								},
								"returns": {
									"_0": "An array of pool addresses"
								}
							},
							"getTotalPools()": {
								"returns": {
									"_0": "The total number of registered pools"
								}
							},
							"getVaultForPool(address)": {
								"params": {
									"pool": "The address of the pool"
								},
								"returns": {
									"_0": "The address of the linked vault"
								}
							},
							"grantFactoryAccess(address)": {
								"params": {
									"factoryAddress": "The address of the factory to be granted access"
								}
							},
							"markPoolAsFunded(address)": {
								"params": {
									"pool": "The address of the pool to mark as funded"
								}
							},
							"registerManagers(address,address)": {
								"params": {
									"_rewardManager": "The address of the RewardManager contract",
									"_vaultManager": "The address of the VaultManager contract"
								}
							},
							"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)": {
								"params": {
									"assetToken": "The token used as collateral",
									"borrower": "The address of the borrower",
									"interestRate": "The interest rate of the loan",
									"lender": "The address of the lender",
									"loanAmount": "The amount of the loan",
									"loanToken": "The token to be loaned",
									"pool": "The address of the pool contract",
									"poolType": "The type of the pool (standard or flash loan)",
									"repaymentPeriod": "The loan repayment period",
									"repaymentToken": "The token used for loan repayment",
									"vault": "The address of the vault associated with the pool"
								}
							},
							"registerVault(address,address)": {
								"params": {
									"pool": "The address of the pool",
									"vault": "The address of the vault"
								}
							},
							"setBorrowerForPool(address,address)": {
								"params": {
									"newBorrower": "The address of the new borrower",
									"pool": "The address of the pool"
								}
							},
							"updateLoanState(address,uint8)": {
								"params": {
									"newState": "The new state of the loan",
									"pool": "The address of the pool"
								}
							}
						},
						"title": "IPoolOrganizer interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deregisterPool(address)": "7e72c7d7",
							"getLoanState(address)": "c81c3bef",
							"getPoolDetails(address)": "d3e90fa0",
							"getPoolsByLender(address)": "24a44efb",
							"getTotalPools()": "d3ffe67a",
							"getVaultForPool(address)": "7570e389",
							"grantFactoryAccess(address)": "5d102df7",
							"markPoolAsFunded(address)": "1f2f2e14",
							"registerManagers(address,address)": "c489579d",
							"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)": "43756020",
							"registerVault(address,address)": "05c4fdf9",
							"setBorrowerForPool(address,address)": "37e238c5",
							"updateLoanState(address,uint8)": "a956239b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"deregisterPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getLoanState\",\"outputs\":[{\"internalType\":\"enum IPoolOrganizer.LoanState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"loanToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"repaymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"enum IPoolOrganizer.PoolType\",\"name\":\"poolType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"funded\",\"type\":\"bool\"},{\"internalType\":\"enum IPoolOrganizer.LoanState\",\"name\":\"loanState\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"internalType\":\"struct IPoolOrganizer.PoolDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"}],\"name\":\"getPoolsByLender\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getVaultForPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"}],\"name\":\"grantFactoryAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"markPoolAsFunded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardManager\",\"type\":\"address\"}],\"name\":\"registerManagers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"loanToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"repaymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"enum IPoolOrganizer.PoolType\",\"name\":\"poolType\",\"type\":\"uint8\"}],\"name\":\"registerPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"registerVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newBorrower\",\"type\":\"address\"}],\"name\":\"setBorrowerForPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"enum IPoolOrganizer.LoanState\",\"name\":\"newState\",\"type\":\"uint8\"}],\"name\":\"updateLoanState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deregisterPool(address)\":{\"params\":{\"pool\":\"The address of the pool to deregister\"}},\"getLoanState(address)\":{\"params\":{\"pool\":\"The address of the pool\"},\"returns\":{\"_0\":\"The loan state of the specified pool\"}},\"getPoolDetails(address)\":{\"params\":{\"pool\":\"The address of the pool\"},\"returns\":{\"_0\":\"The details of the specified pool\"}},\"getPoolsByLender(address)\":{\"params\":{\"lender\":\"The address of the lender\"},\"returns\":{\"_0\":\"An array of pool addresses\"}},\"getTotalPools()\":{\"returns\":{\"_0\":\"The total number of registered pools\"}},\"getVaultForPool(address)\":{\"params\":{\"pool\":\"The address of the pool\"},\"returns\":{\"_0\":\"The address of the linked vault\"}},\"grantFactoryAccess(address)\":{\"params\":{\"factoryAddress\":\"The address of the factory to be granted access\"}},\"markPoolAsFunded(address)\":{\"params\":{\"pool\":\"The address of the pool to mark as funded\"}},\"registerManagers(address,address)\":{\"params\":{\"_rewardManager\":\"The address of the RewardManager contract\",\"_vaultManager\":\"The address of the VaultManager contract\"}},\"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)\":{\"params\":{\"assetToken\":\"The token used as collateral\",\"borrower\":\"The address of the borrower\",\"interestRate\":\"The interest rate of the loan\",\"lender\":\"The address of the lender\",\"loanAmount\":\"The amount of the loan\",\"loanToken\":\"The token to be loaned\",\"pool\":\"The address of the pool contract\",\"poolType\":\"The type of the pool (standard or flash loan)\",\"repaymentPeriod\":\"The loan repayment period\",\"repaymentToken\":\"The token used for loan repayment\",\"vault\":\"The address of the vault associated with the pool\"}},\"registerVault(address,address)\":{\"params\":{\"pool\":\"The address of the pool\",\"vault\":\"The address of the vault\"}},\"setBorrowerForPool(address,address)\":{\"params\":{\"newBorrower\":\"The address of the new borrower\",\"pool\":\"The address of the pool\"}},\"updateLoanState(address,uint8)\":{\"params\":{\"newState\":\"The new state of the loan\",\"pool\":\"The address of the pool\"}}},\"title\":\"IPoolOrganizer interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deregisterPool(address)\":{\"notice\":\"Deregisters a pool\"},\"getLoanState(address)\":{\"notice\":\"Retrieves the loan state of a specific pool\"},\"getPoolDetails(address)\":{\"notice\":\"Retrieves detailed information about a specific pool\"},\"getPoolsByLender(address)\":{\"notice\":\"Retrieves all pool addresses associated with a specific lender\"},\"getTotalPools()\":{\"notice\":\"Gets the total number of registered pools\"},\"getVaultForPool(address)\":{\"notice\":\"Retrieves the associated vault address for a given pool\"},\"grantFactoryAccess(address)\":{\"notice\":\"Grants factory access to manage pools\"},\"markPoolAsFunded(address)\":{\"notice\":\"Marks a pool as funded\"},\"registerManagers(address,address)\":{\"notice\":\"Registers manager contracts for managing vaults and rewards\"},\"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)\":{\"notice\":\"Registers a new pool\"},\"registerVault(address,address)\":{\"notice\":\"Registers a vault for a specific pool\"},\"setBorrowerForPool(address,address)\":{\"notice\":\"Sets the borrower for a specified pool\"},\"updateLoanState(address,uint8)\":{\"notice\":\"Updates the loan state of a specific pool\"}},\"notice\":\"Interface for the Pool Organizer contract managing pools, vaults, and rewards.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/IPoolOrganizer.sol\":\"IPoolOrganizer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contracts/contracts/interfaces/IPoolOrganizer.sol\":{\"keccak256\":\"0x0ce052094139df49200b21b6c088c9997ddc2c688f4528d1fcdfb0c0414080a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c18bdcccf32a2a9e7fb8e347b80d09032c8fe64dcb02e6b92a4b99c6d7a16a8\",\"dweb:/ipfs/QmVprNk8mRzHy6GWT6bhBPmgtj3U3rkN8LamBAwES92GMh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deregisterPool(address)": {
								"notice": "Deregisters a pool"
							},
							"getLoanState(address)": {
								"notice": "Retrieves the loan state of a specific pool"
							},
							"getPoolDetails(address)": {
								"notice": "Retrieves detailed information about a specific pool"
							},
							"getPoolsByLender(address)": {
								"notice": "Retrieves all pool addresses associated with a specific lender"
							},
							"getTotalPools()": {
								"notice": "Gets the total number of registered pools"
							},
							"getVaultForPool(address)": {
								"notice": "Retrieves the associated vault address for a given pool"
							},
							"grantFactoryAccess(address)": {
								"notice": "Grants factory access to manage pools"
							},
							"markPoolAsFunded(address)": {
								"notice": "Marks a pool as funded"
							},
							"registerManagers(address,address)": {
								"notice": "Registers manager contracts for managing vaults and rewards"
							},
							"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)": {
								"notice": "Registers a new pool"
							},
							"registerVault(address,address)": {
								"notice": "Registers a vault for a specific pool"
							},
							"setBorrowerForPool(address,address)": {
								"notice": "Sets the borrower for a specified pool"
							},
							"updateLoanState(address,uint8)": {
								"notice": "Updates the loan state of a specific pool"
							}
						},
						"notice": "Interface for the Pool Organizer contract managing pools, vaults, and rewards.",
						"version": 1
					}
				}
			},
			"contracts/contracts/interfaces/IRewardManager.sol": {
				"IRewardManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "accrueRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isLender",
									"type": "bool"
								}
							],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "deregisterPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewardToken",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isFlashPool",
									"type": "bool"
								}
							],
							"name": "registerPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"accrueRewards(address)": {
								"params": {
									"pool": "The address of the pool."
								}
							},
							"claimRewards(address,bool)": {
								"params": {
									"isLender": "True if the lender is claiming, false if the borrower.",
									"pool": "The address of the pool."
								}
							},
							"deregisterPool(address)": {
								"params": {
									"pool": "The address of the pool to deregister."
								}
							},
							"registerPool(address,address,bool)": {
								"params": {
									"pool": "The address of the pool to register.",
									"rewardToken": "The ERC20 address for the reward token."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"accrueRewards(address)": "3d39955c",
							"claimRewards(address,bool)": "491c011a",
							"deregisterPool(address)": "7e72c7d7",
							"registerPool(address,address,bool)": "77ff76e7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"accrueRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isLender\",\"type\":\"bool\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"deregisterPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isFlashPool\",\"type\":\"bool\"}],\"name\":\"registerPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"accrueRewards(address)\":{\"params\":{\"pool\":\"The address of the pool.\"}},\"claimRewards(address,bool)\":{\"params\":{\"isLender\":\"True if the lender is claiming, false if the borrower.\",\"pool\":\"The address of the pool.\"}},\"deregisterPool(address)\":{\"params\":{\"pool\":\"The address of the pool to deregister.\"}},\"registerPool(address,address,bool)\":{\"params\":{\"pool\":\"The address of the pool to register.\",\"rewardToken\":\"The ERC20 address for the reward token.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accrueRewards(address)\":{\"notice\":\"Accrues rewards for a specific pool.\"},\"claimRewards(address,bool)\":{\"notice\":\"Claims rewards for either the lender or borrower.\"},\"deregisterPool(address)\":{\"notice\":\"Deregisters a pool.\"},\"registerPool(address,address,bool)\":{\"notice\":\"Registers a pool to be eligible for rewards, initializing its reward token.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/IRewardManager.sol\":\"IRewardManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/interfaces/IRewardManager.sol\":{\"keccak256\":\"0x692870b248c0b71185a5c030f853306d6a4c3a25180a3f57ff56dfb2da59a9d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27ba33e21e32b7bfff41db71f93f4ba9a427659a2c04fdf8510087963dbcb62\",\"dweb:/ipfs/QmcnnmcjEc7gkPNHKLECceA9FdVryvK9qKppnakhXGgNMh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"accrueRewards(address)": {
								"notice": "Accrues rewards for a specific pool."
							},
							"claimRewards(address,bool)": {
								"notice": "Claims rewards for either the lender or borrower."
							},
							"deregisterPool(address)": {
								"notice": "Deregisters a pool."
							},
							"registerPool(address,address,bool)": {
								"notice": "Registers a pool to be eligible for rewards, initializing its reward token."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/contracts/interfaces/IVaultManager.sol": {
				"IVaultManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "calculateClaimableInterest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "deregisterVault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "distributeInterest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								}
							],
							"name": "handleDefault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								}
							],
							"name": "refundRemainingInterest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "registerPoolVault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the VaultManager contract.",
						"kind": "dev",
						"methods": {
							"calculateClaimableInterest(address)": {
								"params": {
									"pool": "Address of the pool for which to calculate interest."
								},
								"returns": {
									"_0": "amount The calculated interest amount."
								}
							},
							"deregisterVault(address)": {
								"params": {
									"pool": "Address of the pool."
								}
							},
							"distributeInterest(address,address)": {
								"params": {
									"pool": "Address of the pool initiating the interest payout.",
									"to": "Recipient of the interest payment."
								}
							},
							"handleDefault(address,address)": {
								"params": {
									"lender": "The lender address of that pool.",
									"pool": "The address of the loan pool associated with this interest payment."
								}
							},
							"refundRemainingInterest(address,address)": {
								"params": {
									"borrower": "Address of the borrower.",
									"pool": "Address of the pool."
								}
							},
							"registerPoolVault(address)": {
								"params": {
									"pool": "Address of the pool."
								}
							}
						},
						"title": "IVaultManager",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateClaimableInterest(address)": "51b2d521",
							"deregisterVault(address)": "38e270ed",
							"distributeInterest(address,address)": "d302bf76",
							"handleDefault(address,address)": "713c00ce",
							"refundRemainingInterest(address,address)": "56f78a1d",
							"registerPoolVault(address)": "5228a4da"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"calculateClaimableInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"deregisterVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"distributeInterest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"}],\"name\":\"handleDefault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"refundRemainingInterest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"registerPoolVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the VaultManager contract.\",\"kind\":\"dev\",\"methods\":{\"calculateClaimableInterest(address)\":{\"params\":{\"pool\":\"Address of the pool for which to calculate interest.\"},\"returns\":{\"_0\":\"amount The calculated interest amount.\"}},\"deregisterVault(address)\":{\"params\":{\"pool\":\"Address of the pool.\"}},\"distributeInterest(address,address)\":{\"params\":{\"pool\":\"Address of the pool initiating the interest payout.\",\"to\":\"Recipient of the interest payment.\"}},\"handleDefault(address,address)\":{\"params\":{\"lender\":\"The lender address of that pool.\",\"pool\":\"The address of the loan pool associated with this interest payment.\"}},\"refundRemainingInterest(address,address)\":{\"params\":{\"borrower\":\"Address of the borrower.\",\"pool\":\"Address of the pool.\"}},\"registerPoolVault(address)\":{\"params\":{\"pool\":\"Address of the pool.\"}}},\"title\":\"IVaultManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calculateClaimableInterest(address)\":{\"notice\":\"Calculates the claimable interest for a user based on the pool's loan configuration.\"},\"deregisterVault(address)\":{\"notice\":\"Deregisters a pool's vault upon loan closure.\"},\"distributeInterest(address,address)\":{\"notice\":\"Distributes accrued interest from a vault to a specified recipient.\"},\"handleDefault(address,address)\":{\"notice\":\"Handle the default for the lender to get remaining interest.\"},\"refundRemainingInterest(address,address)\":{\"notice\":\"Refunds any remaining interest to the borrower when the loan is repaid.\"},\"registerPoolVault(address)\":{\"notice\":\"Registers a pool's vault upon creation.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/IVaultManager.sol\":\"IVaultManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/interfaces/IVaultManager.sol\":{\"keccak256\":\"0xdd866073f1029189ab6d2f04f7cdf481fb48e9e12ef4f9cd2376778674ce1f1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d1aef045b26166c370937ef37a8917a00d63021343795f47c30516745e3786d\",\"dweb:/ipfs/QmbAuF7Ufd78MYjnYKUybDtGDVFcn7e6wSNN8hEg6fGFg5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"calculateClaimableInterest(address)": {
								"notice": "Calculates the claimable interest for a user based on the pool's loan configuration."
							},
							"deregisterVault(address)": {
								"notice": "Deregisters a pool's vault upon loan closure."
							},
							"distributeInterest(address,address)": {
								"notice": "Distributes accrued interest from a vault to a specified recipient."
							},
							"handleDefault(address,address)": {
								"notice": "Handle the default for the lender to get remaining interest."
							},
							"refundRemainingInterest(address,address)": {
								"notice": "Refunds any remaining interest to the borrower when the loan is repaid."
							},
							"registerPoolVault(address)": {
								"notice": "Registers a pool's vault upon creation."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/contracts/protocol/PoolOrganizer.sol": {
				"PoolOrganizer": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "enum IPoolOrganizer.LoanState",
									"name": "oldState",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "enum IPoolOrganizer.LoanState",
									"name": "newState",
									"type": "uint8"
								}
							],
							"name": "LoanStateUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "vaultManager",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "rewardManager",
									"type": "address"
								}
							],
							"name": "ManagerRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "PoolDeregistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "lender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "enum IPoolOrganizer.PoolType",
									"name": "poolType",
									"type": "uint8"
								}
							],
							"name": "PoolRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "VaultRegistered",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "POOL_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "deregisterPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								}
							],
							"name": "getAllLenderPoolDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "lender",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "borrower",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "creationTime",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "vault",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "loanToken",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "assetToken",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "repaymentToken",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "loanAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "interestRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "repaymentPeriod",
											"type": "uint256"
										},
										{
											"internalType": "enum IPoolOrganizer.PoolType",
											"name": "poolType",
											"type": "uint8"
										},
										{
											"internalType": "bool",
											"name": "funded",
											"type": "bool"
										},
										{
											"internalType": "enum IPoolOrganizer.LoanState",
											"name": "loanState",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "pool",
											"type": "address"
										}
									],
									"internalType": "struct IPoolOrganizer.PoolDetails[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllPoolAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								}
							],
							"name": "getBorrowerPoolDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "lender",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "borrower",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "creationTime",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "vault",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "loanToken",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "assetToken",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "repaymentToken",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "loanAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "interestRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "repaymentPeriod",
											"type": "uint256"
										},
										{
											"internalType": "enum IPoolOrganizer.PoolType",
											"name": "poolType",
											"type": "uint8"
										},
										{
											"internalType": "bool",
											"name": "funded",
											"type": "bool"
										},
										{
											"internalType": "enum IPoolOrganizer.LoanState",
											"name": "loanState",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "pool",
											"type": "address"
										}
									],
									"internalType": "struct IPoolOrganizer.PoolDetails[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getLoanState",
							"outputs": [
								{
									"internalType": "enum IPoolOrganizer.LoanState",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getManagers",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getPoolDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "lender",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "borrower",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "creationTime",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "vault",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "loanToken",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "assetToken",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "repaymentToken",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "loanAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "interestRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "repaymentPeriod",
											"type": "uint256"
										},
										{
											"internalType": "enum IPoolOrganizer.PoolType",
											"name": "poolType",
											"type": "uint8"
										},
										{
											"internalType": "bool",
											"name": "funded",
											"type": "bool"
										},
										{
											"internalType": "enum IPoolOrganizer.LoanState",
											"name": "loanState",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "pool",
											"type": "address"
										}
									],
									"internalType": "struct IPoolOrganizer.PoolDetails",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								}
							],
							"name": "getPoolsByBorrower",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								}
							],
							"name": "getPoolsByLender",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalPools",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getVaultForPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "factoryAddress",
									"type": "address"
								}
							],
							"name": "grantFactoryAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "markPoolAsFunded",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "poolVaults",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vaultManager",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardManager",
									"type": "address"
								}
							],
							"name": "registerManagers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "loanToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "assetToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "repaymentToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "loanAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "repaymentPeriod",
									"type": "uint256"
								},
								{
									"internalType": "enum IPoolOrganizer.PoolType",
									"name": "poolType",
									"type": "uint8"
								}
							],
							"name": "registerPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "registerVault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardManager",
							"outputs": [
								{
									"internalType": "contract IRewardManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newBorrower",
									"type": "address"
								}
							],
							"name": "setBorrowerForPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "enum IPoolOrganizer.LoanState",
									"name": "newState",
									"type": "uint8"
								}
							],
							"name": "updateLoanState",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vaultManager",
							"outputs": [
								{
									"internalType": "contract IVaultManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implements access control and management for pool lifecycle and integration with external managers.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"LoanStateUpdated(address,uint8,uint8)": {
								"details": "Emitted when the loan state of a pool is updated.",
								"params": {
									"newState": "The new state of the loan.",
									"oldState": "The previous state of the loan.",
									"pool": "The address of the pool."
								}
							},
							"ManagerRegistered(address,address)": {
								"details": "Emitted when managers are registered.",
								"params": {
									"rewardManager": "The address of the reward manager.",
									"vaultManager": "The address of the vault manager."
								}
							},
							"PoolDeregistered(address)": {
								"details": "Emitted when a pool is deregistered.",
								"params": {
									"pool": "The address of the deregistered pool."
								}
							},
							"PoolRegistered(address,address,address,address,uint8)": {
								"details": "Emitted when a new pool is registered.",
								"params": {
									"borrower": "The address of the borrower.",
									"lender": "The address of the lender.",
									"pool": "The address of the pool.",
									"poolType": "The type of the pool.",
									"vault": "The address of the vault associated with the pool."
								}
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"VaultRegistered(address,address)": {
								"details": "Emitted when a vault is registered for a pool.",
								"params": {
									"pool": "The address of the pool.",
									"vault": "The address of the registered vault."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Constructor that grants the deployer the admin and pool manager roles."
							},
							"deregisterPool(address)": {
								"details": "Deregisters the specified pool and emits a `PoolDeregistered` event.",
								"params": {
									"pool": "The address of the pool to deregister."
								}
							},
							"getAllLenderPoolDetails(address)": {
								"params": {
									"lender": "The address of the lender."
								},
								"returns": {
									"_0": "An array of pool details."
								}
							},
							"getAllPoolAddresses()": {
								"returns": {
									"_0": "An array of pool addresses."
								}
							},
							"getBorrowerPoolDetails(address)": {
								"params": {
									"borrower": "The address of the borrower."
								},
								"returns": {
									"_0": "An array of pool details."
								}
							},
							"getLoanState(address)": {
								"params": {
									"pool": "The address of the pool."
								},
								"returns": {
									"_0": "The current loan state of the pool."
								}
							},
							"getManagers()": {
								"returns": {
									"_0": "The addresses of the vault and reward managers."
								}
							},
							"getPoolDetails(address)": {
								"params": {
									"pool": "The address of the pool."
								},
								"returns": {
									"_0": "The details of the pool."
								}
							},
							"getPoolsByBorrower(address)": {
								"params": {
									"borrower": "The address of the borrower."
								},
								"returns": {
									"_0": "An array of pool addresses."
								}
							},
							"getPoolsByLender(address)": {
								"params": {
									"lender": "The address of the lender."
								},
								"returns": {
									"_0": "An array of pool addresses."
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getTotalPools()": {
								"returns": {
									"_0": "The total number of pools."
								}
							},
							"getVaultForPool(address)": {
								"params": {
									"pool": "The address of the pool."
								},
								"returns": {
									"_0": "The address of the vault."
								}
							},
							"grantFactoryAccess(address)": {
								"params": {
									"factoryAddress": "The address of the factory."
								}
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"markPoolAsFunded(address)": {
								"details": "Marks the specified pool as funded.",
								"params": {
									"pool": "The address of the pool to mark as funded."
								}
							},
							"registerManagers(address,address)": {
								"details": "Registers the specified managers and emits a `ManagerRegistered` event.",
								"params": {
									"_rewardManager": "The address of the reward manager.",
									"_vaultManager": "The address of the vault manager."
								}
							},
							"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)": {
								"details": "Registers a pool and emits a `PoolRegistered` event.",
								"params": {
									"assetToken": "The ERC20 token for the asset.",
									"borrower": "The address of the borrower.",
									"interestRate": "The interest rate for the loan.",
									"lender": "The address of the lender.",
									"loanAmount": "The amount of the loan.",
									"loanToken": "The ERC20 token for the loan.",
									"pool": "The address of the pool.",
									"poolType": "The type of the pool.",
									"repaymentPeriod": "The repayment period for the loan.",
									"repaymentToken": "The ERC20 token for the repayment.",
									"vault": "The address of the vault."
								}
							},
							"registerVault(address,address)": {
								"details": "Registers the specified vault for the pool and emits a `VaultRegistered` event.",
								"params": {
									"pool": "The address of the pool.",
									"vault": "The address of the vault."
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"setBorrowerForPool(address,address)": {
								"params": {
									"newBorrower": "The address of the new borrower.",
									"pool": "The address of the pool."
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"updateLoanState(address,uint8)": {
								"params": {
									"newState": "The new state of the loan.",
									"pool": "The address of the pool."
								}
							}
						},
						"title": "Pool Organizer for managing pools, vaults, and rewards.",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":428:14840  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2611:2735  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2635:2677  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2666:2676  msg.sender */\n  caller\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2635:2645  _grantRole */\n  tag_5\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2635:2677  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_4:\n  pop\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2687:2728  _grantRole(POOL_MANAGER_ROLE, msg.sender) */\n  tag_6\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":534:564  keccak256(\"POOL_MANAGER_ROLE\") */\n  0x6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2717:2727  msg.sender */\n  caller\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2687:2697  _grantRole */\n  tag_5\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":2687:2728  _grantRole(POOL_MANAGER_ROLE, msg.sender) */\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":428:14840  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  jump(tag_7)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  dup2\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup4\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  dup7\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_12\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\ntag_12:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/contracts/protocol/PoolOrganizer.sol\":428:14840  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":428:14840  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7570e389\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xc489579d\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xd3ffe67a\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xd3ffe67a\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe7ef32f7\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xec209544\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0xc489579d\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc56f1b44\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xc81c3bef\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xd3e90fa0\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x91d14854\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa8d088bb\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa956239b\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x7570e389\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x7e72c7d7\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8a4adf24\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x43756020\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x43756020\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x52fc9b0e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x56d73568\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5d102df7\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x2f2ff15d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x37e238c5\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x1e4966ab\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x1e4966ab\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1f2f2e14\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x24a44efb\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x05c4fdf9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0f4ef8a6\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n        /* \"#utility.yul\":566:580   */\n      swap1\n      iszero\n        /* \"#utility.yul\":559:581   */\n      iszero\n        /* \"#utility.yul\":541:582   */\n      dup2\n      mstore\n        /* \"#utility.yul\":529:531   */\n      0x20\n        /* \"#utility.yul\":514:532   */\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12416:12848  function registerVault(address pool, address vault) external {... */\n    tag_4:\n      tag_45\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":610:645  IRewardManager public rewardManager */\n    tag_5:\n      sload(0x02)\n      tag_49\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_49:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1433:1465   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1415:1466   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1403:1405   */\n      0x20\n        /* \"#utility.yul\":1388:1406   */\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":610:645  IRewardManager public rewardManager */\n      tag_43\n        /* \"#utility.yul\":1247:1472   */\n      jump\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":808:853  mapping(address => address) public poolVaults */\n    tag_6:\n      tag_49\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5417:5594  function markPoolAsFunded(address pool) external {... */\n    tag_7:\n      tag_45\n      tag_60\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_8:\n      tag_62\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      jump\n    tag_62:\n      mload(0x40)\n        /* \"#utility.yul\":2314:2339   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2302:2304   */\n      0x20\n        /* \"#utility.yul\":2287:2305   */\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      tag_43\n        /* \"#utility.yul\":2168:2345   */\n      jump\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10543:10697  function getPoolsByLender(address lender)... */\n    tag_9:\n      tag_68\n      tag_69\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_10:\n      tag_45\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_11:\n      tag_45\n      tag_78\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8405:9037  function setBorrowerForPool(address pool, address newBorrower) external {... */\n    tag_12:\n      tag_45\n      tag_81\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3468:4736  function registerPool(... */\n    tag_13:\n      tag_45\n      tag_84\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6066:6588  function getAllLenderPoolDetails(address lender)... */\n    tag_14:\n      tag_87\n      tag_88\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":490:564  bytes32 public constant POOL_MANAGER_ROLE = keccak256(\"POOL_MANAGER_ROLE\") */\n    tag_15:\n      tag_62\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":534:564  keccak256(\"POOL_MANAGER_ROLE\") */\n      0x6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":490:564  bytes32 public constant POOL_MANAGER_ROLE = keccak256(\"POOL_MANAGER_ROLE\") */\n      dup2\n      jump\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11862:12157  function grantFactoryAccess(address factoryAddress) external {... */\n    tag_16:\n      tag_45\n      tag_96\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11270:11503  function getVaultForPool(address pool) external view returns (address) {... */\n    tag_17:\n      tag_49\n      tag_99\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7844:8225  function deregisterPool(address pool) external {... */\n    tag_18:\n      tag_45\n      tag_103\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":571:604  IVaultManager public vaultManager */\n    tag_19:\n      sload(0x01)\n      tag_49\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_20:\n      tag_39\n      tag_110\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_21:\n      tag_62\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10024:10159  function getManagers() external view returns (address, address) {... */\n    tag_22:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10114:10126  vaultManager */\n      sload(0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10137:10150  rewardManager */\n      sload(0x02)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10024:10159  function getManagers() external view returns (address, address) {... */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10114:10126  vaultManager */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":8181:8232   */\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10137:10150  rewardManager */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":8263:8265   */\n      0x20\n        /* \"#utility.yul\":8248:8266   */\n      dup4\n      add\n        /* \"#utility.yul\":8241:8301   */\n      mstore\n        /* \"#utility.yul\":8154:8172   */\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10024:10159  function getManagers() external view returns (address, address) {... */\n      tag_43\n        /* \"#utility.yul\":8007:8307   */\n      jump\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4950:5246  function updateLoanState(address pool, LoanState newState) external {... */\n    tag_23:\n      tag_45\n      tag_121\n      calldatasize\n      0x04\n      tag_122\n      jump\t// in\n    tag_121:\n      tag_123\n      jump\t// in\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":9325:9877  function registerManagers(address _vaultManager, address _rewardManager)... */\n    tag_24:\n      tag_45\n      tag_125\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11619:11720  function getAllPoolAddresses() external view returns (address[] memory) {... */\n    tag_25:\n      tag_68\n      tag_128\n      jump\t// in\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5774:5884  function getLoanState(address pool) external view returns (LoanState) {... */\n    tag_26:\n      tag_130\n      tag_131\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5861:5877  loanStates[pool] */\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5833:5842  LoanState */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5861:5877  loanStates[pool] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5861:5871  loanStates */\n      0x08\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5861:5877  loanStates[pool] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5774:5884  function getLoanState(address pool) external view returns (LoanState) {... */\n      jump\n    tag_130:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10856:11101  function getPoolDetails(address pool)... */\n    tag_27:\n      tag_135\n      tag_136\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_136:\n      tag_137\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10281:10374  function getTotalPools() external view returns (uint256) {... */\n    tag_28:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10355:10360  pools */\n      0x03\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10355:10367  pools.length */\n      sload\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10281:10374  function getTotalPools() external view returns (uint256) {... */\n      jump(tag_62)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_29:\n      tag_45\n      tag_145\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_145:\n      tag_146\n      jump\t// in\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6763:6925  function getPoolsByBorrower(address borrower)... */\n    tag_30:\n      tag_68\n      tag_148\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_148:\n      tag_149\n      jump\t// in\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7113:7648  function getBorrowerPoolDetails(address borrower)... */\n    tag_31:\n      tag_87\n      tag_152\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_152:\n      tag_153\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_157\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n    tag_157:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12416:12848  function registerVault(address pool, address vault) external {... */\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12495:12513  pool != address(0) */\n      dup3\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12495:12536  pool != address(0) && vault != address(0) */\n      tag_160\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12517:12536  vault != address(0) */\n      dup2\n      and\n      iszero\n      iszero\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12495:12536  pool != address(0) && vault != address(0) */\n    tag_160:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12487:12558  require(pool != address(0) && vault != address(0), \"Invalid addresses\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9585:9587   */\n      0x20\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12487:12558  require(pool != address(0) && vault != address(0), \"Invalid addresses\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9567:9588   */\n      mstore\n        /* \"#utility.yul\":9624:9626   */\n      0x11\n        /* \"#utility.yul\":9604:9622   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9597:9627   */\n      mstore\n      shl(0x78, 0x496e76616c696420616464726573736573)\n        /* \"#utility.yul\":9643:9661   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9636:9683   */\n      mstore\n        /* \"#utility.yul\":9700:9718   */\n      0x64\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12487:12558  require(pool != address(0) && vault != address(0), \"Invalid addresses\") */\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12576:12593  poolDetails[pool] */\n      dup3\n      dup2\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12612:12613  0 */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12576:12593  poolDetails[pool] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12576:12587  poolDetails */\n      0x04\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12576:12593  poolDetails[pool] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12576:12600  poolDetails[pool].lender */\n      sload\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12568:12638  require(poolDetails[pool].lender != address(0), \"Pool not registered\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_166\n      jump\t// in\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12669:12685  poolVaults[pool] */\n      dup3\n      dup2\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12697:12698  0 */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12669:12685  poolVaults[pool] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12669:12679  poolVaults */\n      0x06\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12669:12685  poolVaults[pool] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12669:12699  poolVaults[pool] == address(0) */\n      iszero\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12648:12763  require(... */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10279:10281   */\n      0x20\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12648:12763  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10261:10282   */\n      mstore\n        /* \"#utility.yul\":10318:10320   */\n      0x26\n        /* \"#utility.yul\":10298:10316   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10291:10321   */\n      mstore\n        /* \"#utility.yul\":10357:10391   */\n      0x5661756c7420616c7265616479207265676973746572656420666f7220746869\n        /* \"#utility.yul\":10337:10355   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10330:10392   */\n      mstore\n      shl(0xd2, 0x1cc81c1bdbdb)\n        /* \"#utility.yul\":10408:10426   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10401:10437   */\n      mstore\n        /* \"#utility.yul\":10454:10473   */\n      0x84\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12648:12763  require(... */\n      tag_162\n        /* \"#utility.yul\":10077:10479   */\n      jump\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12648:12763  require(... */\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12774:12790  poolVaults[pool] */\n      dup3\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12774:12784  poolVaults */\n      0x06\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12774:12790  poolVaults[pool] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12774:12798  poolVaults[pool] = vault */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap5\n      dup7\n      and\n      swap5\n      dup6\n      or\n      swap1\n      sstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12813:12841  VaultRegistered(pool, vault) */\n      mload\n      0xf8ee9039d8e4d43426638703c71517008894fdea742bb2d2dbff5a46fb07abdb\n      swap2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12774:12790  poolVaults[pool] */\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12813:12841  VaultRegistered(pool, vault) */\n      log3\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12416:12848  function registerVault(address pool, address vault) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5417:5594  function markPoolAsFunded(address pool) external {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5484:5501  poolDetails[pool] */\n      dup2\n      dup2\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5520:5521  0 */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5484:5501  poolDetails[pool] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5484:5495  poolDetails */\n      0x04\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5484:5501  poolDetails[pool] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5484:5508  poolDetails[pool].lender */\n      sload\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5476:5546  require(poolDetails[pool].lender != address(0), \"Pool not registered\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_166\n      jump\t// in\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5556:5573  poolDetails[pool] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5556:5567  poolDetails */\n      0x04\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5556:5573  poolDetails[pool] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5556:5580  poolDetails[pool].funded */\n      0x0a\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5556:5587  poolDetails[pool].funded = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5417:5594  function markPoolAsFunded(address pool) external {... */\n      jump\t// out\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10543:10697  function getPoolsByLender(address lender)... */\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10671:10690  lenderPools[lender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10671:10682  lenderPools */\n      0x05\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10671:10690  lenderPools[lender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10664:10690  return lenderPools[lender] */\n      dup1\n      sload\n      dup4\n      mload\n      dup2\n      dup5\n      mul\n      dup2\n      add\n      dup5\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10632:10648  address[] memory */\n      0x60\n      swap4\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10664:10690  return lenderPools[lender] */\n      swap3\n      dup4\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10671:10690  lenderPools[lender] */\n      dup3\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10664:10690  return lenderPools[lender] */\n      dup3\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_176:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_176\n      jumpi\n    tag_175:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10543:10697  function getPoolsByLender(address lender)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_179\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_180\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_182\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_182:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      shl(0xe1, 0x334bd919)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_188\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_189\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_188:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8405:9037  function setBorrowerForPool(address pool, address newBorrower) external {... */\n    tag_82:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8495:8512  poolDetails[pool] */\n      dup3\n      dup2\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8531:8532  0 */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8495:8512  poolDetails[pool] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8495:8506  poolDetails */\n      0x04\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8495:8512  poolDetails[pool] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8495:8519  poolDetails[pool].lender */\n      sload\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8487:8557  require(poolDetails[pool].lender != address(0), \"Pool not registered\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_166\n      jump\t// in\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8588:8613  newBorrower != address(0) */\n      dup2\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8567:8674  require(... */\n      tag_193\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10686:10688   */\n      0x20\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8567:8674  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10668:10689   */\n      mstore\n        /* \"#utility.yul\":10725:10727   */\n      0x23\n        /* \"#utility.yul\":10705:10723   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10698:10728   */\n      mstore\n        /* \"#utility.yul\":10764:10798   */\n      0x426f72726f7765722063616e6e6f7420626520746865207a65726f2061646472\n        /* \"#utility.yul\":10744:10762   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10737:10799   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":10815:10833   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10808:10841   */\n      mstore\n        /* \"#utility.yul\":10858:10877   */\n      0x84\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8567:8674  require(... */\n      tag_162\n        /* \"#utility.yul\":10484:10883   */\n      jump\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8567:8674  require(... */\n    tag_193:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8711:8728  poolDetails[pool] */\n      dup1\n      dup4\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8685:8708  address currentBorrower */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8711:8728  poolDetails[pool] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8711:8722  poolDetails */\n      0x04\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8711:8728  poolDetails[pool] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8711:8737  poolDetails[pool].borrower */\n      0x01\n      add\n      sload\n      dup2\n      and\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8751:8781  currentBorrower != newBorrower */\n      dup3\n      and\n      dup2\n      eq\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8747:9031  if (currentBorrower != newBorrower) {... */\n      tag_188\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8801:8830  currentBorrower != address(0) */\n      dup2\n      and\n      iszero\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8797:8916  if (currentBorrower != address(0)) {... */\n      tag_198\n      jumpi\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8850:8901  _removePoolFromBorrowerArray(currentBorrower, pool) */\n      tag_198\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8879:8894  currentBorrower */\n      dup2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8896:8900  pool */\n      dup5\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8850:8878  _removePoolFromBorrowerArray */\n      tag_199\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8850:8901  _removePoolFromBorrowerArray(currentBorrower, pool) */\n      jump\t// in\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8929:8955  borrowerPools[newBorrower] */\n      dup1\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8929:8942  borrowerPools */\n      0x07\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8929:8955  borrowerPools[newBorrower] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8929:8966  borrowerPools[newBorrower].push(pool) */\n      dup1\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup4\n      sstore\n      swap2\n      dup6\n      mstore\n      dup4\n      dup6\n      keccak256\n      add\n      dup1\n      sload\n      swap7\n      dup11\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap8\n      dup9\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8980:8997  poolDetails[pool] */\n      dup5\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8980:8991  poolDetails */\n      0x04\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8980:8997  poolDetails[pool] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8980:9006  poolDetails[pool].borrower */\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8980:9020  poolDetails[pool].borrower = newBorrower */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8477:9037  {... */\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8405:9037  function setBorrowerForPool(address pool, address newBorrower) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3468:4736  function registerPool(... */\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3820:3838  pool != address(0) */\n      dup12\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3812:3870  require(pool != address(0), \"Pool address cannot be zero\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11090:11092   */\n      0x20\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3812:3870  require(pool != address(0), \"Pool address cannot be zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11072:11093   */\n      mstore\n        /* \"#utility.yul\":11129:11131   */\n      0x1b\n        /* \"#utility.yul\":11109:11127   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11102:11132   */\n      mstore\n        /* \"#utility.yul\":11168:11197   */\n      0x506f6f6c20616464726573732063616e6e6f74206265207a65726f0000000000\n        /* \"#utility.yul\":11148:11166   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11141:11198   */\n      mstore\n        /* \"#utility.yul\":11215:11233   */\n      0x64\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3812:3870  require(pool != address(0), \"Pool address cannot be zero\") */\n      tag_162\n        /* \"#utility.yul\":10888:11239   */\n      jump\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3812:3870  require(pool != address(0), \"Pool address cannot be zero\") */\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3901:3918  poolDetails[pool] */\n      dup12\n      dup2\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3937:3938  0 */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3901:3918  poolDetails[pool] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3901:3912  poolDetails */\n      0x04\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3901:3918  poolDetails[pool] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3901:3925  poolDetails[pool].lender */\n      sload\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3901:3939  poolDetails[pool].lender == address(0) */\n      iszero\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3880:3988  require(... */\n      tag_205\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11446:11448   */\n      0x20\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3880:3988  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11428:11449   */\n      mstore\n        /* \"#utility.yul\":11485:11487   */\n      0x17\n        /* \"#utility.yul\":11465:11483   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11458:11488   */\n      mstore\n        /* \"#utility.yul\":11524:11549   */\n      0x506f6f6c20616c72656164792072656769737465726564000000000000000000\n        /* \"#utility.yul\":11504:11522   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11497:11550   */\n      mstore\n        /* \"#utility.yul\":11567:11585   */\n      0x64\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3880:3988  require(... */\n      tag_162\n        /* \"#utility.yul\":11244:11591   */\n      jump\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3880:3988  require(... */\n    tag_205:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4019:4547  IPoolOrganizer.PoolDetails({... */\n      mload(0x40)\n      dup1\n      0x01c0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4068:4074  lender */\n      dup12\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4019:4547  IPoolOrganizer.PoolDetails({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4098:4106  borrower */\n      dup11\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4019:4547  IPoolOrganizer.PoolDetails({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4134:4149  block.timestamp */\n      timestamp\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4019:4547  IPoolOrganizer.PoolDetails({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4170:4175  vault */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4019:4547  IPoolOrganizer.PoolDetails({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4200:4209  loanToken */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4019:4547  IPoolOrganizer.PoolDetails({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4235:4245  assetToken */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4019:4547  IPoolOrganizer.PoolDetails({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4275:4289  repaymentToken */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4019:4547  IPoolOrganizer.PoolDetails({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4315:4325  loanAmount */\n      dup6\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4019:4547  IPoolOrganizer.PoolDetails({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4353:4365  interestRate */\n      dup5\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4019:4547  IPoolOrganizer.PoolDetails({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4396:4411  repaymentPeriod */\n      dup4\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4019:4547  IPoolOrganizer.PoolDetails({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4435:4443  poolType */\n      dup3\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4019:4547  IPoolOrganizer.PoolDetails({... */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_209\n      jumpi\n      tag_209\n      tag_210\n      jump\t// in\n    tag_209:\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4465:4470  false */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4019:4547  IPoolOrganizer.PoolDetails({... */\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      add\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup15\n      and\n      0x20\n      swap3\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3999:4016  poolDetails[pool] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3999:4010  poolDetails */\n      0x04\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3999:4016  poolDetails[pool] */\n      dup1\n      dup5\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3999:4547  poolDetails[pool] = IPoolOrganizer.PoolDetails({... */\n      dup6\n      mload\n      dup2\n      sload\n      swap1\n      dup6\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      or\n      dup3\n      sstore\n      swap5\n      dup7\n      add\n      mload\n      0x01\n      dup1\n      dup4\n      add\n      dup1\n      sload\n      swap3\n      dup8\n      and\n      swap3\n      dup9\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n      swap3\n      dup7\n      add\n      mload\n      0x02\n      dup3\n      add\n      sstore\n      0x60\n      dup7\n      add\n      mload\n      0x03\n      dup3\n      add\n      dup1\n      sload\n      swap2\n      dup7\n      and\n      swap2\n      dup8\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x80\n      dup7\n      add\n      mload\n      swap2\n      dup2\n      add\n      dup1\n      sload\n      swap3\n      dup6\n      and\n      swap3\n      dup7\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n      0xa0\n      dup6\n      add\n      mload\n      0x05\n      dup3\n      add\n      dup1\n      sload\n      swap2\n      dup6\n      and\n      swap2\n      dup7\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0xc0\n      dup6\n      add\n      mload\n      0x06\n      dup3\n      add\n      dup1\n      sload\n      swap2\n      swap1\n      swap5\n      and\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap2\n      sstore\n      0xe0\n      dup4\n      add\n      mload\n      0x07\n      dup4\n      add\n      sstore\n      0x0100\n      dup4\n      add\n      mload\n      0x08\n      dup4\n      add\n      sstore\n      0x0120\n      dup4\n      add\n      mload\n      0x09\n      dup4\n      add\n      sstore\n      0x0140\n      dup4\n      add\n      mload\n      0x0a\n      dup4\n      add\n      dup1\n      sload\n      swap2\n      swap3\n      swap1\n      swap2\n      not(0xff)\n      and\n      swap1\n      dup4\n      dup2\n      dup2\n      gt\n      iszero\n      tag_214\n      jumpi\n      tag_214\n      tag_210\n      jump\t// in\n    tag_214:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x0160\n      dup3\n      add\n      mload\n      0x0a\n      dup3\n      add\n      dup1\n      sload\n      swap2\n      iszero\n      iszero\n      0x0100\n      mul\n      not(0xff00)\n      dup4\n      and\n      dup2\n      or\n      dup3\n      sstore\n      0x0180\n      dup6\n      add\n      mload\n      swap3\n      not(0xff0000)\n      swap1\n      swap2\n      and\n      not(0xffff00)\n      swap1\n      swap2\n      and\n      or\n      0x010000\n      dup4\n      0x06\n      dup2\n      gt\n      iszero\n      tag_216\n      jumpi\n      tag_216\n      tag_210\n      jump\t// in\n    tag_216:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x01a0\n      dup3\n      add\n      mload\n      dup2\n      0x0a\n      add\n      exp(0x0100, 0x03)\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4557:4568  lenderPools */\n      0x05\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4557:4576  lenderPools[lender] */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4569:4575  lender */\n      dup12\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4557:4576  lenderPools[lender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4582:4586  pool */\n      dup12\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4557:4587  lenderPools[lender].push(pool) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4597:4602  pools */\n      0x03\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4608:4612  pool */\n      dup12\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4597:4613  pools.push(pool) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4642:4659  LoanState.CREATED */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4623:4633  loanStates */\n      0x08\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4623:4639  loanStates[pool] */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4634:4638  pool */\n      dup14\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4623:4639  loanStates[pool] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4623:4659  loanStates[pool] = LoanState.CREATED */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x06\n      dup2\n      gt\n      iszero\n      tag_220\n      jumpi\n      tag_220\n      tag_210\n      jump\t// in\n    tag_220:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4703:4711  borrower */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4674:4729  PoolRegistered(pool, lender, borrower, vault, poolType) */\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4695:4701  lender */\n      dup11\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4674:4729  PoolRegistered(pool, lender, borrower, vault, poolType) */\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4689:4693  pool */\n      dup13\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4674:4729  PoolRegistered(pool, lender, borrower, vault, poolType) */\n      and\n      0x8f723e49dc038e67c41b41307a1e0c65653d50125a0c474a21ac32d9a0b24d2b\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4713:4718  vault */\n      dup12\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4720:4728  poolType */\n      dup6\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4674:4729  PoolRegistered(pool, lender, borrower, vault, poolType) */\n      mload(0x40)\n      tag_221\n      swap3\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":3468:4736  function registerPool(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6066:6588  function getAllLenderPoolDetails(address lender)... */\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6249:6268  lenderPools[lender] */\n      dup2\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6213:6246  address[] memory lenderPoolsArray */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6249:6268  lenderPools[lender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6249:6260  lenderPools */\n      0x05\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6249:6268  lenderPools[lender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6213:6268  address[] memory lenderPoolsArray = lenderPools[lender] */\n      dup1\n      sload\n      dup3\n      mload\n      dup2\n      dup6\n      mul\n      dup2\n      add\n      dup6\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      dup4\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6162:6197  IPoolOrganizer.PoolDetails[] memory */\n      0x60\n      swap5\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6213:6246  address[] memory lenderPoolsArray */\n      swap4\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6213:6268  address[] memory lenderPoolsArray = lenderPools[lender] */\n      dup4\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6249:6268  lenderPools[lender] */\n      dup3\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6213:6268  address[] memory lenderPoolsArray = lenderPools[lender] */\n      dup3\n      dup1\n      iszero\n      tag_224\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_225:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_225\n      jumpi\n    tag_224:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6278:6333  IPoolOrganizer.PoolDetails[]... */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6386:6402  lenderPoolsArray */\n      dup2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6386:6409  lenderPoolsArray.length */\n      mload\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6336:6423  new IPoolOrganizer.PoolDetails[](... */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_227\n      jumpi\n      tag_227\n      tag_228\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_229\n      jumpi\n      dup2\n      0x20\n      add\n    tag_230:\n      tag_231\n      tag_232\n      jump\t// in\n    tag_231:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_230\n      jumpi\n      swap1\n      pop\n    tag_229:\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6278:6423  IPoolOrganizer.PoolDetails[]... */\n      swap1\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6439:6448  uint256 i */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6434:6558  for (uint256 i = 0; i < lenderPoolsArray.length; i++) {... */\n    tag_233:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6458:6474  lenderPoolsArray */\n      dup3\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6458:6481  lenderPoolsArray.length */\n      mload\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6454:6455  i */\n      dup2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6454:6481  i < lenderPoolsArray.length */\n      lt\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6434:6558  for (uint256 i = 0; i < lenderPoolsArray.length; i++) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6515:6526  poolDetails */\n      0x04\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6515:6547  poolDetails[lenderPoolsArray[i]] */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6527:6543  lenderPoolsArray */\n      dup5\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6544:6545  i */\n      dup4\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6527:6546  lenderPoolsArray[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_237\n      jumpi\n      tag_237\n      tag_238\n      jump\t// in\n    tag_237:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6515:6547  poolDetails[lenderPoolsArray[i]] */\n      swap1\n      dup2\n      and\n      dup4\n      mstore\n      dup3\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6502:6547  details[i] = poolDetails[lenderPoolsArray[i]] */\n      dup3\n      mload\n      0x01c0\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      dup6\n      and\n      dup2\n      mstore\n      0x01\n      dup1\n      dup4\n      add\n      sload\n      dup7\n      and\n      swap4\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      dup5\n      and\n      0x60\n      dup5\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      dup5\n      and\n      0x80\n      dup5\n      add\n      mstore\n      0x05\n      dup2\n      add\n      sload\n      dup5\n      and\n      0xa0\n      dup5\n      add\n      mstore\n      0x06\n      dup2\n      add\n      sload\n      swap1\n      swap4\n      and\n      0xc0\n      dup4\n      add\n      mstore\n      0x07\n      dup4\n      add\n      sload\n      0xe0\n      dup4\n      add\n      mstore\n      0x08\n      dup4\n      add\n      sload\n      0x0100\n      dup4\n      add\n      mstore\n      0x09\n      dup4\n      add\n      sload\n      0x0120\n      dup4\n      add\n      mstore\n      0x0a\n      dup4\n      add\n      sload\n      swap2\n      swap3\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6515:6547  poolDetails[lenderPoolsArray[i]] */\n      swap2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6502:6547  details[i] = poolDetails[lenderPoolsArray[i]] */\n      0x0140\n      dup5\n      add\n      swap2\n      0xff\n      swap1\n      swap2\n      and\n      swap1\n      dup2\n      gt\n      iszero\n      tag_240\n      jumpi\n      tag_240\n      tag_210\n      jump\t// in\n    tag_240:\n      0x01\n      dup2\n      gt\n      iszero\n      tag_242\n      jumpi\n      tag_242\n      tag_210\n      jump\t// in\n    tag_242:\n      dup2\n      mstore\n      0x0a\n      dup3\n      add\n      sload\n      0xff\n      0x0100\n      dup3\n      div\n      dup2\n      and\n      iszero\n      iszero\n      0x20\n      dup5\n      add\n      mstore\n      0x40\n      swap1\n      swap3\n      add\n      swap2\n      0x010000\n      swap1\n      swap2\n      div\n      and\n      0x06\n      dup2\n      gt\n      iszero\n      tag_244\n      jumpi\n      tag_244\n      tag_210\n      jump\t// in\n    tag_244:\n      0x06\n      dup2\n      gt\n      iszero\n      tag_246\n      jumpi\n      tag_246\n      tag_210\n      jump\t// in\n    tag_246:\n      dup2\n      mstore\n      0x0a\n      swap2\n      swap1\n      swap2\n      add\n      sload\n      0x01000000\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      0x20\n      swap1\n      swap2\n      add\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6502:6512  details[i] */\n      dup3\n      mload\n      dup4\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6510:6511  i */\n      dup4\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6502:6512  details[i] */\n      dup2\n      lt\n      tag_248\n      jumpi\n      tag_248\n      tag_238\n      jump\t// in\n    tag_248:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6502:6547  details[i] = poolDetails[lenderPoolsArray[i]] */\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6483:6486  i++ */\n      0x01\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6434:6558  for (uint256 i = 0; i < lenderPoolsArray.length; i++) {... */\n      jump(tag_233)\n    tag_234:\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6574:6581  details */\n      swap4\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6066:6588  function getAllLenderPoolDetails(address lender)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11862:12157  function grantFactoryAccess(address factoryAddress) external {... */\n    tag_97:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11954:11993  hasRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n      tag_250\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11982:11992  msg.sender */\n      caller\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11954:11961  hasRole */\n      tag_111\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11954:11993  hasRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_250:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11933:12041  require(... */\n      tag_251\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12369:12371   */\n      0x20\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11933:12041  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12351:12372   */\n      mstore\n        /* \"#utility.yul\":12408:12410   */\n      0x16\n        /* \"#utility.yul\":12388:12406   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12381:12411   */\n      mstore\n      shl(0x51, 0x21b0b63632b91034b9903737ba1030b71030b236b4b7)\n        /* \"#utility.yul\":12427:12445   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12420:12472   */\n      mstore\n        /* \"#utility.yul\":12489:12507   */\n      0x64\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11933:12041  require(... */\n      tag_162\n        /* \"#utility.yul\":12167:12513   */\n      jump\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11933:12041  require(... */\n    tag_251:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12051:12095  grantRole(POOL_MANAGER_ROLE, factoryAddress) */\n      tag_254\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":534:564  keccak256(\"POOL_MANAGER_ROLE\") */\n      0x6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12080:12094  factoryAddress */\n      dup3\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12051:12060  grantRole */\n      tag_76\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12051:12095  grantRole(POOL_MANAGER_ROLE, factoryAddress) */\n      jump\t// in\n    tag_254:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12105:12150  grantRole(DEFAULT_ADMIN_ROLE, factoryAddress) */\n      tag_255\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12135:12149  factoryAddress */\n      dup3\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12105:12114  grantRole */\n      tag_76\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":12105:12150  grantRole(DEFAULT_ADMIN_ROLE, factoryAddress) */\n      jump\t// in\n    tag_255:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11862:12157  function grantFactoryAccess(address factoryAddress) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11270:11503  function getVaultForPool(address pool) external view returns (address) {... */\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11372:11388  poolVaults[pool] */\n      dup2\n      dup2\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11332:11339  address */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11372:11388  poolVaults[pool] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11372:11382  poolVaults */\n      0x06\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11372:11388  poolVaults[pool] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11332:11339  address */\n      swap1\n      swap2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11372:11388  poolVaults[pool] */\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11351:11463  require(... */\n      tag_257\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12720:12722   */\n      0x20\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11351:11463  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12702:12723   */\n      mstore\n        /* \"#utility.yul\":12759:12761   */\n      0x23\n        /* \"#utility.yul\":12739:12757   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12732:12762   */\n      mstore\n        /* \"#utility.yul\":12798:12832   */\n      0x506f6f6c206e6f742072656769737465726564206f7220686173206e6f207661\n        /* \"#utility.yul\":12778:12796   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12771:12833   */\n      mstore\n      shl(0xea, 0x1d5b1d)\n        /* \"#utility.yul\":12849:12867   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12842:12875   */\n      mstore\n        /* \"#utility.yul\":12892:12911   */\n      0x84\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11351:11463  require(... */\n      tag_162\n        /* \"#utility.yul\":12518:12917   */\n      jump\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11351:11463  require(... */\n    tag_257:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11480:11496  poolVaults[pool] */\n      swap1\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11480:11490  poolVaults */\n      0x06\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11480:11496  poolVaults[pool] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11270:11503  function getVaultForPool(address pool) external view returns (address) {... */\n      jump\t// out\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7844:8225  function deregisterPool(address pool) external {... */\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7909:7926  poolDetails[pool] */\n      dup2\n      dup2\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7945:7946  0 */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7909:7926  poolDetails[pool] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7909:7920  poolDetails */\n      0x04\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7909:7926  poolDetails[pool] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7909:7933  poolDetails[pool].lender */\n      sload\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7901:7971  require(poolDetails[pool].lender != address(0), \"Pool not registered\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_166\n      jump\t// in\n    tag_261:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7999:8016  poolDetails[pool] */\n      dup1\n      dup3\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7982:7996  address lender */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7999:8016  poolDetails[pool] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7999:8010  poolDetails */\n      0x04\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7999:8016  poolDetails[pool] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7999:8023  poolDetails[pool].lender */\n      sload\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8033:8073  _removePoolFromLenderArray(lender, pool) */\n      tag_263\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7999:8023  poolDetails[pool].lender */\n      dup2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8011:8015  pool */\n      dup4\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8033:8059  _removePoolFromLenderArray */\n      tag_264\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8033:8073  _removePoolFromLenderArray(lender, pool) */\n      jump\t// in\n    tag_263:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8083:8113  _removePoolFromMainArray(pool) */\n      tag_265\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8108:8112  pool */\n      dup3\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8083:8107  _removePoolFromMainArray */\n      tag_266\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8083:8113  _removePoolFromMainArray(pool) */\n      jump\t// in\n    tag_265:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8131:8148  poolDetails[pool] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8131:8142  poolDetails */\n      0x04\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8131:8148  poolDetails[pool] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8124:8148  delete poolDetails[pool] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      dup3\n      sstore\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      dup3\n      and\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      dup7\n      swap1\n      sstore\n      0x03\n      dup3\n      add\n      dup1\n      sload\n      dup3\n      and\n      swap1\n      sstore\n      swap4\n      dup2\n      add\n      dup1\n      sload\n      dup6\n      and\n      swap1\n      sstore\n      0x05\n      dup2\n      add\n      dup1\n      sload\n      dup6\n      and\n      swap1\n      sstore\n      0x06\n      dup2\n      add\n      dup1\n      sload\n      swap1\n      swap5\n      and\n      swap1\n      swap4\n      sstore\n      0x07\n      dup4\n      add\n      dup5\n      swap1\n      sstore\n      0x08\n      dup1\n      dup5\n      add\n      dup6\n      swap1\n      sstore\n      0x09\n      dup5\n      add\n      dup6\n      swap1\n      sstore\n      0x0a\n      swap1\n      swap4\n      add\n      dup1\n      sload\n      not(sub(shl(0xb8, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8165:8181  loanStates[pool] */\n      swap2\n      swap1\n      mstore\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8158:8181  delete loanStates[pool] */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8196:8218  PoolDeregistered(pool) */\n      mload\n      0x334d0b2111287dfddebe4b4c1c5af3ae644909d7fcd024377bf601e236ed5abb\n      swap2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8131:8148  poolDetails[pool] */\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":8196:8218  PoolDeregistered(pool) */\n      log2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7891:8225  {... */\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7844:8225  function deregisterPool(address pool) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4950:5246  function updateLoanState(address pool, LoanState newState) external {... */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5036:5053  poolDetails[pool] */\n      dup3\n      dup2\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5072:5073  0 */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5036:5053  poolDetails[pool] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5036:5047  poolDetails */\n      0x04\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5036:5053  poolDetails[pool] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5036:5060  poolDetails[pool].lender */\n      sload\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5028:5098  require(poolDetails[pool].lender != address(0), \"Pool not registered\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_166\n      jump\t// in\n    tag_270:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5129:5145  loanStates[pool] */\n      dup3\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5108:5126  LoanState oldState */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5129:5145  loanStates[pool] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5129:5139  loanStates */\n      0x08\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5129:5145  loanStates[pool] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0xff\n      dup2\n      and\n      swap2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5174:5182  newState */\n      dup4\n      swap2\n      not(0xff)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5155:5182  loanStates[pool] = newState */\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5129:5145  loanStates[pool] */\n      0x01\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5174:5182  newState */\n      dup4\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5155:5182  loanStates[pool] = newState */\n      0x06\n      dup2\n      gt\n      iszero\n      tag_273\n      jumpi\n      tag_273\n      tag_210\n      jump\t// in\n    tag_273:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5214:5218  pool */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5197:5239  LoanStateUpdated(pool, oldState, newState) */\n      and\n      0x0a61679a80e33b8ccd7049ed35b83f875349aa2875ef98ce5ba441a88761fb4e\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5220:5228  oldState */\n      dup3\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5230:5238  newState */\n      dup5\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5197:5239  LoanStateUpdated(pool, oldState, newState) */\n      mload(0x40)\n      tag_274\n      swap3\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":5018:5246  {... */\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":4950:5246  function updateLoanState(address pool, LoanState newState) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":9325:9877  function registerManagers(address _vaultManager, address _rewardManager)... */\n    tag_126:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_277\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_180\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_277:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":9487:9514  _vaultManager != address(0) */\n      dup4\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":9466:9575  require(... */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13437:13439   */\n      0x20\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":9466:9575  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13419:13440   */\n      mstore\n        /* \"#utility.yul\":13476:13478   */\n      0x23\n        /* \"#utility.yul\":13456:13474   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13449:13479   */\n      mstore\n        /* \"#utility.yul\":13515:13549   */\n      0x5661756c744d616e616765722063616e6e6f74206265207a65726f2061646472\n        /* \"#utility.yul\":13495:13513   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13488:13550   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":13566:13584   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13559:13592   */\n      mstore\n        /* \"#utility.yul\":13609:13628   */\n      0x84\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":9466:9575  require(... */\n      tag_162\n        /* \"#utility.yul\":13235:13634   */\n      jump\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":9466:9575  require(... */\n    tag_279:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":9606:9634  _rewardManager != address(0) */\n      dup3\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":9585:9696  require(... */\n      tag_282\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13841:13843   */\n      0x20\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":9585:9696  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13823:13844   */\n      mstore\n        /* \"#utility.yul\":13880:13882   */\n      0x24\n        /* \"#utility.yul\":13860:13878   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":13853:13883   */\n      mstore\n        /* \"#utility.yul\":13919:13953   */\n      0x5265776172644d616e616765722063616e6e6f74206265207a65726f20616464\n        /* \"#utility.yul\":13899:13917   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13892:13954   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":13970:13988   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13963:13997   */\n      mstore\n        /* \"#utility.yul\":14014:14033   */\n      0x84\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":9585:9696  require(... */\n      tag_162\n        /* \"#utility.yul\":13639:14039   */\n      jump\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":9585:9696  require(... */\n    tag_282:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":9707:9719  vaultManager */\n      0x01\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":9707:9750  vaultManager = IVaultManager(_vaultManager) */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":9760:9773  rewardManager */\n      0x02\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":9760:9806  rewardManager = IRewardManager(_rewardManager) */\n      dup1\n      sload\n      swap2\n      dup7\n      and\n      swap2\n      swap1\n      swap3\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":9822:9870  ManagerRegistered(_vaultManager, _rewardManager) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8181:8232   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":8263:8265   */\n      0x20\n        /* \"#utility.yul\":8248:8266   */\n      dup4\n      add\n        /* \"#utility.yul\":8241:8301   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":9822:9870  ManagerRegistered(_vaultManager, _rewardManager) */\n      0x8fc18cc172f74c81235145b7927190d2bd0e351fc45bfb17bb572593273cef21\n      swap2\n        /* \"#utility.yul\":8154:8172   */\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":9822:9870  ManagerRegistered(_vaultManager, _rewardManager) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":9325:9877  function registerManagers(address _vaultManager, address _rewardManager)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11619:11720  function getAllPoolAddresses() external view returns (address[] memory) {... */\n    tag_128:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11673:11689  address[] memory */\n      0x60\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11708:11713  pools */\n      0x03\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11701:11713  return pools */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_287\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_288:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_288\n      jumpi\n    tag_287:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11619:11720  function getAllPoolAddresses() external view returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10856:11101  function getPoolDetails(address pool)... */\n    tag_137:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10941:10974  IPoolOrganizer.PoolDetails memory */\n      tag_290\n      tag_232\n      jump\t// in\n    tag_290:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10998:11015  poolDetails[pool] */\n      dup3\n      dup2\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11034:11035  0 */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10998:11015  poolDetails[pool] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10998:11009  poolDetails */\n      0x04\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10998:11015  poolDetails[pool] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10998:11022  poolDetails[pool].lender */\n      sload\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10990:11060  require(poolDetails[pool].lender != address(0), \"Pool not registered\") */\n      tag_292\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_166\n      jump\t// in\n    tag_292:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11077:11094  poolDetails[pool] */\n      dup1\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11077:11088  poolDetails */\n      0x04\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11077:11094  poolDetails[pool] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap3\n      dup4\n      swap1\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11070:11094  return poolDetails[pool] */\n      dup4\n      mload\n      0x01c0\n      dup2\n      add\n      dup6\n      mstore\n      dup2\n      sload\n      dup7\n      and\n      dup2\n      mstore\n      0x01\n      dup1\n      dup4\n      add\n      sload\n      dup8\n      and\n      swap4\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap5\n      dup2\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      dup6\n      and\n      0x60\n      dup6\n      add\n      mstore\n      swap2\n      dup3\n      add\n      sload\n      dup5\n      and\n      0x80\n      dup5\n      add\n      mstore\n      0x05\n      dup3\n      add\n      sload\n      dup5\n      and\n      0xa0\n      dup5\n      add\n      mstore\n      0x06\n      dup3\n      add\n      sload\n      swap1\n      swap4\n      and\n      0xc0\n      dup4\n      add\n      mstore\n      0x07\n      dup2\n      add\n      sload\n      0xe0\n      dup4\n      add\n      mstore\n      0x08\n      dup2\n      add\n      sload\n      0x0100\n      dup4\n      add\n      mstore\n      0x09\n      dup2\n      add\n      sload\n      0x0120\n      dup4\n      add\n      mstore\n      0x0a\n      dup2\n      add\n      sload\n      swap2\n      swap3\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11077:11094  poolDetails[pool] */\n      swap1\n      swap2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":11070:11094  return poolDetails[pool] */\n      0x0140\n      dup5\n      add\n      swap2\n      0xff\n      swap1\n      swap2\n      and\n      swap1\n      dup2\n      gt\n      iszero\n      tag_295\n      jumpi\n      tag_295\n      tag_210\n      jump\t// in\n    tag_295:\n      0x01\n      dup2\n      gt\n      iszero\n      tag_297\n      jumpi\n      tag_297\n      tag_210\n      jump\t// in\n    tag_297:\n      dup2\n      mstore\n      0x0a\n      dup3\n      add\n      sload\n      0xff\n      0x0100\n      dup3\n      div\n      dup2\n      and\n      iszero\n      iszero\n      0x20\n      dup5\n      add\n      mstore\n      0x40\n      swap1\n      swap3\n      add\n      swap2\n      0x010000\n      swap1\n      swap2\n      div\n      and\n      0x06\n      dup2\n      gt\n      iszero\n      tag_299\n      jumpi\n      tag_299\n      tag_210\n      jump\t// in\n    tag_299:\n      0x06\n      dup2\n      gt\n      iszero\n      tag_301\n      jumpi\n      tag_301\n      tag_210\n      jump\t// in\n    tag_301:\n      dup2\n      mstore\n      0x0a\n      swap2\n      swap1\n      swap2\n      add\n      sload\n      0x01000000\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      0x20\n      swap1\n      swap2\n      add\n      mstore\n      swap3\n      swap2\n      pop\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":10856:11101  function getPoolDetails(address pool)... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_305\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_180\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_305:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_182\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_189\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6763:6925  function getPoolsByBorrower(address borrower)... */\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6895:6918  borrowerPools[borrower] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6895:6908  borrowerPools */\n      0x07\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6895:6918  borrowerPools[borrower] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6888:6918  return borrowerPools[borrower] */\n      dup1\n      sload\n      dup4\n      mload\n      dup2\n      dup5\n      mul\n      dup2\n      add\n      dup5\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6856:6872  address[] memory */\n      0x60\n      swap4\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6888:6918  return borrowerPools[borrower] */\n      swap3\n      dup4\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6895:6918  borrowerPools[borrower] */\n      dup3\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6888:6918  return borrowerPools[borrower] */\n      dup3\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_176\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":6763:6925  function getPoolsByBorrower(address borrower)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7113:7648  function getBorrowerPoolDetails(address borrower)... */\n    tag_153:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7299:7322  borrowerPools[borrower] */\n      dup2\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7261:7296  address[] memory borrowerPoolsArray */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7299:7322  borrowerPools[borrower] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7299:7312  borrowerPools */\n      0x07\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7299:7322  borrowerPools[borrower] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7261:7322  address[] memory borrowerPoolsArray = borrowerPools[borrower] */\n      dup1\n      sload\n      dup3\n      mload\n      dup2\n      dup6\n      mul\n      dup2\n      add\n      dup6\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      dup4\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7210:7245  IPoolOrganizer.PoolDetails[] memory */\n      0x60\n      swap5\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7261:7296  address[] memory borrowerPoolsArray */\n      swap4\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7261:7322  address[] memory borrowerPoolsArray = borrowerPools[borrower] */\n      dup4\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7299:7322  borrowerPools[borrower] */\n      dup3\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7261:7322  address[] memory borrowerPoolsArray = borrowerPools[borrower] */\n      dup3\n      dup1\n      iszero\n      tag_312\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_313:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_313\n      jumpi\n    tag_312:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7332:7387  IPoolOrganizer.PoolDetails[]... */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7440:7458  borrowerPoolsArray */\n      dup2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7440:7465  borrowerPoolsArray.length */\n      mload\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7390:7479  new IPoolOrganizer.PoolDetails[](... */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_315\n      jumpi\n      tag_315\n      tag_228\n      jump\t// in\n    tag_315:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_316\n      jumpi\n      dup2\n      0x20\n      add\n    tag_317:\n      tag_318\n      tag_232\n      jump\t// in\n    tag_318:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_317\n      jumpi\n      swap1\n      pop\n    tag_316:\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7332:7479  IPoolOrganizer.PoolDetails[]... */\n      swap1\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7495:7504  uint256 i */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7490:7618  for (uint256 i = 0; i < borrowerPoolsArray.length; i++) {... */\n    tag_319:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7514:7532  borrowerPoolsArray */\n      dup3\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7514:7539  borrowerPoolsArray.length */\n      mload\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7510:7511  i */\n      dup2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7510:7539  i < borrowerPoolsArray.length */\n      lt\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7490:7618  for (uint256 i = 0; i < borrowerPoolsArray.length; i++) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7573:7584  poolDetails */\n      0x04\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7573:7607  poolDetails[borrowerPoolsArray[i]] */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7585:7603  borrowerPoolsArray */\n      dup5\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7604:7605  i */\n      dup4\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7585:7606  borrowerPoolsArray[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_323\n      jumpi\n      tag_323\n      tag_238\n      jump\t// in\n    tag_323:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7573:7607  poolDetails[borrowerPoolsArray[i]] */\n      swap1\n      dup2\n      and\n      dup4\n      mstore\n      dup3\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7560:7607  details[i] = poolDetails[borrowerPoolsArray[i]] */\n      dup3\n      mload\n      0x01c0\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      dup6\n      and\n      dup2\n      mstore\n      0x01\n      dup1\n      dup4\n      add\n      sload\n      dup7\n      and\n      swap4\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      dup5\n      and\n      0x60\n      dup5\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      dup5\n      and\n      0x80\n      dup5\n      add\n      mstore\n      0x05\n      dup2\n      add\n      sload\n      dup5\n      and\n      0xa0\n      dup5\n      add\n      mstore\n      0x06\n      dup2\n      add\n      sload\n      swap1\n      swap4\n      and\n      0xc0\n      dup4\n      add\n      mstore\n      0x07\n      dup4\n      add\n      sload\n      0xe0\n      dup4\n      add\n      mstore\n      0x08\n      dup4\n      add\n      sload\n      0x0100\n      dup4\n      add\n      mstore\n      0x09\n      dup4\n      add\n      sload\n      0x0120\n      dup4\n      add\n      mstore\n      0x0a\n      dup4\n      add\n      sload\n      swap2\n      swap3\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7573:7607  poolDetails[borrowerPoolsArray[i]] */\n      swap2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7560:7607  details[i] = poolDetails[borrowerPoolsArray[i]] */\n      0x0140\n      dup5\n      add\n      swap2\n      0xff\n      swap1\n      swap2\n      and\n      swap1\n      dup2\n      gt\n      iszero\n      tag_325\n      jumpi\n      tag_325\n      tag_210\n      jump\t// in\n    tag_325:\n      0x01\n      dup2\n      gt\n      iszero\n      tag_327\n      jumpi\n      tag_327\n      tag_210\n      jump\t// in\n    tag_327:\n      dup2\n      mstore\n      0x0a\n      dup3\n      add\n      sload\n      0xff\n      0x0100\n      dup3\n      div\n      dup2\n      and\n      iszero\n      iszero\n      0x20\n      dup5\n      add\n      mstore\n      0x40\n      swap1\n      swap3\n      add\n      swap2\n      0x010000\n      swap1\n      swap2\n      div\n      and\n      0x06\n      dup2\n      gt\n      iszero\n      tag_329\n      jumpi\n      tag_329\n      tag_210\n      jump\t// in\n    tag_329:\n      0x06\n      dup2\n      gt\n      iszero\n      tag_331\n      jumpi\n      tag_331\n      tag_210\n      jump\t// in\n    tag_331:\n      dup2\n      mstore\n      0x0a\n      swap2\n      swap1\n      swap2\n      add\n      sload\n      0x01000000\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      0x20\n      swap1\n      swap2\n      add\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7560:7570  details[i] */\n      dup3\n      mload\n      dup4\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7568:7569  i */\n      dup4\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7560:7570  details[i] */\n      dup2\n      lt\n      tag_333\n      jumpi\n      tag_333\n      tag_238\n      jump\t// in\n    tag_333:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7560:7607  details[i] = poolDetails[borrowerPoolsArray[i]] */\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7541:7544  i++ */\n      0x01\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":7490:7618  for (uint256 i = 0; i < borrowerPoolsArray.length; i++) {... */\n      jump(tag_319)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_255\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_338\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_340\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_111\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_341\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_342\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n    tag_342:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      jump(tag_157)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_341:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      jump(tag_157)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_346\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_111\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_346:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_341\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      jump(tag_157)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14412:14838  function _removePoolFromBorrowerArray(address borrower, address pool)... */\n    tag_199:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14545:14568  borrowerPools[borrower] */\n      dup3\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14512:14525  uint256 index */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14545:14568  borrowerPools[borrower] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14545:14558  borrowerPools */\n      0x07\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14545:14568  borrowerPools[borrower] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14528:14575  findIndexInArray(borrowerPools[borrower], pool) */\n      tag_351\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14570:14574  pool */\n      dup4\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14528:14544  findIndexInArray */\n      tag_352\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14528:14575  findIndexInArray(borrowerPools[borrower], pool) */\n      jump\t// in\n    tag_351:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14597:14620  borrowerPools[borrower] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14597:14610  borrowerPools */\n      0x07\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14597:14620  borrowerPools[borrower] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14597:14627  borrowerPools[borrower].length */\n      sload\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14512:14575  uint256 index = findIndexInArray(borrowerPools[borrower], pool) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14589:14627  index < borrowerPools[borrower].length */\n      dup2\n      lt\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14585:14832  if (index < borrowerPools[borrower].length) {... */\n      iszero\n      tag_188\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14663:14686  borrowerPools[borrower] */\n      dup4\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14643:14660  uint256 lastIndex */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14663:14686  borrowerPools[borrower] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14663:14676  borrowerPools */\n      0x07\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14663:14686  borrowerPools[borrower] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14663:14693  borrowerPools[borrower].length */\n      sload\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14663:14697  borrowerPools[borrower].length - 1 */\n      tag_354\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14696:14697  1 */\n      0x01\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14663:14697  borrowerPools[borrower].length - 1 */\n      tag_355\n      jump\t// in\n    tag_354:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14744:14767  borrowerPools[borrower] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14744:14757  borrowerPools */\n      0x07\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14744:14767  borrowerPools[borrower] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14744:14778  borrowerPools[borrower][lastIndex] */\n      dup1\n      sload\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14643:14697  uint256 lastIndex = borrowerPools[borrower].length - 1 */\n      swap2\n      swap3\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14744:14767  borrowerPools[borrower] */\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14643:14697  uint256 lastIndex = borrowerPools[borrower].length - 1 */\n      dup3\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14744:14778  borrowerPools[borrower][lastIndex] */\n      dup2\n      lt\n      tag_357\n      jumpi\n      tag_357\n      tag_238\n      jump\t// in\n    tag_357:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14711:14734  borrowerPools[borrower] */\n      dup8\n      dup2\n      and\n      dup5\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14711:14724  borrowerPools */\n      0x07\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14711:14734  borrowerPools[borrower] */\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      swap3\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14711:14741  borrowerPools[borrower][index] */\n      dup1\n      sload\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14744:14778  borrowerPools[borrower][lastIndex] */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14711:14734  borrowerPools[borrower] */\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14735:14740  index */\n      dup5\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14711:14741  borrowerPools[borrower][index] */\n      dup2\n      lt\n      tag_360\n      jumpi\n      tag_360\n      tag_238\n      jump\t// in\n    tag_360:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14711:14778  borrowerPools[borrower][index] = borrowerPools[borrower][lastIndex] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14792:14815  borrowerPools[borrower] */\n      swap2\n      dup7\n      and\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14792:14805  borrowerPools */\n      0x07\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14792:14815  borrowerPools[borrower] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14792:14821  borrowerPools[borrower].pop() */\n      dup1\n      sload\n      dup1\n      tag_363\n      jumpi\n      tag_363\n      tag_364\n      jump\t// in\n    tag_363:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14502:14838  {... */\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14412:14838  function _removePoolFromBorrowerArray(address borrower, address pool)... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13056:13370  function _removePoolFromLenderArray(address lender, address pool) private {... */\n    tag_264:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13173:13192  lenderPools[lender] */\n      dup3\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13140:13153  uint256 index */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13173:13192  lenderPools[lender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13173:13184  lenderPools */\n      0x05\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13173:13192  lenderPools[lender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13156:13199  findIndexInArray(lenderPools[lender], pool) */\n      tag_367\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13194:13198  pool */\n      dup4\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13156:13172  findIndexInArray */\n      tag_352\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13156:13199  findIndexInArray(lenderPools[lender], pool) */\n      jump\t// in\n    tag_367:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13229:13248  lenderPools[lender] */\n      dup5\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13209:13226  uint256 lastIndex */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13229:13248  lenderPools[lender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13229:13240  lenderPools */\n      0x05\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13229:13248  lenderPools[lender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13229:13255  lenderPools[lender].length */\n      sload\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13140:13199  uint256 index = findIndexInArray(lenderPools[lender], pool) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13209:13226  uint256 lastIndex */\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13229:13259  lenderPools[lender].length - 1 */\n      tag_368\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13258:13259  1 */\n      0x01\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13229:13259  lenderPools[lender].length - 1 */\n      tag_355\n      jump\t// in\n    tag_368:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13298:13317  lenderPools[lender] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13298:13309  lenderPools */\n      0x05\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13298:13317  lenderPools[lender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13298:13328  lenderPools[lender][lastIndex] */\n      dup1\n      sload\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13209:13259  uint256 lastIndex = lenderPools[lender].length - 1 */\n      swap2\n      swap3\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13298:13317  lenderPools[lender] */\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13209:13259  uint256 lastIndex = lenderPools[lender].length - 1 */\n      dup3\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13298:13328  lenderPools[lender][lastIndex] */\n      dup2\n      lt\n      tag_370\n      jumpi\n      tag_370\n      tag_238\n      jump\t// in\n    tag_370:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13269:13288  lenderPools[lender] */\n      dup8\n      dup2\n      and\n      dup5\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13269:13280  lenderPools */\n      0x05\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13269:13288  lenderPools[lender] */\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      swap3\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13269:13295  lenderPools[lender][index] */\n      dup1\n      sload\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13298:13328  lenderPools[lender][lastIndex] */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13269:13288  lenderPools[lender] */\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13289:13294  index */\n      dup5\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13269:13295  lenderPools[lender][index] */\n      dup2\n      lt\n      tag_373\n      jumpi\n      tag_373\n      tag_238\n      jump\t// in\n    tag_373:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13269:13328  lenderPools[lender][index] = lenderPools[lender][lastIndex] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13338:13357  lenderPools[lender] */\n      swap2\n      dup7\n      and\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13338:13349  lenderPools */\n      0x05\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13338:13357  lenderPools[lender] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13338:13363  lenderPools[lender].pop() */\n      dup1\n      sload\n      dup1\n      tag_363\n      jumpi\n      tag_363\n      tag_364\n      jump\t// in\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13493:13719  function _removePoolFromMainArray(address pool) private {... */\n    tag_266:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13559:13572  uint256 index */\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13575:13604  findIndexInArray(pools, pool) */\n      tag_379\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13592:13597  pools */\n      0x03\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13599:13603  pool */\n      dup4\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13575:13591  findIndexInArray */\n      tag_352\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13575:13604  findIndexInArray(pools, pool) */\n      jump\t// in\n    tag_379:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13634:13639  pools */\n      0x03\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13634:13646  pools.length */\n      sload\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13559:13604  uint256 index = findIndexInArray(pools, pool) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13614:13631  uint256 lastIndex */\n      0x00\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13634:13650  pools.length - 1 */\n      tag_380\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13649:13650  1 */\n      0x01\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13634:13650  pools.length - 1 */\n      tag_355\n      jump\t// in\n    tag_380:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13614:13650  uint256 lastIndex = pools.length - 1 */\n      swap1\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13675:13680  pools */\n      0x03\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13681:13690  lastIndex */\n      dup2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13675:13691  pools[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_382\n      jumpi\n      tag_382\n      tag_238\n      jump\t// in\n    tag_382:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13660:13665  pools */\n      0x03\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13660:13672  pools[index] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13675:13691  pools[lastIndex] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13666:13671  index */\n      dup5\n      swap1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13660:13672  pools[index] */\n      dup2\n      lt\n      tag_385\n      jumpi\n      tag_385\n      tag_238\n      jump\t// in\n    tag_385:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13660:13691  pools[index] = pools[lastIndex] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13701:13706  pools */\n      0x03\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13701:13712  pools.pop() */\n      dup1\n      sload\n      dup1\n      tag_388\n      jumpi\n      tag_388\n      tag_364\n      jump\t// in\n    tag_388:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13493:13719  function _removePoolFromMainArray(address pool) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_338:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_391\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_111\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_391:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_392\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      shl(0xe0, 0xe2517d3f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14598:14630   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14580:14631   */\n      mstore\n        /* \"#utility.yul\":14647:14665   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":14640:14674   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":14553:14571   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      tag_162\n        /* \"#utility.yul\":14406:14680   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_392:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13932:14231  function findIndexInArray(address[] storage array, address target)... */\n    tag_352:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14045:14052  uint256 */\n      0x00\n      dup1\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14068:14168  for (uint256 i = 0; i < array.length; i++) {... */\n    tag_396:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14092:14104  array.length */\n      dup4\n      sload\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14088:14104  i < array.length */\n      dup2\n      lt\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14068:14168  for (uint256 i = 0; i < array.length; i++) {... */\n      iszero\n      tag_397\n      jumpi\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14141:14147  target */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14129:14147  array[i] == target */\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14129:14134  array */\n      dup5\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14135:14136  i */\n      dup3\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14129:14137  array[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_400\n      jumpi\n      tag_400\n      tag_238\n      jump\t// in\n    tag_400:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14129:14147  array[i] == target */\n      sub\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14125:14157  if (array[i] == target) return i */\n      tag_402\n      jumpi\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14156:14157  i */\n      swap1\n      pop\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14149:14157  return i */\n      jump(tag_157)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14125:14157  if (array[i] == target) return i */\n    tag_402:\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14106:14109  i++ */\n      0x01\n      add\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14068:14168  for (uint256 i = 0; i < array.length; i++) {... */\n      jump(tag_396)\n    tag_397:\n      pop\n      not(0x00)\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":14184:14201  type(uint256).max */\n      swap4\n        /* \"contracts/contracts/protocol/PoolOrganizer.sol\":13932:14231  function findIndexInArray(address[] storage array, address target)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_232:\n      0x40\n      dup1\n      mload\n      0x01c0\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x60\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x80\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0xa0\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0xc0\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0xe0\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x0100\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x0120\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x0140\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x0160\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x0180\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x01a0\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_41:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_416:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_417\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":199:270   */\n    tag_417:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:724   */\n    tag_408:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":668:699   */\n      dup2\n      and\n        /* \"#utility.yul\":658:700   */\n      dup2\n      eq\n        /* \"#utility.yul\":648:718   */\n      tag_255\n      jumpi\n        /* \"#utility.yul\":714:715   */\n      0x00\n        /* \"#utility.yul\":711:712   */\n      dup1\n        /* \"#utility.yul\":704:716   */\n      revert\n        /* \"#utility.yul\":729:1117   */\n    tag_47:\n        /* \"#utility.yul\":797:803   */\n      0x00\n        /* \"#utility.yul\":805:811   */\n      dup1\n        /* \"#utility.yul\":858:860   */\n      0x40\n        /* \"#utility.yul\":846:855   */\n      dup4\n        /* \"#utility.yul\":837:844   */\n      dup6\n        /* \"#utility.yul\":833:856   */\n      sub\n        /* \"#utility.yul\":829:861   */\n      slt\n        /* \"#utility.yul\":826:878   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":874:875   */\n      0x00\n        /* \"#utility.yul\":871:872   */\n      dup1\n        /* \"#utility.yul\":864:876   */\n      revert\n        /* \"#utility.yul\":826:878   */\n    tag_423:\n        /* \"#utility.yul\":913:922   */\n      dup3\n        /* \"#utility.yul\":900:923   */\n      calldataload\n        /* \"#utility.yul\":932:963   */\n      tag_424\n        /* \"#utility.yul\":957:962   */\n      dup2\n        /* \"#utility.yul\":932:963   */\n      tag_408\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":982:987   */\n      swap2\n      pop\n        /* \"#utility.yul\":1039:1041   */\n      0x20\n        /* \"#utility.yul\":1024:1042   */\n      dup4\n      add\n        /* \"#utility.yul\":1011:1043   */\n      calldataload\n        /* \"#utility.yul\":1052:1085   */\n      tag_425\n        /* \"#utility.yul\":1011:1043   */\n      dup2\n        /* \"#utility.yul\":1052:1085   */\n      tag_408\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":1104:1111   */\n      dup1\n        /* \"#utility.yul\":1094:1111   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":729:1117   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1477:1724   */\n    tag_55:\n        /* \"#utility.yul\":1536:1542   */\n      0x00\n        /* \"#utility.yul\":1589:1591   */\n      0x20\n        /* \"#utility.yul\":1577:1586   */\n      dup3\n        /* \"#utility.yul\":1568:1575   */\n      dup5\n        /* \"#utility.yul\":1564:1587   */\n      sub\n        /* \"#utility.yul\":1560:1592   */\n      slt\n        /* \"#utility.yul\":1557:1609   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":1605:1606   */\n      0x00\n        /* \"#utility.yul\":1602:1603   */\n      dup1\n        /* \"#utility.yul\":1595:1607   */\n      revert\n        /* \"#utility.yul\":1557:1609   */\n    tag_429:\n        /* \"#utility.yul\":1644:1653   */\n      dup2\n        /* \"#utility.yul\":1631:1654   */\n      calldataload\n        /* \"#utility.yul\":1663:1694   */\n      tag_417\n        /* \"#utility.yul\":1688:1693   */\n      dup2\n        /* \"#utility.yul\":1663:1694   */\n      tag_408\n      jump\t// in\n        /* \"#utility.yul\":1937:2163   */\n    tag_64:\n        /* \"#utility.yul\":1996:2002   */\n      0x00\n        /* \"#utility.yul\":2049:2051   */\n      0x20\n        /* \"#utility.yul\":2037:2046   */\n      dup3\n        /* \"#utility.yul\":2028:2035   */\n      dup5\n        /* \"#utility.yul\":2024:2047   */\n      sub\n        /* \"#utility.yul\":2020:2052   */\n      slt\n        /* \"#utility.yul\":2017:2069   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":2065:2066   */\n      0x00\n        /* \"#utility.yul\":2062:2063   */\n      dup1\n        /* \"#utility.yul\":2055:2067   */\n      revert\n        /* \"#utility.yul\":2017:2069   */\n    tag_433:\n      pop\n        /* \"#utility.yul\":2110:2133   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1937:2163   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2350:2987   */\n    tag_72:\n        /* \"#utility.yul\":2540:2542   */\n      0x20\n        /* \"#utility.yul\":2552:2573   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2622:2635   */\n      dup3\n      mload\n        /* \"#utility.yul\":2525:2543   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2644:2666   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2492:2496   */\n      0x00\n      swap2\n        /* \"#utility.yul\":2723:2738   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":2697:2699   */\n      0x40\n        /* \"#utility.yul\":2682:2700   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":2492:2496   */\n      dup4\n        /* \"#utility.yul\":2766:2961   */\n    tag_436:\n        /* \"#utility.yul\":2780:2786   */\n      dup2\n        /* \"#utility.yul\":2777:2778   */\n      dup2\n        /* \"#utility.yul\":2774:2787   */\n      lt\n        /* \"#utility.yul\":2766:2961   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":2845:2858   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2841:2880   */\n      and\n        /* \"#utility.yul\":2829:2881   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2910:2912   */\n      0x20\n        /* \"#utility.yul\":2936:2951   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":2901:2913   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":2877:2878   */\n      0x01\n        /* \"#utility.yul\":2795:2804   */\n      add\n        /* \"#utility.yul\":2766:2961   */\n      jump(tag_436)\n    tag_438:\n      pop\n        /* \"#utility.yul\":2978:2981   */\n      swap1\n      swap6\n        /* \"#utility.yul\":2350:2987   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2992:3359   */\n    tag_75:\n        /* \"#utility.yul\":3060:3066   */\n      0x00\n        /* \"#utility.yul\":3068:3074   */\n      dup1\n        /* \"#utility.yul\":3121:3123   */\n      0x40\n        /* \"#utility.yul\":3109:3118   */\n      dup4\n        /* \"#utility.yul\":3100:3107   */\n      dup6\n        /* \"#utility.yul\":3096:3119   */\n      sub\n        /* \"#utility.yul\":3092:3124   */\n      slt\n        /* \"#utility.yul\":3089:3141   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":3137:3138   */\n      0x00\n        /* \"#utility.yul\":3134:3135   */\n      dup1\n        /* \"#utility.yul\":3127:3139   */\n      revert\n        /* \"#utility.yul\":3089:3141   */\n    tag_440:\n        /* \"#utility.yul\":3182:3205   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3281:3283   */\n      0x20\n        /* \"#utility.yul\":3266:3284   */\n      dup4\n      add\n        /* \"#utility.yul\":3253:3285   */\n      calldataload\n        /* \"#utility.yul\":3294:3327   */\n      tag_425\n        /* \"#utility.yul\":3253:3285   */\n      dup2\n        /* \"#utility.yul\":3294:3327   */\n      tag_408\n      jump\t// in\n        /* \"#utility.yul\":3364:3513   */\n    tag_410:\n        /* \"#utility.yul\":3438:3458   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3487:3488   */\n      0x02\n        /* \"#utility.yul\":3477:3489   */\n      dup2\n      lt\n        /* \"#utility.yul\":3467:3507   */\n      tag_443\n      jumpi\n        /* \"#utility.yul\":3503:3504   */\n      0x00\n        /* \"#utility.yul\":3500:3501   */\n      dup1\n        /* \"#utility.yul\":3493:3505   */\n      revert\n        /* \"#utility.yul\":3467:3507   */\n    tag_443:\n        /* \"#utility.yul\":3364:3513   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3518:5157   */\n    tag_85:\n        /* \"#utility.yul\":3721:3727   */\n      0x00\n        /* \"#utility.yul\":3729:3735   */\n      dup1\n        /* \"#utility.yul\":3737:3743   */\n      0x00\n        /* \"#utility.yul\":3745:3751   */\n      dup1\n        /* \"#utility.yul\":3753:3759   */\n      0x00\n        /* \"#utility.yul\":3761:3767   */\n      dup1\n        /* \"#utility.yul\":3769:3775   */\n      0x00\n        /* \"#utility.yul\":3777:3783   */\n      dup1\n        /* \"#utility.yul\":3785:3791   */\n      0x00\n        /* \"#utility.yul\":3793:3799   */\n      dup1\n        /* \"#utility.yul\":3801:3808   */\n      0x00\n        /* \"#utility.yul\":3855:3858   */\n      0x0160\n        /* \"#utility.yul\":3843:3852   */\n      dup13\n        /* \"#utility.yul\":3834:3841   */\n      dup15\n        /* \"#utility.yul\":3830:3853   */\n      sub\n        /* \"#utility.yul\":3826:3859   */\n      slt\n        /* \"#utility.yul\":3823:3876   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":3872:3873   */\n      0x00\n        /* \"#utility.yul\":3869:3870   */\n      dup1\n        /* \"#utility.yul\":3862:3874   */\n      revert\n        /* \"#utility.yul\":3823:3876   */\n    tag_445:\n        /* \"#utility.yul\":3911:3920   */\n      dup12\n        /* \"#utility.yul\":3898:3921   */\n      calldataload\n        /* \"#utility.yul\":3930:3961   */\n      tag_446\n        /* \"#utility.yul\":3955:3960   */\n      dup2\n        /* \"#utility.yul\":3930:3961   */\n      tag_408\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":3980:3985   */\n      swap11\n      pop\n        /* \"#utility.yul\":4037:4039   */\n      0x20\n        /* \"#utility.yul\":4022:4040   */\n      dup13\n      add\n        /* \"#utility.yul\":4009:4041   */\n      calldataload\n        /* \"#utility.yul\":4050:4083   */\n      tag_447\n        /* \"#utility.yul\":4009:4041   */\n      dup2\n        /* \"#utility.yul\":4050:4083   */\n      tag_408\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":4102:4109   */\n      swap10\n      pop\n        /* \"#utility.yul\":4161:4163   */\n      0x40\n        /* \"#utility.yul\":4146:4164   */\n      dup13\n      add\n        /* \"#utility.yul\":4133:4165   */\n      calldataload\n        /* \"#utility.yul\":4174:4207   */\n      tag_448\n        /* \"#utility.yul\":4133:4165   */\n      dup2\n        /* \"#utility.yul\":4174:4207   */\n      tag_408\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":4226:4233   */\n      swap9\n      pop\n        /* \"#utility.yul\":4285:4287   */\n      0x60\n        /* \"#utility.yul\":4270:4288   */\n      dup13\n      add\n        /* \"#utility.yul\":4257:4289   */\n      calldataload\n        /* \"#utility.yul\":4298:4331   */\n      tag_449\n        /* \"#utility.yul\":4257:4289   */\n      dup2\n        /* \"#utility.yul\":4298:4331   */\n      tag_408\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":4350:4357   */\n      swap8\n      pop\n        /* \"#utility.yul\":4409:4412   */\n      0x80\n        /* \"#utility.yul\":4394:4413   */\n      dup13\n      add\n        /* \"#utility.yul\":4381:4414   */\n      calldataload\n        /* \"#utility.yul\":4423:4456   */\n      tag_450\n        /* \"#utility.yul\":4381:4414   */\n      dup2\n        /* \"#utility.yul\":4423:4456   */\n      tag_408\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":4475:4482   */\n      swap7\n      pop\n        /* \"#utility.yul\":4555:4558   */\n      0xa0\n        /* \"#utility.yul\":4540:4559   */\n      dup13\n      add\n        /* \"#utility.yul\":4527:4560   */\n      calldataload\n        /* \"#utility.yul\":4569:4602   */\n      tag_451\n        /* \"#utility.yul\":4527:4560   */\n      dup2\n        /* \"#utility.yul\":4569:4602   */\n      tag_408\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":4621:4628   */\n      swap6\n      pop\n        /* \"#utility.yul\":4701:4704   */\n      0xc0\n        /* \"#utility.yul\":4686:4705   */\n      dup13\n      add\n        /* \"#utility.yul\":4673:4706   */\n      calldataload\n        /* \"#utility.yul\":4715:4748   */\n      tag_452\n        /* \"#utility.yul\":4673:4706   */\n      dup2\n        /* \"#utility.yul\":4715:4748   */\n      tag_408\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":4767:4774   */\n      swap5\n      pop\n        /* \"#utility.yul\":4847:4850   */\n      0xe0\n        /* \"#utility.yul\":4832:4851   */\n      dup13\n      add\n        /* \"#utility.yul\":4819:4852   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":4951:4954   */\n      0x0100\n        /* \"#utility.yul\":4936:4955   */\n      dup13\n      add\n        /* \"#utility.yul\":4923:4956   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":5055:5058   */\n      0x0120\n        /* \"#utility.yul\":5040:5059   */\n      dup13\n      add\n        /* \"#utility.yul\":5027:5060   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":5106:5151   */\n      tag_453\n        /* \"#utility.yul\":5146:5149   */\n      0x0140\n        /* \"#utility.yul\":5131:5150   */\n      dup14\n      add\n        /* \"#utility.yul\":5106:5151   */\n      tag_410\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":5095:5151   */\n      swap1\n      pop\n        /* \"#utility.yul\":3518:5157   */\n      swap3\n      swap6\n      swap9\n      swap12\n      pop\n      swap3\n      swap6\n      swap9\n      swap12\n      swap1\n      swap4\n      swap7\n      swap10\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5162:5289   */\n    tag_210:\n        /* \"#utility.yul\":5223:5233   */\n      0x4e487b71\n        /* \"#utility.yul\":5218:5221   */\n      0xe0\n        /* \"#utility.yul\":5214:5234   */\n      shl\n        /* \"#utility.yul\":5211:5212   */\n      0x00\n        /* \"#utility.yul\":5204:5235   */\n      mstore\n        /* \"#utility.yul\":5254:5258   */\n      0x21\n        /* \"#utility.yul\":5251:5252   */\n      0x04\n        /* \"#utility.yul\":5244:5259   */\n      mstore\n        /* \"#utility.yul\":5278:5282   */\n      0x24\n        /* \"#utility.yul\":5275:5276   */\n      0x00\n        /* \"#utility.yul\":5268:5283   */\n      revert\n        /* \"#utility.yul\":5294:5433   */\n    tag_411:\n        /* \"#utility.yul\":5374:5375   */\n      0x02\n        /* \"#utility.yul\":5367:5372   */\n      dup2\n        /* \"#utility.yul\":5364:5376   */\n      lt\n        /* \"#utility.yul\":5354:5400   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":5380:5398   */\n      tag_457\n      tag_210\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":5409:5427   */\n      swap1\n      mstore\n        /* \"#utility.yul\":5294:5433   */\n      jump\t// out\n        /* \"#utility.yul\":5438:5578   */\n    tag_412:\n        /* \"#utility.yul\":5519:5520   */\n      0x07\n        /* \"#utility.yul\":5512:5517   */\n      dup2\n        /* \"#utility.yul\":5509:5521   */\n      lt\n        /* \"#utility.yul\":5499:5545   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":5525:5543   */\n      tag_457\n      tag_210\n      jump\t// in\n        /* \"#utility.yul\":5583:7074   */\n    tag_413:\n        /* \"#utility.yul\":5683:5695   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1204:1235   */\n      and\n        /* \"#utility.yul\":1192:1236   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5747:5751   */\n      0x20\n        /* \"#utility.yul\":5740:5745   */\n      dup2\n        /* \"#utility.yul\":5736:5752   */\n      add\n        /* \"#utility.yul\":5730:5753   */\n      mload\n        /* \"#utility.yul\":5762:5826   */\n      tag_463\n        /* \"#utility.yul\":5820:5824   */\n      0x20\n        /* \"#utility.yul\":5815:5818   */\n      dup5\n        /* \"#utility.yul\":5811:5825   */\n      add\n        /* \"#utility.yul\":5797:5809   */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1204:1235   */\n      and\n        /* \"#utility.yul\":1192:1236   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1122:1242   */\n      jump\n        /* \"#utility.yul\":5762:5826   */\n    tag_463:\n      pop\n        /* \"#utility.yul\":5875:5879   */\n      0x40\n        /* \"#utility.yul\":5868:5873   */\n      dup2\n        /* \"#utility.yul\":5864:5880   */\n      add\n        /* \"#utility.yul\":5858:5881   */\n      mload\n        /* \"#utility.yul\":5851:5855   */\n      0x40\n        /* \"#utility.yul\":5846:5849   */\n      dup4\n        /* \"#utility.yul\":5842:5856   */\n      add\n        /* \"#utility.yul\":5835:5882   */\n      mstore\n        /* \"#utility.yul\":5930:5934   */\n      0x60\n        /* \"#utility.yul\":5923:5928   */\n      dup2\n        /* \"#utility.yul\":5919:5935   */\n      add\n        /* \"#utility.yul\":5913:5936   */\n      mload\n        /* \"#utility.yul\":5945:6011   */\n      tag_464\n        /* \"#utility.yul\":6005:6009   */\n      0x60\n        /* \"#utility.yul\":6000:6003   */\n      dup5\n        /* \"#utility.yul\":5996:6010   */\n      add\n        /* \"#utility.yul\":5980:5994   */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1204:1235   */\n      and\n        /* \"#utility.yul\":1192:1236   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1122:1242   */\n      jump\n        /* \"#utility.yul\":5945:6011   */\n    tag_464:\n      pop\n        /* \"#utility.yul\":6059:6063   */\n      0x80\n        /* \"#utility.yul\":6052:6057   */\n      dup2\n        /* \"#utility.yul\":6048:6064   */\n      add\n        /* \"#utility.yul\":6042:6065   */\n      mload\n        /* \"#utility.yul\":6074:6140   */\n      tag_465\n        /* \"#utility.yul\":6134:6138   */\n      0x80\n        /* \"#utility.yul\":6129:6132   */\n      dup5\n        /* \"#utility.yul\":6125:6139   */\n      add\n        /* \"#utility.yul\":6109:6123   */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1204:1235   */\n      and\n        /* \"#utility.yul\":1192:1236   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1122:1242   */\n      jump\n        /* \"#utility.yul\":6074:6140   */\n    tag_465:\n      pop\n        /* \"#utility.yul\":6188:6192   */\n      0xa0\n        /* \"#utility.yul\":6181:6186   */\n      dup2\n        /* \"#utility.yul\":6177:6193   */\n      add\n        /* \"#utility.yul\":6171:6194   */\n      mload\n        /* \"#utility.yul\":6203:6269   */\n      tag_466\n        /* \"#utility.yul\":6263:6267   */\n      0xa0\n        /* \"#utility.yul\":6258:6261   */\n      dup5\n        /* \"#utility.yul\":6254:6268   */\n      add\n        /* \"#utility.yul\":6238:6252   */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1204:1235   */\n      and\n        /* \"#utility.yul\":1192:1236   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1122:1242   */\n      jump\n        /* \"#utility.yul\":6203:6269   */\n    tag_466:\n      pop\n        /* \"#utility.yul\":6317:6321   */\n      0xc0\n        /* \"#utility.yul\":6310:6315   */\n      dup2\n        /* \"#utility.yul\":6306:6322   */\n      add\n        /* \"#utility.yul\":6300:6323   */\n      mload\n        /* \"#utility.yul\":6332:6398   */\n      tag_467\n        /* \"#utility.yul\":6392:6396   */\n      0xc0\n        /* \"#utility.yul\":6387:6390   */\n      dup5\n        /* \"#utility.yul\":6383:6397   */\n      add\n        /* \"#utility.yul\":6367:6381   */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1204:1235   */\n      and\n        /* \"#utility.yul\":1192:1236   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1122:1242   */\n      jump\n        /* \"#utility.yul\":6332:6398   */\n    tag_467:\n      pop\n        /* \"#utility.yul\":6447:6451   */\n      0xe0\n        /* \"#utility.yul\":6440:6445   */\n      dup2\n        /* \"#utility.yul\":6436:6452   */\n      add\n        /* \"#utility.yul\":6430:6453   */\n      mload\n        /* \"#utility.yul\":6423:6427   */\n      0xe0\n        /* \"#utility.yul\":6418:6421   */\n      dup4\n        /* \"#utility.yul\":6414:6428   */\n      add\n        /* \"#utility.yul\":6407:6454   */\n      mstore\n        /* \"#utility.yul\":6505:6511   */\n      0x0100\n        /* \"#utility.yul\":6498:6503   */\n      dup2\n        /* \"#utility.yul\":6494:6512   */\n      add\n        /* \"#utility.yul\":6488:6513   */\n      mload\n        /* \"#utility.yul\":6479:6485   */\n      0x0100\n        /* \"#utility.yul\":6474:6477   */\n      dup4\n        /* \"#utility.yul\":6470:6486   */\n      add\n        /* \"#utility.yul\":6463:6514   */\n      mstore\n        /* \"#utility.yul\":6565:6571   */\n      0x0120\n        /* \"#utility.yul\":6558:6563   */\n      dup2\n        /* \"#utility.yul\":6554:6572   */\n      add\n        /* \"#utility.yul\":6548:6573   */\n      mload\n        /* \"#utility.yul\":6539:6545   */\n      0x0120\n        /* \"#utility.yul\":6534:6537   */\n      dup4\n        /* \"#utility.yul\":6530:6546   */\n      add\n        /* \"#utility.yul\":6523:6574   */\n      mstore\n        /* \"#utility.yul\":6622:6628   */\n      0x0140\n        /* \"#utility.yul\":6615:6620   */\n      dup2\n        /* \"#utility.yul\":6611:6629   */\n      add\n        /* \"#utility.yul\":6605:6630   */\n      mload\n        /* \"#utility.yul\":6639:6697   */\n      tag_468\n        /* \"#utility.yul\":6689:6695   */\n      0x0140\n        /* \"#utility.yul\":6684:6687   */\n      dup5\n        /* \"#utility.yul\":6680:6696   */\n      add\n        /* \"#utility.yul\":6664:6678   */\n      dup3\n        /* \"#utility.yul\":6639:6697   */\n      tag_411\n      jump\t// in\n    tag_468:\n      pop\n        /* \"#utility.yul\":6745:6751   */\n      0x0160\n        /* \"#utility.yul\":6738:6743   */\n      dup2\n        /* \"#utility.yul\":6734:6752   */\n      add\n        /* \"#utility.yul\":6728:6753   */\n      mload\n        /* \"#utility.yul\":6762:6811   */\n      tag_469\n        /* \"#utility.yul\":6803:6809   */\n      0x0160\n        /* \"#utility.yul\":6798:6801   */\n      dup5\n        /* \"#utility.yul\":6794:6810   */\n      add\n        /* \"#utility.yul\":6778:6792   */\n      dup3\n        /* \"#utility.yul\":375:388   */\n      iszero\n        /* \"#utility.yul\":368:389   */\n      iszero\n        /* \"#utility.yul\":356:390   */\n      swap1\n      mstore\n        /* \"#utility.yul\":305:396   */\n      jump\n        /* \"#utility.yul\":6762:6811   */\n    tag_469:\n      pop\n        /* \"#utility.yul\":6859:6865   */\n      0x0180\n        /* \"#utility.yul\":6852:6857   */\n      dup2\n        /* \"#utility.yul\":6848:6866   */\n      add\n        /* \"#utility.yul\":6842:6867   */\n      mload\n        /* \"#utility.yul\":6876:6935   */\n      tag_470\n        /* \"#utility.yul\":6927:6933   */\n      0x0180\n        /* \"#utility.yul\":6922:6925   */\n      dup5\n        /* \"#utility.yul\":6918:6934   */\n      add\n        /* \"#utility.yul\":6902:6916   */\n      dup3\n        /* \"#utility.yul\":6876:6935   */\n      tag_412\n      jump\t// in\n    tag_470:\n      pop\n        /* \"#utility.yul\":6983:6989   */\n      0x01a0\n        /* \"#utility.yul\":6976:6981   */\n      dup2\n        /* \"#utility.yul\":6972:6990   */\n      add\n        /* \"#utility.yul\":6966:6991   */\n      mload\n        /* \"#utility.yul\":7000:7068   */\n      tag_188\n        /* \"#utility.yul\":7060:7066   */\n      0x01a0\n        /* \"#utility.yul\":7055:7058   */\n      dup5\n        /* \"#utility.yul\":7051:7067   */\n      add\n        /* \"#utility.yul\":7035:7049   */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1204:1235   */\n      and\n        /* \"#utility.yul\":1192:1236   */\n      swap1\n      mstore\n        /* \"#utility.yul\":1122:1242   */\n      jump\n        /* \"#utility.yul\":7079:7773   */\n    tag_91:\n        /* \"#utility.yul\":7325:7327   */\n      0x20\n        /* \"#utility.yul\":7337:7358   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7407:7420   */\n      dup3\n      mload\n        /* \"#utility.yul\":7310:7328   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":7429:7451   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7277:7281   */\n      0x00\n      swap2\n        /* \"#utility.yul\":7508:7523   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":7482:7484   */\n      0x40\n        /* \"#utility.yul\":7467:7485   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":7277:7281   */\n      dup4\n        /* \"#utility.yul\":7551:7747   */\n    tag_473:\n        /* \"#utility.yul\":7565:7571   */\n      dup2\n        /* \"#utility.yul\":7562:7563   */\n      dup2\n        /* \"#utility.yul\":7559:7572   */\n      lt\n        /* \"#utility.yul\":7551:7747   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":7614:7663   */\n      tag_476\n        /* \"#utility.yul\":7659:7662   */\n      dup4\n        /* \"#utility.yul\":7650:7656   */\n      dup6\n        /* \"#utility.yul\":7644:7657   */\n      mload\n        /* \"#utility.yul\":7614:7663   */\n      tag_413\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":7734:7736   */\n      0x20\n        /* \"#utility.yul\":7722:7737   */\n      swap4\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":7692:7698   */\n      0x01c0\n        /* \"#utility.yul\":7683:7699   */\n      swap3\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":7587:7588   */\n      0x01\n        /* \"#utility.yul\":7580:7589   */\n      add\n        /* \"#utility.yul\":7551:7747   */\n      jump(tag_473)\n        /* \"#utility.yul\":8312:8722   */\n    tag_122:\n        /* \"#utility.yul\":8393:8399   */\n      0x00\n        /* \"#utility.yul\":8401:8407   */\n      dup1\n        /* \"#utility.yul\":8454:8456   */\n      0x40\n        /* \"#utility.yul\":8442:8451   */\n      dup4\n        /* \"#utility.yul\":8433:8440   */\n      dup6\n        /* \"#utility.yul\":8429:8452   */\n      sub\n        /* \"#utility.yul\":8425:8457   */\n      slt\n        /* \"#utility.yul\":8422:8474   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":8470:8471   */\n      0x00\n        /* \"#utility.yul\":8467:8468   */\n      dup1\n        /* \"#utility.yul\":8460:8472   */\n      revert\n        /* \"#utility.yul\":8422:8474   */\n    tag_480:\n        /* \"#utility.yul\":8509:8518   */\n      dup3\n        /* \"#utility.yul\":8496:8519   */\n      calldataload\n        /* \"#utility.yul\":8528:8559   */\n      tag_481\n        /* \"#utility.yul\":8553:8558   */\n      dup2\n        /* \"#utility.yul\":8528:8559   */\n      tag_408\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":8578:8583   */\n      swap2\n      pop\n        /* \"#utility.yul\":8635:8637   */\n      0x20\n        /* \"#utility.yul\":8620:8638   */\n      dup4\n      add\n        /* \"#utility.yul\":8607:8639   */\n      calldataload\n        /* \"#utility.yul\":8670:8671   */\n      0x07\n        /* \"#utility.yul\":8658:8672   */\n      dup2\n      lt\n        /* \"#utility.yul\":8648:8690   */\n      tag_425\n      jumpi\n        /* \"#utility.yul\":8686:8687   */\n      0x00\n        /* \"#utility.yul\":8683:8684   */\n      dup1\n        /* \"#utility.yul\":8676:8688   */\n      revert\n        /* \"#utility.yul\":8727:8934   */\n    tag_134:\n        /* \"#utility.yul\":8872:8874   */\n      0x20\n        /* \"#utility.yul\":8857:8875   */\n      dup2\n      add\n        /* \"#utility.yul\":8884:8928   */\n      tag_157\n        /* \"#utility.yul\":8861:8870   */\n      dup3\n        /* \"#utility.yul\":8910:8916   */\n      dup5\n        /* \"#utility.yul\":8884:8928   */\n      tag_412\n      jump\t// in\n        /* \"#utility.yul\":8939:9196   */\n    tag_139:\n        /* \"#utility.yul\":9129:9132   */\n      0x01c0\n        /* \"#utility.yul\":9114:9133   */\n      dup2\n      add\n        /* \"#utility.yul\":9142:9190   */\n      tag_157\n        /* \"#utility.yul\":9118:9127   */\n      dup3\n        /* \"#utility.yul\":9172:9178   */\n      dup5\n        /* \"#utility.yul\":9142:9190   */\n      tag_413\n      jump\t// in\n        /* \"#utility.yul\":9729:10072   */\n    tag_166:\n        /* \"#utility.yul\":9931:9933   */\n      0x20\n        /* \"#utility.yul\":9913:9934   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9970:9972   */\n      0x13\n        /* \"#utility.yul\":9950:9968   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9943:9973   */\n      mstore\n      shl(0x6a, 0x141bdbdb081b9bdd081c9959da5cdd195c9959)\n        /* \"#utility.yul\":10004:10006   */\n      0x40\n        /* \"#utility.yul\":9989:10007   */\n      dup3\n      add\n        /* \"#utility.yul\":9982:10031   */\n      mstore\n        /* \"#utility.yul\":10063:10065   */\n      0x60\n        /* \"#utility.yul\":10048:10066   */\n      add\n      swap1\n        /* \"#utility.yul\":9729:10072   */\n      jump\t// out\n        /* \"#utility.yul\":11596:11898   */\n    tag_222:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11798:11830   */\n      dup4\n      and\n        /* \"#utility.yul\":11780:11831   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11768:11770   */\n      0x40\n        /* \"#utility.yul\":11753:11771   */\n      dup2\n      add\n        /* \"#utility.yul\":11840:11892   */\n      tag_417\n        /* \"#utility.yul\":11888:11890   */\n      0x20\n        /* \"#utility.yul\":11873:11891   */\n      dup4\n      add\n        /* \"#utility.yul\":11865:11871   */\n      dup5\n        /* \"#utility.yul\":11840:11892   */\n      tag_411\n      jump\t// in\n        /* \"#utility.yul\":11903:12030   */\n    tag_228:\n        /* \"#utility.yul\":11964:11974   */\n      0x4e487b71\n        /* \"#utility.yul\":11959:11962   */\n      0xe0\n        /* \"#utility.yul\":11955:11975   */\n      shl\n        /* \"#utility.yul\":11952:11953   */\n      0x00\n        /* \"#utility.yul\":11945:11976   */\n      mstore\n        /* \"#utility.yul\":11995:11999   */\n      0x41\n        /* \"#utility.yul\":11992:11993   */\n      0x04\n        /* \"#utility.yul\":11985:12000   */\n      mstore\n        /* \"#utility.yul\":12019:12023   */\n      0x24\n        /* \"#utility.yul\":12016:12017   */\n      0x00\n        /* \"#utility.yul\":12009:12024   */\n      revert\n        /* \"#utility.yul\":12035:12162   */\n    tag_238:\n        /* \"#utility.yul\":12096:12106   */\n      0x4e487b71\n        /* \"#utility.yul\":12091:12094   */\n      0xe0\n        /* \"#utility.yul\":12087:12107   */\n      shl\n        /* \"#utility.yul\":12084:12085   */\n      0x00\n        /* \"#utility.yul\":12077:12108   */\n      mstore\n        /* \"#utility.yul\":12127:12131   */\n      0x32\n        /* \"#utility.yul\":12124:12125   */\n      0x04\n        /* \"#utility.yul\":12117:12132   */\n      mstore\n        /* \"#utility.yul\":12151:12155   */\n      0x24\n        /* \"#utility.yul\":12148:12149   */\n      0x00\n        /* \"#utility.yul\":12141:12156   */\n      revert\n        /* \"#utility.yul\":12922:13230   */\n    tag_275:\n        /* \"#utility.yul\":13106:13108   */\n      0x40\n        /* \"#utility.yul\":13091:13109   */\n      dup2\n      add\n        /* \"#utility.yul\":13118:13162   */\n      tag_501\n        /* \"#utility.yul\":13095:13104   */\n      dup3\n        /* \"#utility.yul\":13144:13150   */\n      dup6\n        /* \"#utility.yul\":13118:13162   */\n      tag_412\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":13171:13224   */\n      tag_417\n        /* \"#utility.yul\":13220:13222   */\n      0x20\n        /* \"#utility.yul\":13209:13218   */\n      dup4\n        /* \"#utility.yul\":13205:13223   */\n      add\n        /* \"#utility.yul\":13197:13203   */\n      dup5\n        /* \"#utility.yul\":13171:13224   */\n      tag_412\n      jump\t// in\n        /* \"#utility.yul\":14044:14269   */\n    tag_355:\n        /* \"#utility.yul\":14111:14120   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":14132:14143   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":14129:14263   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":14185:14195   */\n      0x4e487b71\n        /* \"#utility.yul\":14180:14183   */\n      0xe0\n        /* \"#utility.yul\":14176:14196   */\n      shl\n        /* \"#utility.yul\":14173:14174   */\n      0x00\n        /* \"#utility.yul\":14166:14197   */\n      mstore\n        /* \"#utility.yul\":14220:14224   */\n      0x11\n        /* \"#utility.yul\":14217:14218   */\n      0x04\n        /* \"#utility.yul\":14210:14225   */\n      mstore\n        /* \"#utility.yul\":14248:14252   */\n      0x24\n        /* \"#utility.yul\":14245:14246   */\n      0x00\n        /* \"#utility.yul\":14238:14253   */\n      revert\n        /* \"#utility.yul\":14274:14401   */\n    tag_364:\n        /* \"#utility.yul\":14335:14345   */\n      0x4e487b71\n        /* \"#utility.yul\":14330:14333   */\n      0xe0\n        /* \"#utility.yul\":14326:14346   */\n      shl\n        /* \"#utility.yul\":14323:14324   */\n      0x00\n        /* \"#utility.yul\":14316:14347   */\n      mstore\n        /* \"#utility.yul\":14366:14370   */\n      0x31\n        /* \"#utility.yul\":14363:14364   */\n      0x04\n        /* \"#utility.yul\":14356:14371   */\n      mstore\n        /* \"#utility.yul\":14390:14394   */\n      0x24\n        /* \"#utility.yul\":14387:14388   */\n      0x00\n        /* \"#utility.yul\":14380:14395   */\n      revert\n\n    auxdata: 0xa26469706673582212206d1a1197a7b0c64f985e9f6cdc927f89f392d3a6a820d17aa8271fcc23c6619d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_885": {
									"entryPoint": null,
									"id": 885,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 75,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_468": {
									"entryPoint": null,
									"id": 468,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": null,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A PUSH0 CALLER PUSH2 0x4B JUMP JUMPDEST POP PUSH2 0x45 PUSH32 0x6077685936C8169D09204A1D97DB12E41713588C38E1D29A61867D3DCEE98AFF CALLER PUSH2 0x4B JUMP JUMPDEST POP PUSH2 0xF4 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xEB JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xA3 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0xEE JUMP JUMPDEST POP PUSH0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21FE DUP1 PUSH2 0x101 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7570E389 GT PUSH2 0xFE JUMPI DUP1 PUSH4 0xC489579D GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xD3FFE67A GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xD3FFE67A EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0xE7EF32F7 EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xEC209544 EQ PUSH2 0x490 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC489579D EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xC56F1B44 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xC81C3BEF EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0xD3E90FA0 EQ PUSH2 0x442 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0xA8D088BB EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xA956239B EQ PUSH2 0x3DC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7570E389 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x7E72C7D7 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x8A4ADF24 EQ PUSH2 0x389 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x169 JUMPI DUP1 PUSH4 0x43756020 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x43756020 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x52FC9B0E EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x56D73568 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x5D102DF7 EQ PUSH2 0x350 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x37E238C5 EQ PUSH2 0x2E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E4966AB GT PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x1E4966AB EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x1F2F2E14 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x24A44EFB EQ PUSH2 0x29D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x5C4FDF9 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xF4EF8A6 EQ PUSH2 0x207 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1DD PUSH2 0x1D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D3B JUMP JUMPDEST PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D7D JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x21A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x268 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST PUSH2 0x28F PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x1DCF JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x2B0 PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x69E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1DE6 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1E31 JUMP JUMPDEST PUSH2 0x711 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1E31 JUMP JUMPDEST PUSH2 0x73B JUMP JUMPDEST PUSH2 0x205 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D7D JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E67 JUMP JUMPDEST PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x31C PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x2079 JUMP JUMPDEST PUSH2 0x28F PUSH32 0x6077685936C8169D09204A1D97DB12E41713588C38E1D29A61867D3DCEE98AFF DUP2 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0xF2E JUMP JUMPDEST PUSH2 0x21A PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0xFB4 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x21A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1E31 JUMP JUMPDEST PUSH2 0x116D JUMP JUMPDEST PUSH2 0x28F PUSH0 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x20BC JUMP JUMPDEST PUSH2 0x1195 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1D7D JUMP JUMPDEST PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x2B0 PUSH2 0x138D JUMP JUMPDEST PUSH2 0x435 PUSH2 0x418 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x20EB JUMP JUMPDEST PUSH2 0x455 PUSH2 0x450 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x20F9 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x28F JUMP JUMPDEST PUSH2 0x205 PUSH2 0x478 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E31 JUMP JUMPDEST PUSH2 0x1562 JUMP JUMPDEST PUSH2 0x2B0 PUSH2 0x48B CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x1586 JUMP JUMPDEST PUSH2 0x31C PUSH2 0x49E CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x15F7 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4D3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x4F9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO ISZERO JUMPDEST PUSH2 0x53E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420616464726573736573 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x574 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x535 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C7420616C7265616479207265676973746572656420666F7220746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1CC81C1BDBDB PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x535 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP7 AND SWAP5 DUP6 OR SWAP1 SSTORE MLOAD PUSH32 0xF8EE9039D8E4D43426638703C71517008894FDEA742BB2D2DBFF5A46FB07ABDB SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x676 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x535 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x705 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E7 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x72B DUP2 PUSH2 0x183E JUMP JUMPDEST PUSH2 0x735 DUP4 DUP4 PUSH2 0x1848 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76E DUP3 DUP3 PUSH2 0x18D7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x7A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x535 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x80B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F72726F7765722063616E6E6F7420626520746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x535 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 AND SWAP1 DUP3 AND DUP2 EQ PUSH2 0x76E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x84B JUMPI PUSH2 0x84B DUP2 DUP5 PUSH2 0x1940 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP6 MSTORE DUP4 DUP6 KECCAK256 ADD DUP1 SLOAD SWAP7 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP8 DUP9 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP5 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH2 0x8FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20616464726573732063616E6E6F74206265207A65726F0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x535 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x961 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20616C72656164792072656769737465726564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9F1 JUMPI PUSH2 0x9F1 PUSH2 0x1F25 JUMP JUMPDEST DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP15 AND PUSH1 0x20 SWAP3 DUP4 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP1 DUP5 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SLOAD SWAP1 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP3 SSTORE SWAP5 DUP7 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD DUP1 SLOAD SWAP3 DUP8 AND SWAP3 DUP9 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP3 DUP7 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD SWAP2 DUP7 AND SWAP2 DUP8 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP7 ADD MLOAD SWAP2 DUP2 ADD DUP1 SLOAD SWAP3 DUP6 AND SWAP3 DUP7 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0x5 DUP3 ADD DUP1 SLOAD SWAP2 DUP6 AND SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x6 DUP3 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP5 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP2 SSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0x7 DUP4 ADD SSTORE PUSH2 0x100 DUP4 ADD MLOAD PUSH1 0x8 DUP4 ADD SSTORE PUSH2 0x120 DUP4 ADD MLOAD PUSH1 0x9 DUP4 ADD SSTORE PUSH2 0x140 DUP4 ADD MLOAD PUSH1 0xA DUP4 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF NOT AND SWAP1 DUP4 DUP2 DUP2 GT ISZERO PUSH2 0xAFF JUMPI PUSH2 0xAFF PUSH2 0x1F25 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x160 DUP3 ADD MLOAD PUSH1 0xA DUP3 ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT DUP4 AND DUP2 OR DUP3 SSTORE PUSH2 0x180 DUP6 ADD MLOAD SWAP3 PUSH3 0xFF0000 NOT SWAP1 SWAP2 AND PUSH3 0xFFFF00 NOT SWAP1 SWAP2 AND OR PUSH3 0x10000 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xB4F JUMPI PUSH2 0xB4F PUSH2 0x1F25 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x1A0 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x5 PUSH0 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP12 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP12 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x8 PUSH0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xC76 JUMPI PUSH2 0xC76 PUSH2 0x1F25 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8F723E49DC038E67C41B41307A1E0C65653D50125A0C474A21AC32D9A0B24D2B DUP12 DUP6 PUSH1 0x40 MLOAD PUSH2 0xCCA SWAP3 SWAP2 SWAP1 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP4 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xD45 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD27 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD67 JUMPI PUSH2 0xD67 PUSH2 0x2152 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDA0 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xD8D PUSH2 0x1CC8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD85 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xF26 JUMPI PUSH1 0x4 PUSH0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xDC3 JUMPI PUSH2 0xDC3 PUSH2 0x2166 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE DUP3 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH0 KECCAK256 DUP3 MLOAD PUSH2 0x1C0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP6 AND DUP2 MSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD DUP7 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD DUP5 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD DUP5 AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD SWAP1 SWAP4 AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x8 DUP4 ADD SLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0x9 DUP4 ADD SLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0xA DUP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x140 DUP5 ADD SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP2 GT ISZERO PUSH2 0xE88 JUMPI PUSH2 0xE88 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xE99 JUMPI PUSH2 0xE99 PUSH2 0x1F25 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xA DUP3 ADD SLOAD PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 PUSH3 0x10000 SWAP1 SWAP2 DIV AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xECF JUMPI PUSH2 0xECF PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xEE0 JUMPI PUSH2 0xEE0 PUSH2 0x1F25 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xA SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xF13 JUMPI PUSH2 0xF13 PUSH2 0x2166 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xDA5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF38 PUSH0 CALLER PUSH2 0x116D JUMP JUMPDEST PUSH2 0xF7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B0B63632B91034B9903737BA1030B71030B236B4B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x535 JUMP JUMPDEST PUSH2 0xFA7 PUSH32 0x6077685936C8169D09204A1D97DB12E41713588C38E1D29A61867D3DCEE98AFF DUP3 PUSH2 0x711 JUMP JUMPDEST PUSH2 0xFB1 PUSH0 DUP3 PUSH2 0x711 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND PUSH2 0x1028 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C206E6F742072656769737465726564206F7220686173206E6F207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1D5B1D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x535 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x107C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x535 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x10A0 DUP2 DUP4 PUSH2 0x1A7A JUMP JUMPDEST PUSH2 0x10A9 DUP3 PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP3 AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP7 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP3 AND SWAP1 SSTORE SWAP4 DUP2 ADD DUP1 SLOAD DUP6 AND SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP1 SLOAD DUP6 AND SWAP1 SSTORE PUSH1 0x6 DUP2 ADD DUP1 SLOAD SWAP1 SWAP5 AND SWAP1 SWAP4 SSTORE PUSH1 0x7 DUP4 ADD DUP5 SWAP1 SSTORE PUSH1 0x8 DUP1 DUP5 ADD DUP6 SWAP1 SSTORE PUSH1 0x9 DUP5 ADD DUP6 SWAP1 SSTORE PUSH1 0xA SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE SWAP2 SWAP1 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x334D0B2111287DFDDEBE4B4C1C5AF3AE644909D7FCD024377BF601E236ED5ABB SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x11CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x535 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND SWAP2 DUP4 SWAP2 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1203 JUMPI PUSH2 0x1203 PUSH2 0x1F25 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA61679A80E33B8CCD7049ED35B83F875349AA2875EF98CE5BA441A88761FB4E DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1243 SWAP3 SWAP2 SWAP1 PUSH2 0x217A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x125A DUP2 PUSH2 0x183E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x12BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C744D616E616765722063616E6E6F74206265207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x535 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x131E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5265776172644D616E616765722063616E6E6F74206265207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x535 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP2 DUP7 AND SWAP2 SWAP1 SWAP3 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x8FC18CC172F74C81235145B7927190D2BD0E351FC45BFB17BB572593273CEF21 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x13E3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13C5 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13F5 PUSH2 0x1CC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x142B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x535 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x1C0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP7 AND DUP2 MSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD DUP8 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP6 AND PUSH1 0x60 DUP6 ADD MSTORE SWAP2 DUP3 ADD SLOAD DUP5 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD DUP5 AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD SWAP1 SWAP4 AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x140 DUP5 ADD SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP2 GT ISZERO PUSH2 0x14E5 JUMPI PUSH2 0x14E5 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x14F6 JUMPI PUSH2 0x14F6 PUSH2 0x1F25 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xA DUP3 ADD SLOAD PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 PUSH3 0x10000 SWAP1 SWAP2 DIV AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x152C JUMPI PUSH2 0x152C PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x153D JUMPI PUSH2 0x153D PUSH2 0x1F25 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xA SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x157C DUP2 PUSH2 0x183E JUMP JUMPDEST PUSH2 0x735 DUP4 DUP4 PUSH2 0x18D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x705 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E7 JUMPI POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP4 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x165D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x163F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x167F JUMPI PUSH2 0x167F PUSH2 0x2152 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16B8 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x16A5 PUSH2 0x1CC8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x169D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xF26 JUMPI PUSH1 0x4 PUSH0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x16DB JUMPI PUSH2 0x16DB PUSH2 0x2166 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE DUP3 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH0 KECCAK256 DUP3 MLOAD PUSH2 0x1C0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP6 AND DUP2 MSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD DUP7 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD DUP5 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD DUP5 AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD SWAP1 SWAP4 AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x8 DUP4 ADD SLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0x9 DUP4 ADD SLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0xA DUP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x140 DUP5 ADD SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP2 GT ISZERO PUSH2 0x17A0 JUMPI PUSH2 0x17A0 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x17B1 JUMPI PUSH2 0x17B1 PUSH2 0x1F25 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xA DUP3 ADD SLOAD PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 PUSH3 0x10000 SWAP1 SWAP2 DIV AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x17E7 JUMPI PUSH2 0x17E7 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x17F8 JUMPI PUSH2 0x17F8 PUSH2 0x1F25 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xA SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x182B JUMPI PUSH2 0x182B PUSH2 0x2166 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x16BD JUMP JUMPDEST PUSH2 0xFB1 DUP2 CALLER PUSH2 0x1C31 JUMP JUMPDEST PUSH0 PUSH2 0x1853 DUP4 DUP4 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x18D0 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1888 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4D3 JUMP JUMPDEST POP PUSH0 PUSH2 0x4D3 JUMP JUMPDEST PUSH0 PUSH2 0x18E2 DUP4 DUP4 PUSH2 0x116D JUMP JUMPDEST ISZERO PUSH2 0x18D0 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1961 SWAP1 DUP4 PUSH2 0x1C6E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x76E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x19A7 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2195 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 DUP3 SWAP1 DUP2 LT PUSH2 0x19D4 JUMPI PUSH2 0x19D4 PUSH2 0x2166 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1A10 JUMPI PUSH2 0x1A10 PUSH2 0x2166 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP7 AND DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x1A54 JUMPI PUSH2 0x1A54 PUSH2 0x21B4 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1A9B SWAP1 DUP4 PUSH2 0x1C6E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x1AC3 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2195 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 DUP3 SWAP1 DUP2 LT PUSH2 0x1AF0 JUMPI PUSH2 0x1AF0 PUSH2 0x2166 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1B2C JUMPI PUSH2 0x1B2C PUSH2 0x2166 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP7 AND DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x1A54 JUMPI PUSH2 0x1A54 PUSH2 0x21B4 JUMP JUMPDEST PUSH0 PUSH2 0x1B7C PUSH1 0x3 DUP4 PUSH2 0x1C6E JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH2 0x1B90 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2195 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1BA5 JUMPI PUSH2 0x1BA5 PUSH2 0x2166 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0x1BD0 JUMPI PUSH2 0x1BD0 PUSH2 0x2166 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP1 SLOAD DUP1 PUSH2 0x1C0C JUMPI PUSH2 0x1C0C PUSH2 0x21B4 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x1C3B DUP3 DUP3 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x1C6A JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x535 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x1CBE JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C96 JUMPI PUSH2 0x1C96 PUSH2 0x2166 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1CB6 JUMPI SWAP1 POP PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1C71 JUMP JUMPDEST POP PUSH0 NOT SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x1C0 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x140 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x160 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x180 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1A0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D4B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1D62 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D8E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1D99 DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1DA9 DUP2 PUSH2 0x1D69 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DC4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D62 DUP2 PUSH2 0x1D69 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DDF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E26 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1DFF JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E42 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1DA9 DUP2 PUSH2 0x1D69 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x1E62 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x1E82 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP12 CALLDATALOAD PUSH2 0x1E8D DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP11 POP PUSH1 0x20 DUP13 ADD CALLDATALOAD PUSH2 0x1E9D DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP10 POP PUSH1 0x40 DUP13 ADD CALLDATALOAD PUSH2 0x1EAD DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP9 POP PUSH1 0x60 DUP13 ADD CALLDATALOAD PUSH2 0x1EBD DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP8 POP PUSH1 0x80 DUP13 ADD CALLDATALOAD PUSH2 0x1ECD DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP7 POP PUSH1 0xA0 DUP13 ADD CALLDATALOAD PUSH2 0x1EDD DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP6 POP PUSH1 0xC0 DUP13 ADD CALLDATALOAD PUSH2 0x1EED DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP5 POP PUSH1 0xE0 DUP13 ADD CALLDATALOAD SWAP4 POP PUSH2 0x100 DUP13 ADD CALLDATALOAD SWAP3 POP PUSH2 0x120 DUP13 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1F13 PUSH2 0x140 DUP14 ADD PUSH2 0x1E54 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1F49 JUMPI PUSH2 0x1F49 PUSH2 0x1F25 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x1F49 JUMPI PUSH2 0x1F49 PUSH2 0x1F25 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x1F84 PUSH1 0x20 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x1FA9 PUSH1 0x60 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x80 DUP2 ADD MLOAD PUSH2 0x1FC4 PUSH1 0x80 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP2 ADD MLOAD PUSH2 0x1FDF PUSH1 0xA0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x1FFA PUSH1 0xC0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH2 0x2031 PUSH2 0x140 DUP5 ADD DUP3 PUSH2 0x1F39 JUMP JUMPDEST POP PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x2047 PUSH2 0x160 DUP5 ADD DUP3 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x180 DUP2 ADD MLOAD PUSH2 0x205C PUSH2 0x180 DUP5 ADD DUP3 PUSH2 0x1F4D JUMP JUMPDEST POP PUSH2 0x1A0 DUP2 ADD MLOAD PUSH2 0x76E PUSH2 0x1A0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E26 JUMPI PUSH2 0x20A5 DUP4 DUP6 MLOAD PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD SWAP3 PUSH2 0x1C0 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2092 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20CD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x20D8 DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x7 DUP2 LT PUSH2 0x1DA9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x4D3 DUP3 DUP5 PUSH2 0x1F4D JUMP JUMPDEST PUSH2 0x1C0 DUP2 ADD PUSH2 0x4D3 DUP3 DUP5 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x141BDBDB081B9BDD081C9959DA5CDD195C9959 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD PUSH2 0x1D62 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F39 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x2188 DUP3 DUP6 PUSH2 0x1F4D JUMP JUMPDEST PUSH2 0x1D62 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F4D JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4D3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x1A1197A7B0C64F985E9F6CDC927F DUP10 RETURN SWAP3 0xD3 0xA6 0xA8 KECCAK256 0xD1 PUSH27 0xA8271FCC23C6619D64736F6C634300081A00330000000000000000 ",
							"sourceMap": "428:14412:9:-:0;;;2611:124;;;;;;;;;-1:-1:-1;2635:42:9;2232:4:0;2666:10:9;2635;:42::i;:::-;-1:-1:-1;2687:41:9;534:30;2717:10;2687;:41::i;:::-;;428:14412;;6179:316:0;6256:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:3;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6272:217;6179:316;;;;:::o;428:14412:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@POOL_MANAGER_ROLE_791": {
									"entryPoint": null,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 7217,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 6206,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 6216,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_468": {
									"entryPoint": null,
									"id": 468,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_removePoolFromBorrowerArray_1740": {
									"entryPoint": 6464,
									"id": 1740,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_removePoolFromLenderArray_1614": {
									"entryPoint": 6778,
									"id": 1614,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_removePoolFromMainArray_1648": {
									"entryPoint": 7024,
									"id": 1648,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 6359,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@deregisterPool_1256": {
									"entryPoint": 4166,
									"id": 1256,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@findIndexInArray_1687": {
									"entryPoint": 7278,
									"id": 1687,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAllLenderPoolDetails_1133": {
									"entryPoint": 3295,
									"id": 1133,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getAllPoolAddresses_1481": {
									"entryPoint": 5005,
									"id": 1481,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getBorrowerPoolDetails_1206": {
									"entryPoint": 5623,
									"id": 1206,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getLoanState_1074": {
									"entryPoint": null,
									"id": 1074,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getManagers_1395": {
									"entryPoint": null,
									"id": 1395,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@getPoolDetails_1446": {
									"entryPoint": 5101,
									"id": 1446,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPoolsByBorrower_1147": {
									"entryPoint": 5510,
									"id": 1147,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPoolsByLender_1419": {
									"entryPoint": 1694,
									"id": 1419,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": null,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalPools_1405": {
									"entryPoint": null,
									"id": 1405,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getVaultForPool_1471": {
									"entryPoint": 4020,
									"id": 1471,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantFactoryAccess_1507": {
									"entryPoint": 3886,
									"id": 1507,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@grantRole_147": {
									"entryPoint": 1809,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 4461,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@markPoolAsFunded_1060": {
									"entryPoint": 1600,
									"id": 1060,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@poolVaults_814": {
									"entryPoint": null,
									"id": 814,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@registerManagers_1376": {
									"entryPoint": 4688,
									"id": 1376,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@registerPool_991": {
									"entryPoint": 2212,
									"id": 991,
									"parameterSlots": 11,
									"returnSlots": 0
								},
								"@registerVault_1569": {
									"entryPoint": 1241,
									"id": 1569,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 1851,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 5474,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@rewardManager_797": {
									"entryPoint": null,
									"id": 797,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBorrowerForPool_1327": {
									"entryPoint": 1907,
									"id": 1327,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_509": {
									"entryPoint": null,
									"id": 509,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 1187,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@updateLoanState_1033": {
									"entryPoint": 4501,
									"id": 1033,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@vaultManager_794": {
									"entryPoint": null,
									"id": 794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_enum_PoolType": {
									"entryPoint": 7764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_contract$_IERC20_$456t_contract$_IERC20_$456t_contract$_IERC20_$456t_uint256t_uint256t_uint256t_enum$_PoolType_$529": {
									"entryPoint": 7783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 11
								},
								"abi_decode_tuple_t_addresst_enum$_LoanState_$537": {
									"entryPoint": 8380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 7631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 7729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_contract_IRewardManager": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_enum_LoanState": {
									"entryPoint": 8013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_enum_PoolType": {
									"entryPoint": 7993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_struct_PoolDetails": {
									"entryPoint": 8029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_enum$_PoolType_$529__to_t_address_t_uint8__fromStack_reversed": {
									"entryPoint": 8501,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_PoolDetails_$571_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_PoolDetails_$571_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IRewardManager_$727__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IVaultManager_$775__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_LoanState_$537__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_LoanState_$537_t_enum$_LoanState_$537__to_t_uint8_t_uint8__fromStack_reversed": {
									"entryPoint": 8570,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3300f91172421bdc36f79d184a3d6d7dc2e019f7fb0814aeb4306f4cacbe452e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_39a3b1530e3b6596e085e382bff955d043a269a2081635a9d861923ef05dbbcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d429b56e51591333ba49e70031a7e747fbb1110c7c7977c922e5e8e59ef9580__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_87b863ecb9e24e5ca6ed73ab80a99e3ca6cb5645b7108a8418eddd7225dd4578__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ed40e154fc5947a1352af7918961f491c7b5e4c2c2d9ffe290fde6912136551f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ee597f13de1ba23a7961edbe397251ba0565f39f3d995b5348c732d160eca14f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc861dfb3d1e0446599e73c98b2e7d579c1ecdb9e65a09f726c97d864f2bf3dd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fd60161d2dbc5f20e9acfa92ab57db75891d1d8ebbf7459220687d0a65d0b331__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_PoolDetails_$571_memory_ptr__to_t_struct$_PoolDetails_$571_memory_ptr__fromStack_reversed": {
									"entryPoint": 8441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 7973,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 8628,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8550,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8530,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 7529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14682:10",
										"nodeType": "YulBlock",
										"src": "0:14682:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "83:217:10",
													"nodeType": "YulBlock",
													"src": "83:217:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "129:16:10",
																"nodeType": "YulBlock",
																"src": "129:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "138:1:10",
																					"nodeType": "YulLiteral",
																					"src": "138:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "141:1:10",
																					"nodeType": "YulLiteral",
																					"src": "141:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "131:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:10"
																			},
																			"nativeSrc": "131:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:10"
																		},
																		"nativeSrc": "131:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "104:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "113:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "100:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:10"
																		},
																		"nativeSrc": "100:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "125:2:10",
																		"nodeType": "YulLiteral",
																		"src": "125:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "96:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:10"
																},
																"nativeSrc": "96:32:10",
																"nodeType": "YulFunctionCall",
																"src": "96:32:10"
															},
															"nativeSrc": "93:52:10",
															"nodeType": "YulIf",
															"src": "93:52:10"
														},
														{
															"nativeSrc": "154:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "180:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "167:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:10"
																},
																"nativeSrc": "167:23:10",
																"nodeType": "YulFunctionCall",
																"src": "167:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "158:5:10",
																	"nodeType": "YulTypedName",
																	"src": "158:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:10",
																"nodeType": "YulBlock",
																"src": "254:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:10",
																					"nodeType": "YulLiteral",
																					"src": "263:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:10",
																					"nodeType": "YulLiteral",
																					"src": "266:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:10"
																			},
																			"nativeSrc": "256:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:10"
																		},
																		"nativeSrc": "256:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "212:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "223:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "234:3:10",
																								"nodeType": "YulLiteral",
																								"src": "234:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "239:10:10",
																								"nodeType": "YulLiteral",
																								"src": "239:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "230:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:10"
																						},
																						"nativeSrc": "230:20:10",
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "219:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:10"
																				},
																				"nativeSrc": "219:32:10",
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "209:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:10"
																		},
																		"nativeSrc": "209:43:10",
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "202:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:10"
																},
																"nativeSrc": "202:51:10",
																"nodeType": "YulFunctionCall",
																"src": "202:51:10"
															},
															"nativeSrc": "199:71:10",
															"nodeType": "YulIf",
															"src": "199:71:10"
														},
														{
															"nativeSrc": "279:15:10",
															"nodeType": "YulAssignment",
															"src": "279:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:10",
																"nodeType": "YulIdentifier",
																"src": "289:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "14:286:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "49:9:10",
														"nodeType": "YulTypedName",
														"src": "49:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "60:7:10",
														"nodeType": "YulTypedName",
														"src": "60:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "72:6:10",
														"nodeType": "YulTypedName",
														"src": "72:6:10",
														"type": ""
													}
												],
												"src": "14:286:10"
											},
											{
												"body": {
													"nativeSrc": "346:50:10",
													"nodeType": "YulBlock",
													"src": "346:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "363:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "363:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "382:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "382:5:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "375:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "375:6:10"
																				},
																				"nativeSrc": "375:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "375:13:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "368:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "368:6:10"
																		},
																		"nativeSrc": "368:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "368:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "356:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "356:6:10"
																},
																"nativeSrc": "356:34:10",
																"nodeType": "YulFunctionCall",
																"src": "356:34:10"
															},
															"nativeSrc": "356:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "356:34:10"
														}
													]
												},
												"name": "abi_encode_bool",
												"nativeSrc": "305:91:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "330:5:10",
														"nodeType": "YulTypedName",
														"src": "330:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "337:3:10",
														"nodeType": "YulTypedName",
														"src": "337:3:10",
														"type": ""
													}
												],
												"src": "305:91:10"
											},
											{
												"body": {
													"nativeSrc": "496:92:10",
													"nodeType": "YulBlock",
													"src": "496:92:10",
													"statements": [
														{
															"nativeSrc": "506:26:10",
															"nodeType": "YulAssignment",
															"src": "506:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "518:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "518:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "529:2:10",
																		"nodeType": "YulLiteral",
																		"src": "529:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "514:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "514:3:10"
																},
																"nativeSrc": "514:18:10",
																"nodeType": "YulFunctionCall",
																"src": "514:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "506:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "506:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "548:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "548:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "573:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "573:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "566:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "566:6:10"
																				},
																				"nativeSrc": "566:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "566:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "559:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "559:6:10"
																		},
																		"nativeSrc": "559:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "559:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "541:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:10"
																},
																"nativeSrc": "541:41:10",
																"nodeType": "YulFunctionCall",
																"src": "541:41:10"
															},
															"nativeSrc": "541:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "541:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "401:187:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "465:9:10",
														"nodeType": "YulTypedName",
														"src": "465:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "476:6:10",
														"nodeType": "YulTypedName",
														"src": "476:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "487:4:10",
														"nodeType": "YulTypedName",
														"src": "487:4:10",
														"type": ""
													}
												],
												"src": "401:187:10"
											},
											{
												"body": {
													"nativeSrc": "638:86:10",
													"nodeType": "YulBlock",
													"src": "638:86:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "702:16:10",
																"nodeType": "YulBlock",
																"src": "702:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "711:1:10",
																					"nodeType": "YulLiteral",
																					"src": "711:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "714:1:10",
																					"nodeType": "YulLiteral",
																					"src": "714:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "704:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "704:6:10"
																			},
																			"nativeSrc": "704:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "704:12:10"
																		},
																		"nativeSrc": "704:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "704:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "661:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "661:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "672:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "672:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "687:3:10",
																										"nodeType": "YulLiteral",
																										"src": "687:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "692:1:10",
																										"nodeType": "YulLiteral",
																										"src": "692:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "683:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "683:3:10"
																								},
																								"nativeSrc": "683:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "683:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "696:1:10",
																								"nodeType": "YulLiteral",
																								"src": "696:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "679:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "679:3:10"
																						},
																						"nativeSrc": "679:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "679:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "668:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "668:3:10"
																				},
																				"nativeSrc": "668:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "668:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "658:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "658:2:10"
																		},
																		"nativeSrc": "658:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "658:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "651:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "651:6:10"
																},
																"nativeSrc": "651:50:10",
																"nodeType": "YulFunctionCall",
																"src": "651:50:10"
															},
															"nativeSrc": "648:70:10",
															"nodeType": "YulIf",
															"src": "648:70:10"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "593:131:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "627:5:10",
														"nodeType": "YulTypedName",
														"src": "627:5:10",
														"type": ""
													}
												],
												"src": "593:131:10"
											},
											{
												"body": {
													"nativeSrc": "816:301:10",
													"nodeType": "YulBlock",
													"src": "816:301:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "862:16:10",
																"nodeType": "YulBlock",
																"src": "862:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "871:1:10",
																					"nodeType": "YulLiteral",
																					"src": "871:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "874:1:10",
																					"nodeType": "YulLiteral",
																					"src": "874:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "864:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "864:6:10"
																			},
																			"nativeSrc": "864:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "864:12:10"
																		},
																		"nativeSrc": "864:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "864:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "837:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "837:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "846:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "846:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "833:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "833:3:10"
																		},
																		"nativeSrc": "833:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "833:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "858:2:10",
																		"nodeType": "YulLiteral",
																		"src": "858:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "829:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "829:3:10"
																},
																"nativeSrc": "829:32:10",
																"nodeType": "YulFunctionCall",
																"src": "829:32:10"
															},
															"nativeSrc": "826:52:10",
															"nodeType": "YulIf",
															"src": "826:52:10"
														},
														{
															"nativeSrc": "887:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "887:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "913:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "913:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "900:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "900:12:10"
																},
																"nativeSrc": "900:23:10",
																"nodeType": "YulFunctionCall",
																"src": "900:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "891:5:10",
																	"nodeType": "YulTypedName",
																	"src": "891:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "957:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "957:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "932:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "932:24:10"
																},
																"nativeSrc": "932:31:10",
																"nodeType": "YulFunctionCall",
																"src": "932:31:10"
															},
															"nativeSrc": "932:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "932:31:10"
														},
														{
															"nativeSrc": "972:15:10",
															"nodeType": "YulAssignment",
															"src": "972:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "982:5:10",
																"nodeType": "YulIdentifier",
																"src": "982:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "972:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "972:6:10"
																}
															]
														},
														{
															"nativeSrc": "996:47:10",
															"nodeType": "YulVariableDeclaration",
															"src": "996:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1028:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1039:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1039:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1024:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1024:3:10"
																		},
																		"nativeSrc": "1024:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1024:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1011:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1011:12:10"
																},
																"nativeSrc": "1011:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1011:32:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1000:7:10",
																	"nodeType": "YulTypedName",
																	"src": "1000:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "1077:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "1077:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1052:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "1052:24:10"
																},
																"nativeSrc": "1052:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1052:33:10"
															},
															"nativeSrc": "1052:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1052:33:10"
														},
														{
															"nativeSrc": "1094:17:10",
															"nodeType": "YulAssignment",
															"src": "1094:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "1104:7:10",
																"nodeType": "YulIdentifier",
																"src": "1104:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1094:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1094:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "729:388:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "774:9:10",
														"nodeType": "YulTypedName",
														"src": "774:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "785:7:10",
														"nodeType": "YulTypedName",
														"src": "785:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "797:6:10",
														"nodeType": "YulTypedName",
														"src": "797:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "805:6:10",
														"nodeType": "YulTypedName",
														"src": "805:6:10",
														"type": ""
													}
												],
												"src": "729:388:10"
											},
											{
												"body": {
													"nativeSrc": "1182:60:10",
													"nodeType": "YulBlock",
													"src": "1182:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1199:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1199:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1208:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1208:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1223:3:10",
																								"nodeType": "YulLiteral",
																								"src": "1223:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1228:1:10",
																								"nodeType": "YulLiteral",
																								"src": "1228:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1219:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1219:3:10"
																						},
																						"nativeSrc": "1219:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "1219:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1232:1:10",
																						"nodeType": "YulLiteral",
																						"src": "1232:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1215:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1215:3:10"
																				},
																				"nativeSrc": "1215:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1215:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1204:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1204:3:10"
																		},
																		"nativeSrc": "1204:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1204:31:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1192:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1192:6:10"
																},
																"nativeSrc": "1192:44:10",
																"nodeType": "YulFunctionCall",
																"src": "1192:44:10"
															},
															"nativeSrc": "1192:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "1192:44:10"
														}
													]
												},
												"name": "abi_encode_contract_IRewardManager",
												"nativeSrc": "1122:120:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1166:5:10",
														"nodeType": "YulTypedName",
														"src": "1166:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1173:3:10",
														"nodeType": "YulTypedName",
														"src": "1173:3:10",
														"type": ""
													}
												],
												"src": "1122:120:10"
											},
											{
												"body": {
													"nativeSrc": "1370:102:10",
													"nodeType": "YulBlock",
													"src": "1370:102:10",
													"statements": [
														{
															"nativeSrc": "1380:26:10",
															"nodeType": "YulAssignment",
															"src": "1380:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1392:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1392:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1403:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1403:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1388:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1388:3:10"
																},
																"nativeSrc": "1388:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1388:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1380:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1380:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1422:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1422:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1437:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1437:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1453:3:10",
																								"nodeType": "YulLiteral",
																								"src": "1453:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1458:1:10",
																								"nodeType": "YulLiteral",
																								"src": "1458:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1449:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1449:3:10"
																						},
																						"nativeSrc": "1449:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "1449:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1462:1:10",
																						"nodeType": "YulLiteral",
																						"src": "1462:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1445:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1445:3:10"
																				},
																				"nativeSrc": "1445:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1445:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1433:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1433:3:10"
																		},
																		"nativeSrc": "1433:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1433:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1415:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1415:6:10"
																},
																"nativeSrc": "1415:51:10",
																"nodeType": "YulFunctionCall",
																"src": "1415:51:10"
															},
															"nativeSrc": "1415:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "1415:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IRewardManager_$727__to_t_address__fromStack_reversed",
												"nativeSrc": "1247:225:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1339:9:10",
														"nodeType": "YulTypedName",
														"src": "1339:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1350:6:10",
														"nodeType": "YulTypedName",
														"src": "1350:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1361:4:10",
														"nodeType": "YulTypedName",
														"src": "1361:4:10",
														"type": ""
													}
												],
												"src": "1247:225:10"
											},
											{
												"body": {
													"nativeSrc": "1547:177:10",
													"nodeType": "YulBlock",
													"src": "1547:177:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1593:16:10",
																"nodeType": "YulBlock",
																"src": "1593:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1602:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1602:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1605:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1605:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1595:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1595:6:10"
																			},
																			"nativeSrc": "1595:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1595:12:10"
																		},
																		"nativeSrc": "1595:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1595:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1568:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1568:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1577:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1577:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1564:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1564:3:10"
																		},
																		"nativeSrc": "1564:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1564:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1589:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1589:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1560:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1560:3:10"
																},
																"nativeSrc": "1560:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1560:32:10"
															},
															"nativeSrc": "1557:52:10",
															"nodeType": "YulIf",
															"src": "1557:52:10"
														},
														{
															"nativeSrc": "1618:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1618:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1644:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1644:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1631:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1631:12:10"
																},
																"nativeSrc": "1631:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1631:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1622:5:10",
																	"nodeType": "YulTypedName",
																	"src": "1622:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1688:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1688:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1663:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "1663:24:10"
																},
																"nativeSrc": "1663:31:10",
																"nodeType": "YulFunctionCall",
																"src": "1663:31:10"
															},
															"nativeSrc": "1663:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "1663:31:10"
														},
														{
															"nativeSrc": "1703:15:10",
															"nodeType": "YulAssignment",
															"src": "1703:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "1713:5:10",
																"nodeType": "YulIdentifier",
																"src": "1713:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1703:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1703:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1477:247:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1513:9:10",
														"nodeType": "YulTypedName",
														"src": "1513:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1524:7:10",
														"nodeType": "YulTypedName",
														"src": "1524:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1536:6:10",
														"nodeType": "YulTypedName",
														"src": "1536:6:10",
														"type": ""
													}
												],
												"src": "1477:247:10"
											},
											{
												"body": {
													"nativeSrc": "1830:102:10",
													"nodeType": "YulBlock",
													"src": "1830:102:10",
													"statements": [
														{
															"nativeSrc": "1840:26:10",
															"nodeType": "YulAssignment",
															"src": "1840:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1852:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1852:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1863:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1863:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1848:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1848:3:10"
																},
																"nativeSrc": "1848:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1848:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1840:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1840:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1882:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1882:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1897:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1897:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1913:3:10",
																								"nodeType": "YulLiteral",
																								"src": "1913:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1918:1:10",
																								"nodeType": "YulLiteral",
																								"src": "1918:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1909:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1909:3:10"
																						},
																						"nativeSrc": "1909:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "1909:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1922:1:10",
																						"nodeType": "YulLiteral",
																						"src": "1922:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1905:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1905:3:10"
																				},
																				"nativeSrc": "1905:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1905:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1893:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1893:3:10"
																		},
																		"nativeSrc": "1893:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1893:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1875:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1875:6:10"
																},
																"nativeSrc": "1875:51:10",
																"nodeType": "YulFunctionCall",
																"src": "1875:51:10"
															},
															"nativeSrc": "1875:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "1875:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1729:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1799:9:10",
														"nodeType": "YulTypedName",
														"src": "1799:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1810:6:10",
														"nodeType": "YulTypedName",
														"src": "1810:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1821:4:10",
														"nodeType": "YulTypedName",
														"src": "1821:4:10",
														"type": ""
													}
												],
												"src": "1729:203:10"
											},
											{
												"body": {
													"nativeSrc": "2007:156:10",
													"nodeType": "YulBlock",
													"src": "2007:156:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2053:16:10",
																"nodeType": "YulBlock",
																"src": "2053:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2062:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2062:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2065:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2065:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2055:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2055:6:10"
																			},
																			"nativeSrc": "2055:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2055:12:10"
																		},
																		"nativeSrc": "2055:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2055:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2028:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2028:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2037:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2037:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2024:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2024:3:10"
																		},
																		"nativeSrc": "2024:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2024:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2049:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2049:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2020:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2020:3:10"
																},
																"nativeSrc": "2020:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2020:32:10"
															},
															"nativeSrc": "2017:52:10",
															"nodeType": "YulIf",
															"src": "2017:52:10"
														},
														{
															"nativeSrc": "2078:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2078:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "2091:1:10",
																"nodeType": "YulLiteral",
																"src": "2091:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2082:5:10",
																	"nodeType": "YulTypedName",
																	"src": "2082:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2101:32:10",
															"nodeType": "YulAssignment",
															"src": "2101:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2123:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2123:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2110:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2110:12:10"
																},
																"nativeSrc": "2110:23:10",
																"nodeType": "YulFunctionCall",
																"src": "2110:23:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2101:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2101:5:10"
																}
															]
														},
														{
															"nativeSrc": "2142:15:10",
															"nodeType": "YulAssignment",
															"src": "2142:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "2152:5:10",
																"nodeType": "YulIdentifier",
																"src": "2152:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2142:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2142:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1937:226:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1973:9:10",
														"nodeType": "YulTypedName",
														"src": "1973:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1984:7:10",
														"nodeType": "YulTypedName",
														"src": "1984:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1996:6:10",
														"nodeType": "YulTypedName",
														"src": "1996:6:10",
														"type": ""
													}
												],
												"src": "1937:226:10"
											},
											{
												"body": {
													"nativeSrc": "2269:76:10",
													"nodeType": "YulBlock",
													"src": "2269:76:10",
													"statements": [
														{
															"nativeSrc": "2279:26:10",
															"nodeType": "YulAssignment",
															"src": "2279:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2291:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2291:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2302:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2302:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2287:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2287:3:10"
																},
																"nativeSrc": "2287:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2287:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2279:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2279:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2321:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2321:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2332:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2332:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2314:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2314:6:10"
																},
																"nativeSrc": "2314:25:10",
																"nodeType": "YulFunctionCall",
																"src": "2314:25:10"
															},
															"nativeSrc": "2314:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "2314:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2168:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2238:9:10",
														"nodeType": "YulTypedName",
														"src": "2238:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2249:6:10",
														"nodeType": "YulTypedName",
														"src": "2249:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2260:4:10",
														"nodeType": "YulTypedName",
														"src": "2260:4:10",
														"type": ""
													}
												],
												"src": "2168:177:10"
											},
											{
												"body": {
													"nativeSrc": "2501:486:10",
													"nodeType": "YulBlock",
													"src": "2501:486:10",
													"statements": [
														{
															"nativeSrc": "2511:32:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2511:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2529:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2529:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2540:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2540:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2525:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2525:3:10"
																},
																"nativeSrc": "2525:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2525:18:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "2515:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2515:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2559:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2559:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2570:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2570:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2552:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:10"
																},
																"nativeSrc": "2552:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2552:21:10"
															},
															"nativeSrc": "2552:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "2552:21:10"
														},
														{
															"nativeSrc": "2582:17:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2582:17:10",
															"value": {
																"name": "tail_1",
																"nativeSrc": "2593:6:10",
																"nodeType": "YulIdentifier",
																"src": "2593:6:10"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "2586:3:10",
																	"nodeType": "YulTypedName",
																	"src": "2586:3:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2608:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2608:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2628:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2628:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2622:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2622:5:10"
																},
																"nativeSrc": "2622:13:10",
																"nodeType": "YulFunctionCall",
																"src": "2622:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2612:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2612:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "2651:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2651:6:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2659:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2659:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2644:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2644:6:10"
																},
																"nativeSrc": "2644:22:10",
																"nodeType": "YulFunctionCall",
																"src": "2644:22:10"
															},
															"nativeSrc": "2644:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "2644:22:10"
														},
														{
															"nativeSrc": "2675:25:10",
															"nodeType": "YulAssignment",
															"src": "2675:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2686:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2686:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2697:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2697:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2682:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2682:3:10"
																},
																"nativeSrc": "2682:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2682:18:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2675:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2675:3:10"
																}
															]
														},
														{
															"nativeSrc": "2709:29:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2709:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2727:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2727:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2735:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2735:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2723:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2723:3:10"
																},
																"nativeSrc": "2723:15:10",
																"nodeType": "YulFunctionCall",
																"src": "2723:15:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "2713:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2713:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2747:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2747:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "2756:1:10",
																"nodeType": "YulLiteral",
																"src": "2756:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2751:1:10",
																	"nodeType": "YulTypedName",
																	"src": "2751:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2815:146:10",
																"nodeType": "YulBlock",
																"src": "2815:146:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "2836:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nativeSrc": "2851:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "2851:6:10"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "2845:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "2845:5:10"
																							},
																							"nativeSrc": "2845:13:10",
																							"nodeType": "YulFunctionCall",
																							"src": "2845:13:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2868:3:10",
																											"nodeType": "YulLiteral",
																											"src": "2868:3:10",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "2873:1:10",
																											"nodeType": "YulLiteral",
																											"src": "2873:1:10",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2864:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "2864:3:10"
																									},
																									"nativeSrc": "2864:11:10",
																									"nodeType": "YulFunctionCall",
																									"src": "2864:11:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2877:1:10",
																									"nodeType": "YulLiteral",
																									"src": "2877:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "2860:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "2860:3:10"
																							},
																							"nativeSrc": "2860:19:10",
																							"nodeType": "YulFunctionCall",
																							"src": "2860:19:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2841:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "2841:3:10"
																					},
																					"nativeSrc": "2841:39:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2841:39:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2829:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2829:6:10"
																			},
																			"nativeSrc": "2829:52:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2829:52:10"
																		},
																		"nativeSrc": "2829:52:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2829:52:10"
																	},
																	{
																		"nativeSrc": "2894:19:10",
																		"nodeType": "YulAssignment",
																		"src": "2894:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "2905:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2905:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2910:2:10",
																					"nodeType": "YulLiteral",
																					"src": "2910:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2901:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2901:3:10"
																			},
																			"nativeSrc": "2901:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2901:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "2894:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2894:3:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2926:25:10",
																		"nodeType": "YulAssignment",
																		"src": "2926:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "2940:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "2940:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2948:2:10",
																					"nodeType": "YulLiteral",
																					"src": "2948:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2936:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2936:3:10"
																			},
																			"nativeSrc": "2936:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2936:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "2926:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2926:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2777:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "2777:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2780:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2780:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2774:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2774:2:10"
																},
																"nativeSrc": "2774:13:10",
																"nodeType": "YulFunctionCall",
																"src": "2774:13:10"
															},
															"nativeSrc": "2766:195:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2788:18:10",
																"nodeType": "YulBlock",
																"src": "2788:18:10",
																"statements": [
																	{
																		"nativeSrc": "2790:14:10",
																		"nodeType": "YulAssignment",
																		"src": "2790:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2799:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "2799:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2802:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2802:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2795:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2795:3:10"
																			},
																			"nativeSrc": "2795:9:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2795:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2790:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "2790:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2770:3:10",
																"nodeType": "YulBlock",
																"src": "2770:3:10",
																"statements": []
															},
															"src": "2766:195:10"
														},
														{
															"nativeSrc": "2970:11:10",
															"nodeType": "YulAssignment",
															"src": "2970:11:10",
															"value": {
																"name": "pos",
																"nativeSrc": "2978:3:10",
																"nodeType": "YulIdentifier",
																"src": "2978:3:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2970:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2970:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "2350:637:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2470:9:10",
														"nodeType": "YulTypedName",
														"src": "2470:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2481:6:10",
														"nodeType": "YulTypedName",
														"src": "2481:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2492:4:10",
														"nodeType": "YulTypedName",
														"src": "2492:4:10",
														"type": ""
													}
												],
												"src": "2350:637:10"
											},
											{
												"body": {
													"nativeSrc": "3079:280:10",
													"nodeType": "YulBlock",
													"src": "3079:280:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3125:16:10",
																"nodeType": "YulBlock",
																"src": "3125:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3134:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3134:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3137:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3137:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3127:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3127:6:10"
																			},
																			"nativeSrc": "3127:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3127:12:10"
																		},
																		"nativeSrc": "3127:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3127:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3100:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3100:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3109:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3109:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3096:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3096:3:10"
																		},
																		"nativeSrc": "3096:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3096:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3121:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3121:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3092:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3092:3:10"
																},
																"nativeSrc": "3092:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3092:32:10"
															},
															"nativeSrc": "3089:52:10",
															"nodeType": "YulIf",
															"src": "3089:52:10"
														},
														{
															"nativeSrc": "3150:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3150:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "3163:1:10",
																"nodeType": "YulLiteral",
																"src": "3163:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3154:5:10",
																	"nodeType": "YulTypedName",
																	"src": "3154:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3173:32:10",
															"nodeType": "YulAssignment",
															"src": "3173:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3195:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3195:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3182:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3182:12:10"
																},
																"nativeSrc": "3182:23:10",
																"nodeType": "YulFunctionCall",
																"src": "3182:23:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3173:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3173:5:10"
																}
															]
														},
														{
															"nativeSrc": "3214:15:10",
															"nodeType": "YulAssignment",
															"src": "3214:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "3224:5:10",
																"nodeType": "YulIdentifier",
																"src": "3224:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3214:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3214:6:10"
																}
															]
														},
														{
															"nativeSrc": "3238:47:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3238:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3270:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3270:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3281:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3281:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3266:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3266:3:10"
																		},
																		"nativeSrc": "3266:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3266:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3253:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3253:12:10"
																},
																"nativeSrc": "3253:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3253:32:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3242:7:10",
																	"nodeType": "YulTypedName",
																	"src": "3242:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "3319:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "3319:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3294:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "3294:24:10"
																},
																"nativeSrc": "3294:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3294:33:10"
															},
															"nativeSrc": "3294:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "3294:33:10"
														},
														{
															"nativeSrc": "3336:17:10",
															"nodeType": "YulAssignment",
															"src": "3336:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "3346:7:10",
																"nodeType": "YulIdentifier",
																"src": "3346:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3336:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3336:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "2992:367:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3037:9:10",
														"nodeType": "YulTypedName",
														"src": "3037:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3048:7:10",
														"nodeType": "YulTypedName",
														"src": "3048:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3060:6:10",
														"nodeType": "YulTypedName",
														"src": "3060:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3068:6:10",
														"nodeType": "YulTypedName",
														"src": "3068:6:10",
														"type": ""
													}
												],
												"src": "2992:367:10"
											},
											{
												"body": {
													"nativeSrc": "3419:94:10",
													"nodeType": "YulBlock",
													"src": "3419:94:10",
													"statements": [
														{
															"nativeSrc": "3429:29:10",
															"nodeType": "YulAssignment",
															"src": "3429:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3451:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3451:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3438:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3438:12:10"
																},
																"nativeSrc": "3438:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3438:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3429:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3429:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3491:16:10",
																"nodeType": "YulBlock",
																"src": "3491:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3500:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3500:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3503:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3503:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3493:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3493:6:10"
																			},
																			"nativeSrc": "3493:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3493:12:10"
																		},
																		"nativeSrc": "3493:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3493:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3480:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3480:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3487:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3487:1:10",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3477:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3477:2:10"
																		},
																		"nativeSrc": "3477:12:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3477:12:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3470:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3470:6:10"
																},
																"nativeSrc": "3470:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3470:20:10"
															},
															"nativeSrc": "3467:40:10",
															"nodeType": "YulIf",
															"src": "3467:40:10"
														}
													]
												},
												"name": "abi_decode_enum_PoolType",
												"nativeSrc": "3364:149:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3398:6:10",
														"nodeType": "YulTypedName",
														"src": "3398:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3409:5:10",
														"nodeType": "YulTypedName",
														"src": "3409:5:10",
														"type": ""
													}
												],
												"src": "3364:149:10"
											},
											{
												"body": {
													"nativeSrc": "3813:1344:10",
													"nodeType": "YulBlock",
													"src": "3813:1344:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3860:16:10",
																"nodeType": "YulBlock",
																"src": "3860:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3869:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3869:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3872:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3872:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3862:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3862:6:10"
																			},
																			"nativeSrc": "3862:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3862:12:10"
																		},
																		"nativeSrc": "3862:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3862:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3834:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3834:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3843:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3843:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3830:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3830:3:10"
																		},
																		"nativeSrc": "3830:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3830:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3855:3:10",
																		"nodeType": "YulLiteral",
																		"src": "3855:3:10",
																		"type": "",
																		"value": "352"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3826:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3826:3:10"
																},
																"nativeSrc": "3826:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3826:33:10"
															},
															"nativeSrc": "3823:53:10",
															"nodeType": "YulIf",
															"src": "3823:53:10"
														},
														{
															"nativeSrc": "3885:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3885:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3911:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3911:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3898:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3898:12:10"
																},
																"nativeSrc": "3898:23:10",
																"nodeType": "YulFunctionCall",
																"src": "3898:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3889:5:10",
																	"nodeType": "YulTypedName",
																	"src": "3889:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3955:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3955:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3930:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "3930:24:10"
																},
																"nativeSrc": "3930:31:10",
																"nodeType": "YulFunctionCall",
																"src": "3930:31:10"
															},
															"nativeSrc": "3930:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "3930:31:10"
														},
														{
															"nativeSrc": "3970:15:10",
															"nodeType": "YulAssignment",
															"src": "3970:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "3980:5:10",
																"nodeType": "YulIdentifier",
																"src": "3980:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3970:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3970:6:10"
																}
															]
														},
														{
															"nativeSrc": "3994:47:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3994:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4026:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4026:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4037:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4037:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4022:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4022:3:10"
																		},
																		"nativeSrc": "4022:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4022:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4009:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4009:12:10"
																},
																"nativeSrc": "4009:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4009:32:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3998:7:10",
																	"nodeType": "YulTypedName",
																	"src": "3998:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "4075:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "4075:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4050:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "4050:24:10"
																},
																"nativeSrc": "4050:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4050:33:10"
															},
															"nativeSrc": "4050:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "4050:33:10"
														},
														{
															"nativeSrc": "4092:17:10",
															"nodeType": "YulAssignment",
															"src": "4092:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "4102:7:10",
																"nodeType": "YulIdentifier",
																"src": "4102:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4092:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4092:6:10"
																}
															]
														},
														{
															"nativeSrc": "4118:47:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4118:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4150:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4150:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4161:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4161:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4146:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4146:3:10"
																		},
																		"nativeSrc": "4146:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4146:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4133:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4133:12:10"
																},
																"nativeSrc": "4133:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4133:32:10"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "4122:7:10",
																	"nodeType": "YulTypedName",
																	"src": "4122:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nativeSrc": "4199:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "4199:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4174:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "4174:24:10"
																},
																"nativeSrc": "4174:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4174:33:10"
															},
															"nativeSrc": "4174:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "4174:33:10"
														},
														{
															"nativeSrc": "4216:17:10",
															"nodeType": "YulAssignment",
															"src": "4216:17:10",
															"value": {
																"name": "value_2",
																"nativeSrc": "4226:7:10",
																"nodeType": "YulIdentifier",
																"src": "4226:7:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4216:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4216:6:10"
																}
															]
														},
														{
															"nativeSrc": "4242:47:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4242:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4274:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4274:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4285:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4285:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4270:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4270:3:10"
																		},
																		"nativeSrc": "4270:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4270:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4257:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4257:12:10"
																},
																"nativeSrc": "4257:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4257:32:10"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "4246:7:10",
																	"nodeType": "YulTypedName",
																	"src": "4246:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nativeSrc": "4323:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "4323:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4298:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "4298:24:10"
																},
																"nativeSrc": "4298:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4298:33:10"
															},
															"nativeSrc": "4298:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "4298:33:10"
														},
														{
															"nativeSrc": "4340:17:10",
															"nodeType": "YulAssignment",
															"src": "4340:17:10",
															"value": {
																"name": "value_3",
																"nativeSrc": "4350:7:10",
																"nodeType": "YulIdentifier",
																"src": "4350:7:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4340:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4340:6:10"
																}
															]
														},
														{
															"nativeSrc": "4366:48:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4366:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4398:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4398:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4409:3:10",
																				"nodeType": "YulLiteral",
																				"src": "4409:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4394:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4394:3:10"
																		},
																		"nativeSrc": "4394:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4394:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4381:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4381:12:10"
																},
																"nativeSrc": "4381:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4381:33:10"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nativeSrc": "4370:7:10",
																	"nodeType": "YulTypedName",
																	"src": "4370:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_4",
																		"nativeSrc": "4448:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "4448:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4423:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "4423:24:10"
																},
																"nativeSrc": "4423:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4423:33:10"
															},
															"nativeSrc": "4423:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "4423:33:10"
														},
														{
															"nativeSrc": "4465:17:10",
															"nodeType": "YulAssignment",
															"src": "4465:17:10",
															"value": {
																"name": "value_4",
																"nativeSrc": "4475:7:10",
																"nodeType": "YulIdentifier",
																"src": "4475:7:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "4465:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4465:6:10"
																}
															]
														},
														{
															"nativeSrc": "4491:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4491:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "4506:1:10",
																"nodeType": "YulLiteral",
																"src": "4506:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_5",
																	"nativeSrc": "4495:7:10",
																	"nodeType": "YulTypedName",
																	"src": "4495:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4516:44:10",
															"nodeType": "YulAssignment",
															"src": "4516:44:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4544:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4544:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4555:3:10",
																				"nodeType": "YulLiteral",
																				"src": "4555:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4540:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4540:3:10"
																		},
																		"nativeSrc": "4540:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4540:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4527:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4527:12:10"
																},
																"nativeSrc": "4527:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4527:33:10"
															},
															"variableNames": [
																{
																	"name": "value_5",
																	"nativeSrc": "4516:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4516:7:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_5",
																		"nativeSrc": "4594:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "4594:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4569:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "4569:24:10"
																},
																"nativeSrc": "4569:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4569:33:10"
															},
															"nativeSrc": "4569:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "4569:33:10"
														},
														{
															"nativeSrc": "4611:17:10",
															"nodeType": "YulAssignment",
															"src": "4611:17:10",
															"value": {
																"name": "value_5",
																"nativeSrc": "4621:7:10",
																"nodeType": "YulIdentifier",
																"src": "4621:7:10"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "4611:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4611:6:10"
																}
															]
														},
														{
															"nativeSrc": "4637:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4637:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "4652:1:10",
																"nodeType": "YulLiteral",
																"src": "4652:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_6",
																	"nativeSrc": "4641:7:10",
																	"nodeType": "YulTypedName",
																	"src": "4641:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4662:44:10",
															"nodeType": "YulAssignment",
															"src": "4662:44:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4690:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4690:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4701:3:10",
																				"nodeType": "YulLiteral",
																				"src": "4701:3:10",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4686:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4686:3:10"
																		},
																		"nativeSrc": "4686:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4673:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4673:12:10"
																},
																"nativeSrc": "4673:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4673:33:10"
															},
															"variableNames": [
																{
																	"name": "value_6",
																	"nativeSrc": "4662:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4662:7:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_6",
																		"nativeSrc": "4740:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "4740:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4715:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "4715:24:10"
																},
																"nativeSrc": "4715:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4715:33:10"
															},
															"nativeSrc": "4715:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "4715:33:10"
														},
														{
															"nativeSrc": "4757:17:10",
															"nodeType": "YulAssignment",
															"src": "4757:17:10",
															"value": {
																"name": "value_6",
																"nativeSrc": "4767:7:10",
																"nodeType": "YulIdentifier",
																"src": "4767:7:10"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "4757:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4757:6:10"
																}
															]
														},
														{
															"nativeSrc": "4783:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4783:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "4798:1:10",
																"nodeType": "YulLiteral",
																"src": "4798:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_7",
																	"nativeSrc": "4787:7:10",
																	"nodeType": "YulTypedName",
																	"src": "4787:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4808:44:10",
															"nodeType": "YulAssignment",
															"src": "4808:44:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4836:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4836:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4847:3:10",
																				"nodeType": "YulLiteral",
																				"src": "4847:3:10",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4832:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4832:3:10"
																		},
																		"nativeSrc": "4832:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4832:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4819:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4819:12:10"
																},
																"nativeSrc": "4819:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4819:33:10"
															},
															"variableNames": [
																{
																	"name": "value_7",
																	"nativeSrc": "4808:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4808:7:10"
																}
															]
														},
														{
															"nativeSrc": "4861:17:10",
															"nodeType": "YulAssignment",
															"src": "4861:17:10",
															"value": {
																"name": "value_7",
																"nativeSrc": "4871:7:10",
																"nodeType": "YulIdentifier",
																"src": "4871:7:10"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nativeSrc": "4861:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4861:6:10"
																}
															]
														},
														{
															"nativeSrc": "4887:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4887:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "4902:1:10",
																"nodeType": "YulLiteral",
																"src": "4902:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_8",
																	"nativeSrc": "4891:7:10",
																	"nodeType": "YulTypedName",
																	"src": "4891:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4912:44:10",
															"nodeType": "YulAssignment",
															"src": "4912:44:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4940:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4940:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4951:3:10",
																				"nodeType": "YulLiteral",
																				"src": "4951:3:10",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4936:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:10"
																		},
																		"nativeSrc": "4936:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4936:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4923:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4923:12:10"
																},
																"nativeSrc": "4923:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4923:33:10"
															},
															"variableNames": [
																{
																	"name": "value_8",
																	"nativeSrc": "4912:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4912:7:10"
																}
															]
														},
														{
															"nativeSrc": "4965:17:10",
															"nodeType": "YulAssignment",
															"src": "4965:17:10",
															"value": {
																"name": "value_8",
																"nativeSrc": "4975:7:10",
																"nodeType": "YulIdentifier",
																"src": "4975:7:10"
															},
															"variableNames": [
																{
																	"name": "value8",
																	"nativeSrc": "4965:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:10"
																}
															]
														},
														{
															"nativeSrc": "4991:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4991:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "5006:1:10",
																"nodeType": "YulLiteral",
																"src": "5006:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_9",
																	"nativeSrc": "4995:7:10",
																	"nodeType": "YulTypedName",
																	"src": "4995:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5016:44:10",
															"nodeType": "YulAssignment",
															"src": "5016:44:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5044:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5044:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5055:3:10",
																				"nodeType": "YulLiteral",
																				"src": "5055:3:10",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5040:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5040:3:10"
																		},
																		"nativeSrc": "5040:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5040:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5027:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "5027:12:10"
																},
																"nativeSrc": "5027:33:10",
																"nodeType": "YulFunctionCall",
																"src": "5027:33:10"
															},
															"variableNames": [
																{
																	"name": "value_9",
																	"nativeSrc": "5016:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5016:7:10"
																}
															]
														},
														{
															"nativeSrc": "5069:17:10",
															"nodeType": "YulAssignment",
															"src": "5069:17:10",
															"value": {
																"name": "value_9",
																"nativeSrc": "5079:7:10",
																"nodeType": "YulIdentifier",
																"src": "5079:7:10"
															},
															"variableNames": [
																{
																	"name": "value9",
																	"nativeSrc": "5069:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5069:6:10"
																}
															]
														},
														{
															"nativeSrc": "5095:56:10",
															"nodeType": "YulAssignment",
															"src": "5095:56:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5135:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5135:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5146:3:10",
																				"nodeType": "YulLiteral",
																				"src": "5146:3:10",
																				"type": "",
																				"value": "320"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5131:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5131:3:10"
																		},
																		"nativeSrc": "5131:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5131:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_enum_PoolType",
																	"nativeSrc": "5106:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "5106:24:10"
																},
																"nativeSrc": "5106:45:10",
																"nodeType": "YulFunctionCall",
																"src": "5106:45:10"
															},
															"variableNames": [
																{
																	"name": "value10",
																	"nativeSrc": "5095:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5095:7:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_contract$_IERC20_$456t_contract$_IERC20_$456t_contract$_IERC20_$456t_uint256t_uint256t_uint256t_enum$_PoolType_$529",
												"nativeSrc": "3518:1639:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3698:9:10",
														"nodeType": "YulTypedName",
														"src": "3698:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3709:7:10",
														"nodeType": "YulTypedName",
														"src": "3709:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3721:6:10",
														"nodeType": "YulTypedName",
														"src": "3721:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3729:6:10",
														"nodeType": "YulTypedName",
														"src": "3729:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3737:6:10",
														"nodeType": "YulTypedName",
														"src": "3737:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3745:6:10",
														"nodeType": "YulTypedName",
														"src": "3745:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3753:6:10",
														"nodeType": "YulTypedName",
														"src": "3753:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3761:6:10",
														"nodeType": "YulTypedName",
														"src": "3761:6:10",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "3769:6:10",
														"nodeType": "YulTypedName",
														"src": "3769:6:10",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "3777:6:10",
														"nodeType": "YulTypedName",
														"src": "3777:6:10",
														"type": ""
													},
													{
														"name": "value8",
														"nativeSrc": "3785:6:10",
														"nodeType": "YulTypedName",
														"src": "3785:6:10",
														"type": ""
													},
													{
														"name": "value9",
														"nativeSrc": "3793:6:10",
														"nodeType": "YulTypedName",
														"src": "3793:6:10",
														"type": ""
													},
													{
														"name": "value10",
														"nativeSrc": "3801:7:10",
														"nodeType": "YulTypedName",
														"src": "3801:7:10",
														"type": ""
													}
												],
												"src": "3518:1639:10"
											},
											{
												"body": {
													"nativeSrc": "5194:95:10",
													"nodeType": "YulBlock",
													"src": "5194:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5211:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5211:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5218:3:10",
																				"nodeType": "YulLiteral",
																				"src": "5218:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5223:10:10",
																				"nodeType": "YulLiteral",
																				"src": "5223:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5214:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5214:3:10"
																		},
																		"nativeSrc": "5214:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5214:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5204:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5204:6:10"
																},
																"nativeSrc": "5204:31:10",
																"nodeType": "YulFunctionCall",
																"src": "5204:31:10"
															},
															"nativeSrc": "5204:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "5204:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5251:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5251:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5254:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5254:4:10",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5244:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5244:6:10"
																},
																"nativeSrc": "5244:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5244:15:10"
															},
															"nativeSrc": "5244:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5244:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5275:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5275:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5278:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5278:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5268:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5268:6:10"
																},
																"nativeSrc": "5268:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5268:15:10"
															},
															"nativeSrc": "5268:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5268:15:10"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "5162:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "5162:127:10"
											},
											{
												"body": {
													"nativeSrc": "5344:89:10",
													"nodeType": "YulBlock",
													"src": "5344:89:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5378:22:10",
																"nodeType": "YulBlock",
																"src": "5378:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "5380:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5380:16:10"
																			},
																			"nativeSrc": "5380:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5380:18:10"
																		},
																		"nativeSrc": "5380:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5380:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5367:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5367:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5374:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5374:1:10",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5364:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "5364:2:10"
																		},
																		"nativeSrc": "5364:12:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5364:12:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5357:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5357:6:10"
																},
																"nativeSrc": "5357:20:10",
																"nodeType": "YulFunctionCall",
																"src": "5357:20:10"
															},
															"nativeSrc": "5354:46:10",
															"nodeType": "YulIf",
															"src": "5354:46:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5416:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5416:3:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5421:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5421:5:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5409:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5409:6:10"
																},
																"nativeSrc": "5409:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5409:18:10"
															},
															"nativeSrc": "5409:18:10",
															"nodeType": "YulExpressionStatement",
															"src": "5409:18:10"
														}
													]
												},
												"name": "abi_encode_enum_PoolType",
												"nativeSrc": "5294:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5328:5:10",
														"nodeType": "YulTypedName",
														"src": "5328:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5335:3:10",
														"nodeType": "YulTypedName",
														"src": "5335:3:10",
														"type": ""
													}
												],
												"src": "5294:139:10"
											},
											{
												"body": {
													"nativeSrc": "5489:89:10",
													"nodeType": "YulBlock",
													"src": "5489:89:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5523:22:10",
																"nodeType": "YulBlock",
																"src": "5523:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "5525:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5525:16:10"
																			},
																			"nativeSrc": "5525:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5525:18:10"
																		},
																		"nativeSrc": "5525:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5525:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5512:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5512:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5519:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5519:1:10",
																				"type": "",
																				"value": "7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5509:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "5509:2:10"
																		},
																		"nativeSrc": "5509:12:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5509:12:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5502:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5502:6:10"
																},
																"nativeSrc": "5502:20:10",
																"nodeType": "YulFunctionCall",
																"src": "5502:20:10"
															},
															"nativeSrc": "5499:46:10",
															"nodeType": "YulIf",
															"src": "5499:46:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5561:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5561:3:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5566:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5566:5:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5554:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5554:6:10"
																},
																"nativeSrc": "5554:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5554:18:10"
															},
															"nativeSrc": "5554:18:10",
															"nodeType": "YulExpressionStatement",
															"src": "5554:18:10"
														}
													]
												},
												"name": "abi_encode_enum_LoanState",
												"nativeSrc": "5438:140:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5473:5:10",
														"nodeType": "YulTypedName",
														"src": "5473:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5480:3:10",
														"nodeType": "YulTypedName",
														"src": "5480:3:10",
														"type": ""
													}
												],
												"src": "5438:140:10"
											},
											{
												"body": {
													"nativeSrc": "5638:1436:10",
													"nodeType": "YulBlock",
													"src": "5638:1436:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5689:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5689:5:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5683:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5683:5:10"
																		},
																		"nativeSrc": "5683:12:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5683:12:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5697:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5697:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_contract_IRewardManager",
																	"nativeSrc": "5648:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "5648:34:10"
																},
																"nativeSrc": "5648:53:10",
																"nodeType": "YulFunctionCall",
																"src": "5648:53:10"
															},
															"nativeSrc": "5648:53:10",
															"nodeType": "YulExpressionStatement",
															"src": "5648:53:10"
														},
														{
															"nativeSrc": "5710:43:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5710:43:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5740:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5740:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5747:4:10",
																				"nodeType": "YulLiteral",
																				"src": "5747:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5736:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5736:3:10"
																		},
																		"nativeSrc": "5736:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5736:16:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5730:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5730:5:10"
																},
																"nativeSrc": "5730:23:10",
																"nodeType": "YulFunctionCall",
																"src": "5730:23:10"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nativeSrc": "5714:12:10",
																	"nodeType": "YulTypedName",
																	"src": "5714:12:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nativeSrc": "5797:12:10",
																		"nodeType": "YulIdentifier",
																		"src": "5797:12:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "5815:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5815:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5820:4:10",
																				"nodeType": "YulLiteral",
																				"src": "5820:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5811:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5811:3:10"
																		},
																		"nativeSrc": "5811:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5811:14:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_contract_IRewardManager",
																	"nativeSrc": "5762:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "5762:34:10"
																},
																"nativeSrc": "5762:64:10",
																"nodeType": "YulFunctionCall",
																"src": "5762:64:10"
															},
															"nativeSrc": "5762:64:10",
															"nodeType": "YulExpressionStatement",
															"src": "5762:64:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "5846:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5846:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5851:4:10",
																				"nodeType": "YulLiteral",
																				"src": "5851:4:10",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5842:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5842:3:10"
																		},
																		"nativeSrc": "5842:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5842:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5868:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5868:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5875:4:10",
																						"nodeType": "YulLiteral",
																						"src": "5875:4:10",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5864:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5864:3:10"
																				},
																				"nativeSrc": "5864:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5864:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5858:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5858:5:10"
																		},
																		"nativeSrc": "5858:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5858:23:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5835:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5835:6:10"
																},
																"nativeSrc": "5835:47:10",
																"nodeType": "YulFunctionCall",
																"src": "5835:47:10"
															},
															"nativeSrc": "5835:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "5835:47:10"
														},
														{
															"nativeSrc": "5891:45:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5891:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5923:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5923:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5930:4:10",
																				"nodeType": "YulLiteral",
																				"src": "5930:4:10",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5919:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5919:3:10"
																		},
																		"nativeSrc": "5919:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5919:16:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5913:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5913:5:10"
																},
																"nativeSrc": "5913:23:10",
																"nodeType": "YulFunctionCall",
																"src": "5913:23:10"
															},
															"variables": [
																{
																	"name": "memberValue0_1",
																	"nativeSrc": "5895:14:10",
																	"nodeType": "YulTypedName",
																	"src": "5895:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_1",
																		"nativeSrc": "5980:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "5980:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "6000:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6000:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6005:4:10",
																				"nodeType": "YulLiteral",
																				"src": "6005:4:10",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5996:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5996:3:10"
																		},
																		"nativeSrc": "5996:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5996:14:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_contract_IRewardManager",
																	"nativeSrc": "5945:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "5945:34:10"
																},
																"nativeSrc": "5945:66:10",
																"nodeType": "YulFunctionCall",
																"src": "5945:66:10"
															},
															"nativeSrc": "5945:66:10",
															"nodeType": "YulExpressionStatement",
															"src": "5945:66:10"
														},
														{
															"nativeSrc": "6020:45:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6020:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6052:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6052:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6059:4:10",
																				"nodeType": "YulLiteral",
																				"src": "6059:4:10",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6048:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6048:3:10"
																		},
																		"nativeSrc": "6048:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6048:16:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6042:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6042:5:10"
																},
																"nativeSrc": "6042:23:10",
																"nodeType": "YulFunctionCall",
																"src": "6042:23:10"
															},
															"variables": [
																{
																	"name": "memberValue0_2",
																	"nativeSrc": "6024:14:10",
																	"nodeType": "YulTypedName",
																	"src": "6024:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_2",
																		"nativeSrc": "6109:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "6109:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "6129:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6129:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6134:4:10",
																				"nodeType": "YulLiteral",
																				"src": "6134:4:10",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6125:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6125:3:10"
																		},
																		"nativeSrc": "6125:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6125:14:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_contract_IRewardManager",
																	"nativeSrc": "6074:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "6074:34:10"
																},
																"nativeSrc": "6074:66:10",
																"nodeType": "YulFunctionCall",
																"src": "6074:66:10"
															},
															"nativeSrc": "6074:66:10",
															"nodeType": "YulExpressionStatement",
															"src": "6074:66:10"
														},
														{
															"nativeSrc": "6149:45:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6149:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6181:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6181:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6188:4:10",
																				"nodeType": "YulLiteral",
																				"src": "6188:4:10",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6177:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6177:3:10"
																		},
																		"nativeSrc": "6177:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6177:16:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6171:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6171:5:10"
																},
																"nativeSrc": "6171:23:10",
																"nodeType": "YulFunctionCall",
																"src": "6171:23:10"
															},
															"variables": [
																{
																	"name": "memberValue0_3",
																	"nativeSrc": "6153:14:10",
																	"nodeType": "YulTypedName",
																	"src": "6153:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_3",
																		"nativeSrc": "6238:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "6238:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "6258:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6258:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6263:4:10",
																				"nodeType": "YulLiteral",
																				"src": "6263:4:10",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6254:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6254:3:10"
																		},
																		"nativeSrc": "6254:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6254:14:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_contract_IRewardManager",
																	"nativeSrc": "6203:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "6203:34:10"
																},
																"nativeSrc": "6203:66:10",
																"nodeType": "YulFunctionCall",
																"src": "6203:66:10"
															},
															"nativeSrc": "6203:66:10",
															"nodeType": "YulExpressionStatement",
															"src": "6203:66:10"
														},
														{
															"nativeSrc": "6278:45:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6278:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6310:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6310:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6317:4:10",
																				"nodeType": "YulLiteral",
																				"src": "6317:4:10",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6306:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6306:3:10"
																		},
																		"nativeSrc": "6306:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6306:16:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6300:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6300:5:10"
																},
																"nativeSrc": "6300:23:10",
																"nodeType": "YulFunctionCall",
																"src": "6300:23:10"
															},
															"variables": [
																{
																	"name": "memberValue0_4",
																	"nativeSrc": "6282:14:10",
																	"nodeType": "YulTypedName",
																	"src": "6282:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_4",
																		"nativeSrc": "6367:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "6367:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "6387:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6387:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6392:4:10",
																				"nodeType": "YulLiteral",
																				"src": "6392:4:10",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6383:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6383:3:10"
																		},
																		"nativeSrc": "6383:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6383:14:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_contract_IRewardManager",
																	"nativeSrc": "6332:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "6332:34:10"
																},
																"nativeSrc": "6332:66:10",
																"nodeType": "YulFunctionCall",
																"src": "6332:66:10"
															},
															"nativeSrc": "6332:66:10",
															"nodeType": "YulExpressionStatement",
															"src": "6332:66:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "6418:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6418:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6423:4:10",
																				"nodeType": "YulLiteral",
																				"src": "6423:4:10",
																				"type": "",
																				"value": "0xe0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6414:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6414:3:10"
																		},
																		"nativeSrc": "6414:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6414:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6440:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6440:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6447:4:10",
																						"nodeType": "YulLiteral",
																						"src": "6447:4:10",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6436:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6436:3:10"
																				},
																				"nativeSrc": "6436:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6436:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6430:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "6430:5:10"
																		},
																		"nativeSrc": "6430:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6430:23:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6407:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:10"
																},
																"nativeSrc": "6407:47:10",
																"nodeType": "YulFunctionCall",
																"src": "6407:47:10"
															},
															"nativeSrc": "6407:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "6407:47:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "6474:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6474:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6479:6:10",
																				"nodeType": "YulLiteral",
																				"src": "6479:6:10",
																				"type": "",
																				"value": "0x0100"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6470:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6470:3:10"
																		},
																		"nativeSrc": "6470:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6470:16:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6498:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6498:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6505:6:10",
																						"nodeType": "YulLiteral",
																						"src": "6505:6:10",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6494:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6494:3:10"
																				},
																				"nativeSrc": "6494:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6494:18:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6488:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "6488:5:10"
																		},
																		"nativeSrc": "6488:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6488:25:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6463:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6463:6:10"
																},
																"nativeSrc": "6463:51:10",
																"nodeType": "YulFunctionCall",
																"src": "6463:51:10"
															},
															"nativeSrc": "6463:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "6463:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "6534:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6534:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6539:6:10",
																				"nodeType": "YulLiteral",
																				"src": "6539:6:10",
																				"type": "",
																				"value": "0x0120"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6530:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6530:3:10"
																		},
																		"nativeSrc": "6530:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6530:16:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6558:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6558:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6565:6:10",
																						"nodeType": "YulLiteral",
																						"src": "6565:6:10",
																						"type": "",
																						"value": "0x0120"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6554:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6554:3:10"
																				},
																				"nativeSrc": "6554:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6554:18:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6548:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "6548:5:10"
																		},
																		"nativeSrc": "6548:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6548:25:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6523:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6523:6:10"
																},
																"nativeSrc": "6523:51:10",
																"nodeType": "YulFunctionCall",
																"src": "6523:51:10"
															},
															"nativeSrc": "6523:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "6523:51:10"
														},
														{
															"nativeSrc": "6583:47:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6583:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6615:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6615:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6622:6:10",
																				"nodeType": "YulLiteral",
																				"src": "6622:6:10",
																				"type": "",
																				"value": "0x0140"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6611:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6611:3:10"
																		},
																		"nativeSrc": "6611:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6611:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6605:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6605:5:10"
																},
																"nativeSrc": "6605:25:10",
																"nodeType": "YulFunctionCall",
																"src": "6605:25:10"
															},
															"variables": [
																{
																	"name": "memberValue0_5",
																	"nativeSrc": "6587:14:10",
																	"nodeType": "YulTypedName",
																	"src": "6587:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_5",
																		"nativeSrc": "6664:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "6664:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "6684:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6684:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6689:6:10",
																				"nodeType": "YulLiteral",
																				"src": "6689:6:10",
																				"type": "",
																				"value": "0x0140"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6680:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6680:3:10"
																		},
																		"nativeSrc": "6680:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6680:16:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_enum_PoolType",
																	"nativeSrc": "6639:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "6639:24:10"
																},
																"nativeSrc": "6639:58:10",
																"nodeType": "YulFunctionCall",
																"src": "6639:58:10"
															},
															"nativeSrc": "6639:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "6639:58:10"
														},
														{
															"nativeSrc": "6706:47:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6706:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6738:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6738:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6745:6:10",
																				"nodeType": "YulLiteral",
																				"src": "6745:6:10",
																				"type": "",
																				"value": "0x0160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6734:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6734:3:10"
																		},
																		"nativeSrc": "6734:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6734:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6728:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6728:5:10"
																},
																"nativeSrc": "6728:25:10",
																"nodeType": "YulFunctionCall",
																"src": "6728:25:10"
															},
															"variables": [
																{
																	"name": "memberValue0_6",
																	"nativeSrc": "6710:14:10",
																	"nodeType": "YulTypedName",
																	"src": "6710:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_6",
																		"nativeSrc": "6778:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "6778:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "6798:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6798:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6803:6:10",
																				"nodeType": "YulLiteral",
																				"src": "6803:6:10",
																				"type": "",
																				"value": "0x0160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6794:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6794:3:10"
																		},
																		"nativeSrc": "6794:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6794:16:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bool",
																	"nativeSrc": "6762:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "6762:15:10"
																},
																"nativeSrc": "6762:49:10",
																"nodeType": "YulFunctionCall",
																"src": "6762:49:10"
															},
															"nativeSrc": "6762:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "6762:49:10"
														},
														{
															"nativeSrc": "6820:47:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6820:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6852:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6852:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6859:6:10",
																				"nodeType": "YulLiteral",
																				"src": "6859:6:10",
																				"type": "",
																				"value": "0x0180"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6848:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6848:3:10"
																		},
																		"nativeSrc": "6848:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6848:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6842:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6842:5:10"
																},
																"nativeSrc": "6842:25:10",
																"nodeType": "YulFunctionCall",
																"src": "6842:25:10"
															},
															"variables": [
																{
																	"name": "memberValue0_7",
																	"nativeSrc": "6824:14:10",
																	"nodeType": "YulTypedName",
																	"src": "6824:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_7",
																		"nativeSrc": "6902:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "6902:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "6922:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6922:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6927:6:10",
																				"nodeType": "YulLiteral",
																				"src": "6927:6:10",
																				"type": "",
																				"value": "0x0180"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6918:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6918:3:10"
																		},
																		"nativeSrc": "6918:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6918:16:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_enum_LoanState",
																	"nativeSrc": "6876:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "6876:25:10"
																},
																"nativeSrc": "6876:59:10",
																"nodeType": "YulFunctionCall",
																"src": "6876:59:10"
															},
															"nativeSrc": "6876:59:10",
															"nodeType": "YulExpressionStatement",
															"src": "6876:59:10"
														},
														{
															"nativeSrc": "6944:47:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6944:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6976:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6976:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6983:6:10",
																				"nodeType": "YulLiteral",
																				"src": "6983:6:10",
																				"type": "",
																				"value": "0x01a0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6972:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6972:3:10"
																		},
																		"nativeSrc": "6972:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6972:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6966:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6966:5:10"
																},
																"nativeSrc": "6966:25:10",
																"nodeType": "YulFunctionCall",
																"src": "6966:25:10"
															},
															"variables": [
																{
																	"name": "memberValue0_8",
																	"nativeSrc": "6948:14:10",
																	"nodeType": "YulTypedName",
																	"src": "6948:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_8",
																		"nativeSrc": "7035:14:10",
																		"nodeType": "YulIdentifier",
																		"src": "7035:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "7055:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7055:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7060:6:10",
																				"nodeType": "YulLiteral",
																				"src": "7060:6:10",
																				"type": "",
																				"value": "0x01a0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7051:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7051:3:10"
																		},
																		"nativeSrc": "7051:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7051:16:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_contract_IRewardManager",
																	"nativeSrc": "7000:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "7000:34:10"
																},
																"nativeSrc": "7000:68:10",
																"nodeType": "YulFunctionCall",
																"src": "7000:68:10"
															},
															"nativeSrc": "7000:68:10",
															"nodeType": "YulExpressionStatement",
															"src": "7000:68:10"
														}
													]
												},
												"name": "abi_encode_struct_PoolDetails",
												"nativeSrc": "5583:1491:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5622:5:10",
														"nodeType": "YulTypedName",
														"src": "5622:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5629:3:10",
														"nodeType": "YulTypedName",
														"src": "5629:3:10",
														"type": ""
													}
												],
												"src": "5583:1491:10"
											},
											{
												"body": {
													"nativeSrc": "7286:487:10",
													"nodeType": "YulBlock",
													"src": "7286:487:10",
													"statements": [
														{
															"nativeSrc": "7296:32:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7296:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7314:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7314:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7325:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7325:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7310:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7310:3:10"
																},
																"nativeSrc": "7310:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7310:18:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "7300:6:10",
																	"nodeType": "YulTypedName",
																	"src": "7300:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7344:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7344:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7355:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7355:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7337:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7337:6:10"
																},
																"nativeSrc": "7337:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7337:21:10"
															},
															"nativeSrc": "7337:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "7337:21:10"
														},
														{
															"nativeSrc": "7367:17:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7367:17:10",
															"value": {
																"name": "tail_1",
																"nativeSrc": "7378:6:10",
																"nodeType": "YulIdentifier",
																"src": "7378:6:10"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "7371:3:10",
																	"nodeType": "YulTypedName",
																	"src": "7371:3:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7393:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7393:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7413:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7413:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7407:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7407:5:10"
																},
																"nativeSrc": "7407:13:10",
																"nodeType": "YulFunctionCall",
																"src": "7407:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7397:6:10",
																	"nodeType": "YulTypedName",
																	"src": "7397:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "7436:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7436:6:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7444:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7429:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7429:6:10"
																},
																"nativeSrc": "7429:22:10",
																"nodeType": "YulFunctionCall",
																"src": "7429:22:10"
															},
															"nativeSrc": "7429:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "7429:22:10"
														},
														{
															"nativeSrc": "7460:25:10",
															"nodeType": "YulAssignment",
															"src": "7460:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7471:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7471:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7482:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7482:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7467:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7467:3:10"
																},
																"nativeSrc": "7467:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7467:18:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7460:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7460:3:10"
																}
															]
														},
														{
															"nativeSrc": "7494:29:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7494:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7512:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7512:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7520:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7520:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7508:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7508:3:10"
																},
																"nativeSrc": "7508:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7508:15:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "7498:6:10",
																	"nodeType": "YulTypedName",
																	"src": "7498:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7532:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7532:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "7541:1:10",
																"nodeType": "YulLiteral",
																"src": "7541:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "7536:1:10",
																	"nodeType": "YulTypedName",
																	"src": "7536:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7600:147:10",
																"nodeType": "YulBlock",
																"src": "7600:147:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nativeSrc": "7650:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "7650:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "7644:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "7644:5:10"
																					},
																					"nativeSrc": "7644:13:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7644:13:10"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "7659:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7659:3:10"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_struct_PoolDetails",
																				"nativeSrc": "7614:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "7614:29:10"
																			},
																			"nativeSrc": "7614:49:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7614:49:10"
																		},
																		"nativeSrc": "7614:49:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7614:49:10"
																	},
																	{
																		"nativeSrc": "7676:23:10",
																		"nodeType": "YulAssignment",
																		"src": "7676:23:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "7687:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7687:3:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7692:6:10",
																					"nodeType": "YulLiteral",
																					"src": "7692:6:10",
																					"type": "",
																					"value": "0x01c0"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7683:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7683:3:10"
																			},
																			"nativeSrc": "7683:16:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7683:16:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7676:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7676:3:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7712:25:10",
																		"nodeType": "YulAssignment",
																		"src": "7712:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7726:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "7726:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7734:2:10",
																					"nodeType": "YulLiteral",
																					"src": "7734:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7722:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7722:3:10"
																			},
																			"nativeSrc": "7722:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7722:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7712:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7712:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7562:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7562:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7565:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7565:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7559:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7559:2:10"
																},
																"nativeSrc": "7559:13:10",
																"nodeType": "YulFunctionCall",
																"src": "7559:13:10"
															},
															"nativeSrc": "7551:196:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7573:18:10",
																"nodeType": "YulBlock",
																"src": "7573:18:10",
																"statements": [
																	{
																		"nativeSrc": "7575:14:10",
																		"nodeType": "YulAssignment",
																		"src": "7575:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7584:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "7584:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7587:1:10",
																					"nodeType": "YulLiteral",
																					"src": "7587:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7580:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7580:3:10"
																			},
																			"nativeSrc": "7580:9:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7580:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7575:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "7575:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7555:3:10",
																"nodeType": "YulBlock",
																"src": "7555:3:10",
																"statements": []
															},
															"src": "7551:196:10"
														},
														{
															"nativeSrc": "7756:11:10",
															"nodeType": "YulAssignment",
															"src": "7756:11:10",
															"value": {
																"name": "pos",
																"nativeSrc": "7764:3:10",
																"nodeType": "YulIdentifier",
																"src": "7764:3:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7756:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7756:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_PoolDetails_$571_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_PoolDetails_$571_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "7079:694:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7255:9:10",
														"nodeType": "YulTypedName",
														"src": "7255:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7266:6:10",
														"nodeType": "YulTypedName",
														"src": "7266:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7277:4:10",
														"nodeType": "YulTypedName",
														"src": "7277:4:10",
														"type": ""
													}
												],
												"src": "7079:694:10"
											},
											{
												"body": {
													"nativeSrc": "7900:102:10",
													"nodeType": "YulBlock",
													"src": "7900:102:10",
													"statements": [
														{
															"nativeSrc": "7910:26:10",
															"nodeType": "YulAssignment",
															"src": "7910:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7922:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7922:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7933:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7933:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7918:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7918:3:10"
																},
																"nativeSrc": "7918:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7918:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7910:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7910:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7952:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7952:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7967:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7967:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7983:3:10",
																								"nodeType": "YulLiteral",
																								"src": "7983:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7988:1:10",
																								"nodeType": "YulLiteral",
																								"src": "7988:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7979:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "7979:3:10"
																						},
																						"nativeSrc": "7979:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "7979:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7992:1:10",
																						"nodeType": "YulLiteral",
																						"src": "7992:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7975:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7975:3:10"
																				},
																				"nativeSrc": "7975:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7975:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7963:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7963:3:10"
																		},
																		"nativeSrc": "7963:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7963:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7945:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7945:6:10"
																},
																"nativeSrc": "7945:51:10",
																"nodeType": "YulFunctionCall",
																"src": "7945:51:10"
															},
															"nativeSrc": "7945:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "7945:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IVaultManager_$775__to_t_address__fromStack_reversed",
												"nativeSrc": "7778:224:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7869:9:10",
														"nodeType": "YulTypedName",
														"src": "7869:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7880:6:10",
														"nodeType": "YulTypedName",
														"src": "7880:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7891:4:10",
														"nodeType": "YulTypedName",
														"src": "7891:4:10",
														"type": ""
													}
												],
												"src": "7778:224:10"
											},
											{
												"body": {
													"nativeSrc": "8136:171:10",
													"nodeType": "YulBlock",
													"src": "8136:171:10",
													"statements": [
														{
															"nativeSrc": "8146:26:10",
															"nodeType": "YulAssignment",
															"src": "8146:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8158:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8158:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8169:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8169:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8154:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8154:3:10"
																},
																"nativeSrc": "8154:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8154:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8146:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8146:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8188:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8188:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8203:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8203:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8219:3:10",
																								"nodeType": "YulLiteral",
																								"src": "8219:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8224:1:10",
																								"nodeType": "YulLiteral",
																								"src": "8224:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8215:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "8215:3:10"
																						},
																						"nativeSrc": "8215:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "8215:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8228:1:10",
																						"nodeType": "YulLiteral",
																						"src": "8228:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8211:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8211:3:10"
																				},
																				"nativeSrc": "8211:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8211:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8199:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8199:3:10"
																		},
																		"nativeSrc": "8199:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8199:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8181:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8181:6:10"
																},
																"nativeSrc": "8181:51:10",
																"nodeType": "YulFunctionCall",
																"src": "8181:51:10"
															},
															"nativeSrc": "8181:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "8181:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8252:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8252:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8263:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8263:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8248:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8248:3:10"
																		},
																		"nativeSrc": "8248:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8248:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8272:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8272:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8288:3:10",
																								"nodeType": "YulLiteral",
																								"src": "8288:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8293:1:10",
																								"nodeType": "YulLiteral",
																								"src": "8293:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8284:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "8284:3:10"
																						},
																						"nativeSrc": "8284:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "8284:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8297:1:10",
																						"nodeType": "YulLiteral",
																						"src": "8297:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8280:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8280:3:10"
																				},
																				"nativeSrc": "8280:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8280:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8268:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8268:3:10"
																		},
																		"nativeSrc": "8268:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8268:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8241:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8241:6:10"
																},
																"nativeSrc": "8241:60:10",
																"nodeType": "YulFunctionCall",
																"src": "8241:60:10"
															},
															"nativeSrc": "8241:60:10",
															"nodeType": "YulExpressionStatement",
															"src": "8241:60:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "8007:300:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8097:9:10",
														"nodeType": "YulTypedName",
														"src": "8097:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8108:6:10",
														"nodeType": "YulTypedName",
														"src": "8108:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8116:6:10",
														"nodeType": "YulTypedName",
														"src": "8116:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8127:4:10",
														"nodeType": "YulTypedName",
														"src": "8127:4:10",
														"type": ""
													}
												],
												"src": "8007:300:10"
											},
											{
												"body": {
													"nativeSrc": "8412:310:10",
													"nodeType": "YulBlock",
													"src": "8412:310:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8458:16:10",
																"nodeType": "YulBlock",
																"src": "8458:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8467:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8467:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8470:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8470:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8460:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8460:6:10"
																			},
																			"nativeSrc": "8460:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8460:12:10"
																		},
																		"nativeSrc": "8460:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8460:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8433:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8433:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8442:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8442:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8429:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8429:3:10"
																		},
																		"nativeSrc": "8429:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8429:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8454:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8454:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8425:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8425:3:10"
																},
																"nativeSrc": "8425:32:10",
																"nodeType": "YulFunctionCall",
																"src": "8425:32:10"
															},
															"nativeSrc": "8422:52:10",
															"nodeType": "YulIf",
															"src": "8422:52:10"
														},
														{
															"nativeSrc": "8483:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8483:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8509:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8509:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8496:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "8496:12:10"
																},
																"nativeSrc": "8496:23:10",
																"nodeType": "YulFunctionCall",
																"src": "8496:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8487:5:10",
																	"nodeType": "YulTypedName",
																	"src": "8487:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8553:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8553:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "8528:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "8528:24:10"
																},
																"nativeSrc": "8528:31:10",
																"nodeType": "YulFunctionCall",
																"src": "8528:31:10"
															},
															"nativeSrc": "8528:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "8528:31:10"
														},
														{
															"nativeSrc": "8568:15:10",
															"nodeType": "YulAssignment",
															"src": "8568:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "8578:5:10",
																"nodeType": "YulIdentifier",
																"src": "8578:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8568:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8568:6:10"
																}
															]
														},
														{
															"nativeSrc": "8592:47:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8592:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8624:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8624:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8635:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8635:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8620:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8620:3:10"
																		},
																		"nativeSrc": "8620:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8620:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8607:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "8607:12:10"
																},
																"nativeSrc": "8607:32:10",
																"nodeType": "YulFunctionCall",
																"src": "8607:32:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "8596:7:10",
																	"nodeType": "YulTypedName",
																	"src": "8596:7:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8674:16:10",
																"nodeType": "YulBlock",
																"src": "8674:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8683:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8683:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8686:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8686:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8676:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8676:6:10"
																			},
																			"nativeSrc": "8676:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8676:12:10"
																		},
																		"nativeSrc": "8676:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8676:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "8661:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8661:7:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8670:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8670:1:10",
																				"type": "",
																				"value": "7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8658:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "8658:2:10"
																		},
																		"nativeSrc": "8658:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8658:14:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8651:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8651:6:10"
																},
																"nativeSrc": "8651:22:10",
																"nodeType": "YulFunctionCall",
																"src": "8651:22:10"
															},
															"nativeSrc": "8648:42:10",
															"nodeType": "YulIf",
															"src": "8648:42:10"
														},
														{
															"nativeSrc": "8699:17:10",
															"nodeType": "YulAssignment",
															"src": "8699:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "8709:7:10",
																"nodeType": "YulIdentifier",
																"src": "8709:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "8699:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8699:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_enum$_LoanState_$537",
												"nativeSrc": "8312:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8370:9:10",
														"nodeType": "YulTypedName",
														"src": "8370:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8381:7:10",
														"nodeType": "YulTypedName",
														"src": "8381:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8393:6:10",
														"nodeType": "YulTypedName",
														"src": "8393:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8401:6:10",
														"nodeType": "YulTypedName",
														"src": "8401:6:10",
														"type": ""
													}
												],
												"src": "8312:410:10"
											},
											{
												"body": {
													"nativeSrc": "8839:95:10",
													"nodeType": "YulBlock",
													"src": "8839:95:10",
													"statements": [
														{
															"nativeSrc": "8849:26:10",
															"nodeType": "YulAssignment",
															"src": "8849:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8861:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8861:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8872:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8872:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8857:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8857:3:10"
																},
																"nativeSrc": "8857:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8857:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8849:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8849:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8910:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8910:6:10"
																	},
																	{
																		"name": "headStart",
																		"nativeSrc": "8918:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8918:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_enum_LoanState",
																	"nativeSrc": "8884:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "8884:25:10"
																},
																"nativeSrc": "8884:44:10",
																"nodeType": "YulFunctionCall",
																"src": "8884:44:10"
															},
															"nativeSrc": "8884:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "8884:44:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_LoanState_$537__to_t_uint8__fromStack_reversed",
												"nativeSrc": "8727:207:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8808:9:10",
														"nodeType": "YulTypedName",
														"src": "8808:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8819:6:10",
														"nodeType": "YulTypedName",
														"src": "8819:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8830:4:10",
														"nodeType": "YulTypedName",
														"src": "8830:4:10",
														"type": ""
													}
												],
												"src": "8727:207:10"
											},
											{
												"body": {
													"nativeSrc": "9096:100:10",
													"nodeType": "YulBlock",
													"src": "9096:100:10",
													"statements": [
														{
															"nativeSrc": "9106:27:10",
															"nodeType": "YulAssignment",
															"src": "9106:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9118:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9118:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9129:3:10",
																		"nodeType": "YulLiteral",
																		"src": "9129:3:10",
																		"type": "",
																		"value": "448"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9114:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9114:3:10"
																},
																"nativeSrc": "9114:19:10",
																"nodeType": "YulFunctionCall",
																"src": "9114:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9106:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9106:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9172:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9172:6:10"
																	},
																	{
																		"name": "headStart",
																		"nativeSrc": "9180:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9180:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_PoolDetails",
																	"nativeSrc": "9142:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "9142:29:10"
																},
																"nativeSrc": "9142:48:10",
																"nodeType": "YulFunctionCall",
																"src": "9142:48:10"
															},
															"nativeSrc": "9142:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "9142:48:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_PoolDetails_$571_memory_ptr__to_t_struct$_PoolDetails_$571_memory_ptr__fromStack_reversed",
												"nativeSrc": "8939:257:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9065:9:10",
														"nodeType": "YulTypedName",
														"src": "9065:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9076:6:10",
														"nodeType": "YulTypedName",
														"src": "9076:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9087:4:10",
														"nodeType": "YulTypedName",
														"src": "9087:4:10",
														"type": ""
													}
												],
												"src": "8939:257:10"
											},
											{
												"body": {
													"nativeSrc": "9302:76:10",
													"nodeType": "YulBlock",
													"src": "9302:76:10",
													"statements": [
														{
															"nativeSrc": "9312:26:10",
															"nodeType": "YulAssignment",
															"src": "9312:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9324:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9324:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9335:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9335:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9320:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9320:3:10"
																},
																"nativeSrc": "9320:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9320:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9312:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9312:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9354:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9354:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9365:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9365:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9347:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9347:6:10"
																},
																"nativeSrc": "9347:25:10",
																"nodeType": "YulFunctionCall",
																"src": "9347:25:10"
															},
															"nativeSrc": "9347:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "9347:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9201:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9271:9:10",
														"nodeType": "YulTypedName",
														"src": "9271:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9282:6:10",
														"nodeType": "YulTypedName",
														"src": "9282:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9293:4:10",
														"nodeType": "YulTypedName",
														"src": "9293:4:10",
														"type": ""
													}
												],
												"src": "9201:177:10"
											},
											{
												"body": {
													"nativeSrc": "9557:167:10",
													"nodeType": "YulBlock",
													"src": "9557:167:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9574:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9574:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9585:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9585:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9567:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9567:6:10"
																},
																"nativeSrc": "9567:21:10",
																"nodeType": "YulFunctionCall",
																"src": "9567:21:10"
															},
															"nativeSrc": "9567:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "9567:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9608:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9608:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9619:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9619:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9604:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9604:3:10"
																		},
																		"nativeSrc": "9604:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9604:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9624:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9624:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9597:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9597:6:10"
																},
																"nativeSrc": "9597:30:10",
																"nodeType": "YulFunctionCall",
																"src": "9597:30:10"
															},
															"nativeSrc": "9597:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "9597:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9647:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9647:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9658:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9658:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9643:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9643:3:10"
																		},
																		"nativeSrc": "9643:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9643:18:10"
																	},
																	{
																		"hexValue": "496e76616c696420616464726573736573",
																		"kind": "string",
																		"nativeSrc": "9663:19:10",
																		"nodeType": "YulLiteral",
																		"src": "9663:19:10",
																		"type": "",
																		"value": "Invalid addresses"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9636:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9636:6:10"
																},
																"nativeSrc": "9636:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9636:47:10"
															},
															"nativeSrc": "9636:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9636:47:10"
														},
														{
															"nativeSrc": "9692:26:10",
															"nodeType": "YulAssignment",
															"src": "9692:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9704:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9704:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9715:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9715:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9700:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9700:3:10"
																},
																"nativeSrc": "9700:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9700:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9692:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9692:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ee597f13de1ba23a7961edbe397251ba0565f39f3d995b5348c732d160eca14f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9383:341:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9534:9:10",
														"nodeType": "YulTypedName",
														"src": "9534:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9548:4:10",
														"nodeType": "YulTypedName",
														"src": "9548:4:10",
														"type": ""
													}
												],
												"src": "9383:341:10"
											},
											{
												"body": {
													"nativeSrc": "9903:169:10",
													"nodeType": "YulBlock",
													"src": "9903:169:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9920:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9920:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9931:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9931:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9913:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9913:6:10"
																},
																"nativeSrc": "9913:21:10",
																"nodeType": "YulFunctionCall",
																"src": "9913:21:10"
															},
															"nativeSrc": "9913:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "9913:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9954:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9954:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9965:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9965:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9950:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9950:3:10"
																		},
																		"nativeSrc": "9950:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9950:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9970:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9970:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9943:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9943:6:10"
																},
																"nativeSrc": "9943:30:10",
																"nodeType": "YulFunctionCall",
																"src": "9943:30:10"
															},
															"nativeSrc": "9943:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "9943:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9993:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9993:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10004:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10004:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9989:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9989:3:10"
																		},
																		"nativeSrc": "9989:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9989:18:10"
																	},
																	{
																		"hexValue": "506f6f6c206e6f742072656769737465726564",
																		"kind": "string",
																		"nativeSrc": "10009:21:10",
																		"nodeType": "YulLiteral",
																		"src": "10009:21:10",
																		"type": "",
																		"value": "Pool not registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9982:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9982:6:10"
																},
																"nativeSrc": "9982:49:10",
																"nodeType": "YulFunctionCall",
																"src": "9982:49:10"
															},
															"nativeSrc": "9982:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "9982:49:10"
														},
														{
															"nativeSrc": "10040:26:10",
															"nodeType": "YulAssignment",
															"src": "10040:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10052:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10052:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10063:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10063:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10048:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10048:3:10"
																},
																"nativeSrc": "10048:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10048:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10040:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10040:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9729:343:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9880:9:10",
														"nodeType": "YulTypedName",
														"src": "9880:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9894:4:10",
														"nodeType": "YulTypedName",
														"src": "9894:4:10",
														"type": ""
													}
												],
												"src": "9729:343:10"
											},
											{
												"body": {
													"nativeSrc": "10251:228:10",
													"nodeType": "YulBlock",
													"src": "10251:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10268:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10268:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10279:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10279:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10261:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10261:6:10"
																},
																"nativeSrc": "10261:21:10",
																"nodeType": "YulFunctionCall",
																"src": "10261:21:10"
															},
															"nativeSrc": "10261:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "10261:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10302:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10302:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10313:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10313:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10298:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10298:3:10"
																		},
																		"nativeSrc": "10298:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10298:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10318:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10318:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10291:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10291:6:10"
																},
																"nativeSrc": "10291:30:10",
																"nodeType": "YulFunctionCall",
																"src": "10291:30:10"
															},
															"nativeSrc": "10291:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "10291:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10341:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10341:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10352:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10352:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10337:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10337:3:10"
																		},
																		"nativeSrc": "10337:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10337:18:10"
																	},
																	{
																		"hexValue": "5661756c7420616c7265616479207265676973746572656420666f7220746869",
																		"kind": "string",
																		"nativeSrc": "10357:34:10",
																		"nodeType": "YulLiteral",
																		"src": "10357:34:10",
																		"type": "",
																		"value": "Vault already registered for thi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10330:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10330:6:10"
																},
																"nativeSrc": "10330:62:10",
																"nodeType": "YulFunctionCall",
																"src": "10330:62:10"
															},
															"nativeSrc": "10330:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "10330:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10412:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10412:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10423:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10423:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10408:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10408:3:10"
																		},
																		"nativeSrc": "10408:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10408:18:10"
																	},
																	{
																		"hexValue": "7320706f6f6c",
																		"kind": "string",
																		"nativeSrc": "10428:8:10",
																		"nodeType": "YulLiteral",
																		"src": "10428:8:10",
																		"type": "",
																		"value": "s pool"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10401:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10401:6:10"
																},
																"nativeSrc": "10401:36:10",
																"nodeType": "YulFunctionCall",
																"src": "10401:36:10"
															},
															"nativeSrc": "10401:36:10",
															"nodeType": "YulExpressionStatement",
															"src": "10401:36:10"
														},
														{
															"nativeSrc": "10446:27:10",
															"nodeType": "YulAssignment",
															"src": "10446:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10458:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10458:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10469:3:10",
																		"nodeType": "YulLiteral",
																		"src": "10469:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10454:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10454:3:10"
																},
																"nativeSrc": "10454:19:10",
																"nodeType": "YulFunctionCall",
																"src": "10454:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10446:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10446:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d429b56e51591333ba49e70031a7e747fbb1110c7c7977c922e5e8e59ef9580__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10077:402:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10228:9:10",
														"nodeType": "YulTypedName",
														"src": "10228:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10242:4:10",
														"nodeType": "YulTypedName",
														"src": "10242:4:10",
														"type": ""
													}
												],
												"src": "10077:402:10"
											},
											{
												"body": {
													"nativeSrc": "10658:225:10",
													"nodeType": "YulBlock",
													"src": "10658:225:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10675:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10675:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10686:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10686:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10668:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10668:6:10"
																},
																"nativeSrc": "10668:21:10",
																"nodeType": "YulFunctionCall",
																"src": "10668:21:10"
															},
															"nativeSrc": "10668:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "10668:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10709:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10709:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10720:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10720:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10705:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10705:3:10"
																		},
																		"nativeSrc": "10705:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10705:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10725:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10725:2:10",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10698:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10698:6:10"
																},
																"nativeSrc": "10698:30:10",
																"nodeType": "YulFunctionCall",
																"src": "10698:30:10"
															},
															"nativeSrc": "10698:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "10698:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10748:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10748:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10759:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10759:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10744:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10744:3:10"
																		},
																		"nativeSrc": "10744:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10744:18:10"
																	},
																	{
																		"hexValue": "426f72726f7765722063616e6e6f7420626520746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "10764:34:10",
																		"nodeType": "YulLiteral",
																		"src": "10764:34:10",
																		"type": "",
																		"value": "Borrower cannot be the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10737:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10737:6:10"
																},
																"nativeSrc": "10737:62:10",
																"nodeType": "YulFunctionCall",
																"src": "10737:62:10"
															},
															"nativeSrc": "10737:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "10737:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10819:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10819:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10830:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10830:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10815:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10815:3:10"
																		},
																		"nativeSrc": "10815:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10815:18:10"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "10835:5:10",
																		"nodeType": "YulLiteral",
																		"src": "10835:5:10",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10808:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10808:6:10"
																},
																"nativeSrc": "10808:33:10",
																"nodeType": "YulFunctionCall",
																"src": "10808:33:10"
															},
															"nativeSrc": "10808:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "10808:33:10"
														},
														{
															"nativeSrc": "10850:27:10",
															"nodeType": "YulAssignment",
															"src": "10850:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10862:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10862:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10873:3:10",
																		"nodeType": "YulLiteral",
																		"src": "10873:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10858:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10858:3:10"
																},
																"nativeSrc": "10858:19:10",
																"nodeType": "YulFunctionCall",
																"src": "10858:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10850:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10850:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ed40e154fc5947a1352af7918961f491c7b5e4c2c2d9ffe290fde6912136551f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10484:399:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10635:9:10",
														"nodeType": "YulTypedName",
														"src": "10635:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10649:4:10",
														"nodeType": "YulTypedName",
														"src": "10649:4:10",
														"type": ""
													}
												],
												"src": "10484:399:10"
											},
											{
												"body": {
													"nativeSrc": "11062:177:10",
													"nodeType": "YulBlock",
													"src": "11062:177:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11079:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11079:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11090:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11090:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11072:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11072:6:10"
																},
																"nativeSrc": "11072:21:10",
																"nodeType": "YulFunctionCall",
																"src": "11072:21:10"
															},
															"nativeSrc": "11072:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "11072:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11113:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11113:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11124:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11124:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11109:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11109:3:10"
																		},
																		"nativeSrc": "11109:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11109:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11129:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11129:2:10",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11102:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11102:6:10"
																},
																"nativeSrc": "11102:30:10",
																"nodeType": "YulFunctionCall",
																"src": "11102:30:10"
															},
															"nativeSrc": "11102:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "11102:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11152:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11152:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11163:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11163:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11148:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11148:3:10"
																		},
																		"nativeSrc": "11148:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11148:18:10"
																	},
																	{
																		"hexValue": "506f6f6c20616464726573732063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "11168:29:10",
																		"nodeType": "YulLiteral",
																		"src": "11168:29:10",
																		"type": "",
																		"value": "Pool address cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11141:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11141:6:10"
																},
																"nativeSrc": "11141:57:10",
																"nodeType": "YulFunctionCall",
																"src": "11141:57:10"
															},
															"nativeSrc": "11141:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "11141:57:10"
														},
														{
															"nativeSrc": "11207:26:10",
															"nodeType": "YulAssignment",
															"src": "11207:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11219:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11219:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11230:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11230:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11215:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11215:3:10"
																},
																"nativeSrc": "11215:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11215:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11207:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11207:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_87b863ecb9e24e5ca6ed73ab80a99e3ca6cb5645b7108a8418eddd7225dd4578__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10888:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11039:9:10",
														"nodeType": "YulTypedName",
														"src": "11039:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11053:4:10",
														"nodeType": "YulTypedName",
														"src": "11053:4:10",
														"type": ""
													}
												],
												"src": "10888:351:10"
											},
											{
												"body": {
													"nativeSrc": "11418:173:10",
													"nodeType": "YulBlock",
													"src": "11418:173:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11435:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11435:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11446:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11446:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11428:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11428:6:10"
																},
																"nativeSrc": "11428:21:10",
																"nodeType": "YulFunctionCall",
																"src": "11428:21:10"
															},
															"nativeSrc": "11428:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "11428:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11469:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11469:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11480:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11480:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11465:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11465:3:10"
																		},
																		"nativeSrc": "11465:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11465:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11485:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11485:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11458:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11458:6:10"
																},
																"nativeSrc": "11458:30:10",
																"nodeType": "YulFunctionCall",
																"src": "11458:30:10"
															},
															"nativeSrc": "11458:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "11458:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11508:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11508:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11519:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11519:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11504:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11504:3:10"
																		},
																		"nativeSrc": "11504:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11504:18:10"
																	},
																	{
																		"hexValue": "506f6f6c20616c72656164792072656769737465726564",
																		"kind": "string",
																		"nativeSrc": "11524:25:10",
																		"nodeType": "YulLiteral",
																		"src": "11524:25:10",
																		"type": "",
																		"value": "Pool already registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11497:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11497:6:10"
																},
																"nativeSrc": "11497:53:10",
																"nodeType": "YulFunctionCall",
																"src": "11497:53:10"
															},
															"nativeSrc": "11497:53:10",
															"nodeType": "YulExpressionStatement",
															"src": "11497:53:10"
														},
														{
															"nativeSrc": "11559:26:10",
															"nodeType": "YulAssignment",
															"src": "11559:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11571:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11571:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11582:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11582:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11567:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11567:3:10"
																},
																"nativeSrc": "11567:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11567:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11559:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11559:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc861dfb3d1e0446599e73c98b2e7d579c1ecdb9e65a09f726c97d864f2bf3dd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11244:347:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11395:9:10",
														"nodeType": "YulTypedName",
														"src": "11395:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11409:4:10",
														"nodeType": "YulTypedName",
														"src": "11409:4:10",
														"type": ""
													}
												],
												"src": "11244:347:10"
											},
											{
												"body": {
													"nativeSrc": "11735:163:10",
													"nodeType": "YulBlock",
													"src": "11735:163:10",
													"statements": [
														{
															"nativeSrc": "11745:26:10",
															"nodeType": "YulAssignment",
															"src": "11745:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11757:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11757:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11768:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11768:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11753:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11753:3:10"
																},
																"nativeSrc": "11753:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11753:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11745:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11745:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11787:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11787:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11802:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11802:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11818:3:10",
																								"nodeType": "YulLiteral",
																								"src": "11818:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11823:1:10",
																								"nodeType": "YulLiteral",
																								"src": "11823:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11814:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "11814:3:10"
																						},
																						"nativeSrc": "11814:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "11814:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11827:1:10",
																						"nodeType": "YulLiteral",
																						"src": "11827:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11810:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11810:3:10"
																				},
																				"nativeSrc": "11810:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11810:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11798:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11798:3:10"
																		},
																		"nativeSrc": "11798:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11798:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11780:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11780:6:10"
																},
																"nativeSrc": "11780:51:10",
																"nodeType": "YulFunctionCall",
																"src": "11780:51:10"
															},
															"nativeSrc": "11780:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "11780:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11865:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11865:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11877:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11877:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11888:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11888:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11873:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11873:3:10"
																		},
																		"nativeSrc": "11873:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11873:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_enum_PoolType",
																	"nativeSrc": "11840:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "11840:24:10"
																},
																"nativeSrc": "11840:52:10",
																"nodeType": "YulFunctionCall",
																"src": "11840:52:10"
															},
															"nativeSrc": "11840:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "11840:52:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_enum$_PoolType_$529__to_t_address_t_uint8__fromStack_reversed",
												"nativeSrc": "11596:302:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11696:9:10",
														"nodeType": "YulTypedName",
														"src": "11696:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11707:6:10",
														"nodeType": "YulTypedName",
														"src": "11707:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11715:6:10",
														"nodeType": "YulTypedName",
														"src": "11715:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11726:4:10",
														"nodeType": "YulTypedName",
														"src": "11726:4:10",
														"type": ""
													}
												],
												"src": "11596:302:10"
											},
											{
												"body": {
													"nativeSrc": "11935:95:10",
													"nodeType": "YulBlock",
													"src": "11935:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11952:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11952:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11959:3:10",
																				"nodeType": "YulLiteral",
																				"src": "11959:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11964:10:10",
																				"nodeType": "YulLiteral",
																				"src": "11964:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11955:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11955:3:10"
																		},
																		"nativeSrc": "11955:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11955:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11945:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11945:6:10"
																},
																"nativeSrc": "11945:31:10",
																"nodeType": "YulFunctionCall",
																"src": "11945:31:10"
															},
															"nativeSrc": "11945:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "11945:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11992:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11992:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11995:4:10",
																		"nodeType": "YulLiteral",
																		"src": "11995:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11985:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11985:6:10"
																},
																"nativeSrc": "11985:15:10",
																"nodeType": "YulFunctionCall",
																"src": "11985:15:10"
															},
															"nativeSrc": "11985:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "11985:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12016:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12016:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12019:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12019:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12009:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12009:6:10"
																},
																"nativeSrc": "12009:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12009:15:10"
															},
															"nativeSrc": "12009:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12009:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "11903:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "11903:127:10"
											},
											{
												"body": {
													"nativeSrc": "12067:95:10",
													"nodeType": "YulBlock",
													"src": "12067:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12084:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12084:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12091:3:10",
																				"nodeType": "YulLiteral",
																				"src": "12091:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12096:10:10",
																				"nodeType": "YulLiteral",
																				"src": "12096:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12087:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12087:3:10"
																		},
																		"nativeSrc": "12087:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12087:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12077:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12077:6:10"
																},
																"nativeSrc": "12077:31:10",
																"nodeType": "YulFunctionCall",
																"src": "12077:31:10"
															},
															"nativeSrc": "12077:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "12077:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12124:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12124:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12127:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12127:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12117:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12117:6:10"
																},
																"nativeSrc": "12117:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12117:15:10"
															},
															"nativeSrc": "12117:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12117:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12148:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12148:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12151:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12151:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12141:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12141:6:10"
																},
																"nativeSrc": "12141:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12141:15:10"
															},
															"nativeSrc": "12141:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12141:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "12035:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "12035:127:10"
											},
											{
												"body": {
													"nativeSrc": "12341:172:10",
													"nodeType": "YulBlock",
													"src": "12341:172:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12358:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12358:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12369:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12369:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12351:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12351:6:10"
																},
																"nativeSrc": "12351:21:10",
																"nodeType": "YulFunctionCall",
																"src": "12351:21:10"
															},
															"nativeSrc": "12351:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "12351:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12392:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12392:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12403:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12403:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12388:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12388:3:10"
																		},
																		"nativeSrc": "12388:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12388:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12408:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12408:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12381:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12381:6:10"
																},
																"nativeSrc": "12381:30:10",
																"nodeType": "YulFunctionCall",
																"src": "12381:30:10"
															},
															"nativeSrc": "12381:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "12381:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12431:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12431:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12442:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12442:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12427:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12427:3:10"
																		},
																		"nativeSrc": "12427:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12427:18:10"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f7420616e2061646d696e",
																		"kind": "string",
																		"nativeSrc": "12447:24:10",
																		"nodeType": "YulLiteral",
																		"src": "12447:24:10",
																		"type": "",
																		"value": "Caller is not an admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12420:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12420:6:10"
																},
																"nativeSrc": "12420:52:10",
																"nodeType": "YulFunctionCall",
																"src": "12420:52:10"
															},
															"nativeSrc": "12420:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "12420:52:10"
														},
														{
															"nativeSrc": "12481:26:10",
															"nodeType": "YulAssignment",
															"src": "12481:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12493:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12493:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12504:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12504:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12489:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12489:3:10"
																},
																"nativeSrc": "12489:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12489:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12481:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12481:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12167:346:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12318:9:10",
														"nodeType": "YulTypedName",
														"src": "12318:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12332:4:10",
														"nodeType": "YulTypedName",
														"src": "12332:4:10",
														"type": ""
													}
												],
												"src": "12167:346:10"
											},
											{
												"body": {
													"nativeSrc": "12692:225:10",
													"nodeType": "YulBlock",
													"src": "12692:225:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12709:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12709:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12720:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12720:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12702:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12702:6:10"
																},
																"nativeSrc": "12702:21:10",
																"nodeType": "YulFunctionCall",
																"src": "12702:21:10"
															},
															"nativeSrc": "12702:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "12702:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12743:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12743:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12754:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12754:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12739:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12739:3:10"
																		},
																		"nativeSrc": "12739:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12739:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12759:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12759:2:10",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12732:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12732:6:10"
																},
																"nativeSrc": "12732:30:10",
																"nodeType": "YulFunctionCall",
																"src": "12732:30:10"
															},
															"nativeSrc": "12732:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "12732:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12782:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12782:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12793:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12793:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12778:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12778:3:10"
																		},
																		"nativeSrc": "12778:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12778:18:10"
																	},
																	{
																		"hexValue": "506f6f6c206e6f742072656769737465726564206f7220686173206e6f207661",
																		"kind": "string",
																		"nativeSrc": "12798:34:10",
																		"nodeType": "YulLiteral",
																		"src": "12798:34:10",
																		"type": "",
																		"value": "Pool not registered or has no va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12771:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12771:6:10"
																},
																"nativeSrc": "12771:62:10",
																"nodeType": "YulFunctionCall",
																"src": "12771:62:10"
															},
															"nativeSrc": "12771:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "12771:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12853:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12853:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12864:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12864:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12849:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12849:3:10"
																		},
																		"nativeSrc": "12849:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12849:18:10"
																	},
																	{
																		"hexValue": "756c74",
																		"kind": "string",
																		"nativeSrc": "12869:5:10",
																		"nodeType": "YulLiteral",
																		"src": "12869:5:10",
																		"type": "",
																		"value": "ult"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12842:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12842:6:10"
																},
																"nativeSrc": "12842:33:10",
																"nodeType": "YulFunctionCall",
																"src": "12842:33:10"
															},
															"nativeSrc": "12842:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "12842:33:10"
														},
														{
															"nativeSrc": "12884:27:10",
															"nodeType": "YulAssignment",
															"src": "12884:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12896:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12896:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12907:3:10",
																		"nodeType": "YulLiteral",
																		"src": "12907:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12892:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12892:3:10"
																},
																"nativeSrc": "12892:19:10",
																"nodeType": "YulFunctionCall",
																"src": "12892:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12884:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12884:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_39a3b1530e3b6596e085e382bff955d043a269a2081635a9d861923ef05dbbcd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12518:399:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12669:9:10",
														"nodeType": "YulTypedName",
														"src": "12669:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12683:4:10",
														"nodeType": "YulTypedName",
														"src": "12683:4:10",
														"type": ""
													}
												],
												"src": "12518:399:10"
											},
											{
												"body": {
													"nativeSrc": "13073:157:10",
													"nodeType": "YulBlock",
													"src": "13073:157:10",
													"statements": [
														{
															"nativeSrc": "13083:26:10",
															"nodeType": "YulAssignment",
															"src": "13083:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13095:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13095:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13106:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13106:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13091:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13091:3:10"
																},
																"nativeSrc": "13091:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13091:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13083:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13083:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13144:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13144:6:10"
																	},
																	{
																		"name": "headStart",
																		"nativeSrc": "13152:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13152:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_enum_LoanState",
																	"nativeSrc": "13118:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "13118:25:10"
																},
																"nativeSrc": "13118:44:10",
																"nodeType": "YulFunctionCall",
																"src": "13118:44:10"
															},
															"nativeSrc": "13118:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "13118:44:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13197:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "13197:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13209:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13209:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13220:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13220:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13205:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13205:3:10"
																		},
																		"nativeSrc": "13205:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13205:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_enum_LoanState",
																	"nativeSrc": "13171:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "13171:25:10"
																},
																"nativeSrc": "13171:53:10",
																"nodeType": "YulFunctionCall",
																"src": "13171:53:10"
															},
															"nativeSrc": "13171:53:10",
															"nodeType": "YulExpressionStatement",
															"src": "13171:53:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_LoanState_$537_t_enum$_LoanState_$537__to_t_uint8_t_uint8__fromStack_reversed",
												"nativeSrc": "12922:308:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13034:9:10",
														"nodeType": "YulTypedName",
														"src": "13034:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13045:6:10",
														"nodeType": "YulTypedName",
														"src": "13045:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13053:6:10",
														"nodeType": "YulTypedName",
														"src": "13053:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13064:4:10",
														"nodeType": "YulTypedName",
														"src": "13064:4:10",
														"type": ""
													}
												],
												"src": "12922:308:10"
											},
											{
												"body": {
													"nativeSrc": "13409:225:10",
													"nodeType": "YulBlock",
													"src": "13409:225:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13426:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13426:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13437:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13437:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13419:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13419:6:10"
																},
																"nativeSrc": "13419:21:10",
																"nodeType": "YulFunctionCall",
																"src": "13419:21:10"
															},
															"nativeSrc": "13419:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "13419:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13460:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13460:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13471:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13471:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13456:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13456:3:10"
																		},
																		"nativeSrc": "13456:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13456:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13476:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13476:2:10",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13449:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13449:6:10"
																},
																"nativeSrc": "13449:30:10",
																"nodeType": "YulFunctionCall",
																"src": "13449:30:10"
															},
															"nativeSrc": "13449:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "13449:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13499:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13499:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13510:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13510:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13495:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13495:3:10"
																		},
																		"nativeSrc": "13495:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13495:18:10"
																	},
																	{
																		"hexValue": "5661756c744d616e616765722063616e6e6f74206265207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "13515:34:10",
																		"nodeType": "YulLiteral",
																		"src": "13515:34:10",
																		"type": "",
																		"value": "VaultManager cannot be zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13488:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13488:6:10"
																},
																"nativeSrc": "13488:62:10",
																"nodeType": "YulFunctionCall",
																"src": "13488:62:10"
															},
															"nativeSrc": "13488:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "13488:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13570:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13570:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13581:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13581:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13566:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13566:3:10"
																		},
																		"nativeSrc": "13566:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13566:18:10"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "13586:5:10",
																		"nodeType": "YulLiteral",
																		"src": "13586:5:10",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13559:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13559:6:10"
																},
																"nativeSrc": "13559:33:10",
																"nodeType": "YulFunctionCall",
																"src": "13559:33:10"
															},
															"nativeSrc": "13559:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "13559:33:10"
														},
														{
															"nativeSrc": "13601:27:10",
															"nodeType": "YulAssignment",
															"src": "13601:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13613:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13613:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13624:3:10",
																		"nodeType": "YulLiteral",
																		"src": "13624:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13609:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13609:3:10"
																},
																"nativeSrc": "13609:19:10",
																"nodeType": "YulFunctionCall",
																"src": "13609:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13601:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13601:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3300f91172421bdc36f79d184a3d6d7dc2e019f7fb0814aeb4306f4cacbe452e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13235:399:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13386:9:10",
														"nodeType": "YulTypedName",
														"src": "13386:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13400:4:10",
														"nodeType": "YulTypedName",
														"src": "13400:4:10",
														"type": ""
													}
												],
												"src": "13235:399:10"
											},
											{
												"body": {
													"nativeSrc": "13813:226:10",
													"nodeType": "YulBlock",
													"src": "13813:226:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13830:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13830:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13841:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13841:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13823:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13823:6:10"
																},
																"nativeSrc": "13823:21:10",
																"nodeType": "YulFunctionCall",
																"src": "13823:21:10"
															},
															"nativeSrc": "13823:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "13823:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13864:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13864:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13875:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13875:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13860:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13860:3:10"
																		},
																		"nativeSrc": "13860:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13860:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13880:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13880:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13853:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13853:6:10"
																},
																"nativeSrc": "13853:30:10",
																"nodeType": "YulFunctionCall",
																"src": "13853:30:10"
															},
															"nativeSrc": "13853:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "13853:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13903:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13903:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13914:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13914:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13899:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13899:3:10"
																		},
																		"nativeSrc": "13899:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13899:18:10"
																	},
																	{
																		"hexValue": "5265776172644d616e616765722063616e6e6f74206265207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "13919:34:10",
																		"nodeType": "YulLiteral",
																		"src": "13919:34:10",
																		"type": "",
																		"value": "RewardManager cannot be zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13892:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13892:6:10"
																},
																"nativeSrc": "13892:62:10",
																"nodeType": "YulFunctionCall",
																"src": "13892:62:10"
															},
															"nativeSrc": "13892:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "13892:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13974:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13974:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13985:2:10",
																				"nodeType": "YulLiteral",
																				"src": "13985:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13970:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13970:3:10"
																		},
																		"nativeSrc": "13970:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13970:18:10"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "13990:6:10",
																		"nodeType": "YulLiteral",
																		"src": "13990:6:10",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13963:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13963:6:10"
																},
																"nativeSrc": "13963:34:10",
																"nodeType": "YulFunctionCall",
																"src": "13963:34:10"
															},
															"nativeSrc": "13963:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "13963:34:10"
														},
														{
															"nativeSrc": "14006:27:10",
															"nodeType": "YulAssignment",
															"src": "14006:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14018:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14018:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14029:3:10",
																		"nodeType": "YulLiteral",
																		"src": "14029:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14014:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14014:3:10"
																},
																"nativeSrc": "14014:19:10",
																"nodeType": "YulFunctionCall",
																"src": "14014:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14006:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14006:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fd60161d2dbc5f20e9acfa92ab57db75891d1d8ebbf7459220687d0a65d0b331__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13639:400:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13790:9:10",
														"nodeType": "YulTypedName",
														"src": "13790:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13804:4:10",
														"nodeType": "YulTypedName",
														"src": "13804:4:10",
														"type": ""
													}
												],
												"src": "13639:400:10"
											},
											{
												"body": {
													"nativeSrc": "14093:176:10",
													"nodeType": "YulBlock",
													"src": "14093:176:10",
													"statements": [
														{
															"nativeSrc": "14103:17:10",
															"nodeType": "YulAssignment",
															"src": "14103:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14115:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14115:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14118:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14118:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14111:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14111:3:10"
																},
																"nativeSrc": "14111:9:10",
																"nodeType": "YulFunctionCall",
																"src": "14111:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14103:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14103:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14152:111:10",
																"nodeType": "YulBlock",
																"src": "14152:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14173:1:10",
																					"nodeType": "YulLiteral",
																					"src": "14173:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "14180:3:10",
																							"nodeType": "YulLiteral",
																							"src": "14180:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "14185:10:10",
																							"nodeType": "YulLiteral",
																							"src": "14185:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "14176:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "14176:3:10"
																					},
																					"nativeSrc": "14176:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "14176:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "14166:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14166:6:10"
																			},
																			"nativeSrc": "14166:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14166:31:10"
																		},
																		"nativeSrc": "14166:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "14166:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14217:1:10",
																					"nodeType": "YulLiteral",
																					"src": "14217:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14220:4:10",
																					"nodeType": "YulLiteral",
																					"src": "14220:4:10",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "14210:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14210:6:10"
																			},
																			"nativeSrc": "14210:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14210:15:10"
																		},
																		"nativeSrc": "14210:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "14210:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14245:1:10",
																					"nodeType": "YulLiteral",
																					"src": "14245:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14248:4:10",
																					"nodeType": "YulLiteral",
																					"src": "14248:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14238:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14238:6:10"
																			},
																			"nativeSrc": "14238:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14238:15:10"
																		},
																		"nativeSrc": "14238:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "14238:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14135:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14135:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14141:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14141:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14132:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "14132:2:10"
																},
																"nativeSrc": "14132:11:10",
																"nodeType": "YulFunctionCall",
																"src": "14132:11:10"
															},
															"nativeSrc": "14129:134:10",
															"nodeType": "YulIf",
															"src": "14129:134:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "14044:225:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14075:1:10",
														"nodeType": "YulTypedName",
														"src": "14075:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14078:1:10",
														"nodeType": "YulTypedName",
														"src": "14078:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14084:4:10",
														"nodeType": "YulTypedName",
														"src": "14084:4:10",
														"type": ""
													}
												],
												"src": "14044:225:10"
											},
											{
												"body": {
													"nativeSrc": "14306:95:10",
													"nodeType": "YulBlock",
													"src": "14306:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14323:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14323:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "14330:3:10",
																				"nodeType": "YulLiteral",
																				"src": "14330:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14335:10:10",
																				"nodeType": "YulLiteral",
																				"src": "14335:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "14326:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14326:3:10"
																		},
																		"nativeSrc": "14326:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14326:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14316:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14316:6:10"
																},
																"nativeSrc": "14316:31:10",
																"nodeType": "YulFunctionCall",
																"src": "14316:31:10"
															},
															"nativeSrc": "14316:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "14316:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14363:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14363:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14366:4:10",
																		"nodeType": "YulLiteral",
																		"src": "14366:4:10",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14356:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14356:6:10"
																},
																"nativeSrc": "14356:15:10",
																"nodeType": "YulFunctionCall",
																"src": "14356:15:10"
															},
															"nativeSrc": "14356:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "14356:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14387:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14387:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14390:4:10",
																		"nodeType": "YulLiteral",
																		"src": "14390:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14380:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14380:6:10"
																},
																"nativeSrc": "14380:15:10",
																"nodeType": "YulFunctionCall",
																"src": "14380:15:10"
															},
															"nativeSrc": "14380:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "14380:15:10"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "14274:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "14274:127:10"
											},
											{
												"body": {
													"nativeSrc": "14535:145:10",
													"nodeType": "YulBlock",
													"src": "14535:145:10",
													"statements": [
														{
															"nativeSrc": "14545:26:10",
															"nodeType": "YulAssignment",
															"src": "14545:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14557:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14557:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14568:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14568:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14553:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14553:3:10"
																},
																"nativeSrc": "14553:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14553:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14545:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14545:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14587:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14587:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "14602:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14602:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "14618:3:10",
																								"nodeType": "YulLiteral",
																								"src": "14618:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "14623:1:10",
																								"nodeType": "YulLiteral",
																								"src": "14623:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "14614:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "14614:3:10"
																						},
																						"nativeSrc": "14614:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "14614:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14627:1:10",
																						"nodeType": "YulLiteral",
																						"src": "14627:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "14610:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "14610:3:10"
																				},
																				"nativeSrc": "14610:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "14610:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14598:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14598:3:10"
																		},
																		"nativeSrc": "14598:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14598:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14580:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14580:6:10"
																},
																"nativeSrc": "14580:51:10",
																"nodeType": "YulFunctionCall",
																"src": "14580:51:10"
															},
															"nativeSrc": "14580:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "14580:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14651:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14651:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14662:2:10",
																				"nodeType": "YulLiteral",
																				"src": "14662:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14647:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14647:3:10"
																		},
																		"nativeSrc": "14647:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14647:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "14667:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "14667:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14640:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14640:6:10"
																},
																"nativeSrc": "14640:34:10",
																"nodeType": "YulFunctionCall",
																"src": "14640:34:10"
															},
															"nativeSrc": "14640:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "14640:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "14406:274:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14496:9:10",
														"nodeType": "YulTypedName",
														"src": "14496:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14507:6:10",
														"nodeType": "YulTypedName",
														"src": "14507:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14515:6:10",
														"nodeType": "YulTypedName",
														"src": "14515:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14526:4:10",
														"nodeType": "YulTypedName",
														"src": "14526:4:10",
														"type": ""
													}
												],
												"src": "14406:274:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_contract_IRewardManager(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IRewardManager_$727__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_enum_PoolType(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_contract$_IERC20_$456t_contract$_IERC20_$456t_contract$_IERC20_$456t_uint256t_uint256t_uint256t_enum$_PoolType_$529(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10\n    {\n        if slt(sub(dataEnd, headStart), 352) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := calldataload(add(headStart, 96))\n        validator_revert_address(value_3)\n        value3 := value_3\n        let value_4 := calldataload(add(headStart, 128))\n        validator_revert_address(value_4)\n        value4 := value_4\n        let value_5 := 0\n        value_5 := calldataload(add(headStart, 160))\n        validator_revert_address(value_5)\n        value5 := value_5\n        let value_6 := 0\n        value_6 := calldataload(add(headStart, 192))\n        validator_revert_address(value_6)\n        value6 := value_6\n        let value_7 := 0\n        value_7 := calldataload(add(headStart, 224))\n        value7 := value_7\n        let value_8 := 0\n        value_8 := calldataload(add(headStart, 256))\n        value8 := value_8\n        let value_9 := 0\n        value_9 := calldataload(add(headStart, 288))\n        value9 := value_9\n        value10 := abi_decode_enum_PoolType(add(headStart, 320))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_PoolType(value, pos)\n    {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n        mstore(pos, value)\n    }\n    function abi_encode_enum_LoanState(value, pos)\n    {\n        if iszero(lt(value, 7)) { panic_error_0x21() }\n        mstore(pos, value)\n    }\n    function abi_encode_struct_PoolDetails(value, pos)\n    {\n        abi_encode_contract_IRewardManager(mload(value), pos)\n        let memberValue0 := mload(add(value, 0x20))\n        abi_encode_contract_IRewardManager(memberValue0, add(pos, 0x20))\n        mstore(add(pos, 0x40), mload(add(value, 0x40)))\n        let memberValue0_1 := mload(add(value, 0x60))\n        abi_encode_contract_IRewardManager(memberValue0_1, add(pos, 0x60))\n        let memberValue0_2 := mload(add(value, 0x80))\n        abi_encode_contract_IRewardManager(memberValue0_2, add(pos, 0x80))\n        let memberValue0_3 := mload(add(value, 0xa0))\n        abi_encode_contract_IRewardManager(memberValue0_3, add(pos, 0xa0))\n        let memberValue0_4 := mload(add(value, 0xc0))\n        abi_encode_contract_IRewardManager(memberValue0_4, add(pos, 0xc0))\n        mstore(add(pos, 0xe0), mload(add(value, 0xe0)))\n        mstore(add(pos, 0x0100), mload(add(value, 0x0100)))\n        mstore(add(pos, 0x0120), mload(add(value, 0x0120)))\n        let memberValue0_5 := mload(add(value, 0x0140))\n        abi_encode_enum_PoolType(memberValue0_5, add(pos, 0x0140))\n        let memberValue0_6 := mload(add(value, 0x0160))\n        abi_encode_bool(memberValue0_6, add(pos, 0x0160))\n        let memberValue0_7 := mload(add(value, 0x0180))\n        abi_encode_enum_LoanState(memberValue0_7, add(pos, 0x0180))\n        let memberValue0_8 := mload(add(value, 0x01a0))\n        abi_encode_contract_IRewardManager(memberValue0_8, add(pos, 0x01a0))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_PoolDetails_$571_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_PoolDetails_$571_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            abi_encode_struct_PoolDetails(mload(srcPtr), pos)\n            pos := add(pos, 0x01c0)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_contract$_IVaultManager_$775__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_enum$_LoanState_$537(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(lt(value_1, 7)) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_enum$_LoanState_$537__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        abi_encode_enum_LoanState(value0, headStart)\n    }\n    function abi_encode_tuple_t_struct$_PoolDetails_$571_memory_ptr__to_t_struct$_PoolDetails_$571_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 448)\n        abi_encode_struct_PoolDetails(value0, headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_ee597f13de1ba23a7961edbe397251ba0565f39f3d995b5348c732d160eca14f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid addresses\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Pool not registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d429b56e51591333ba49e70031a7e747fbb1110c7c7977c922e5e8e59ef9580__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Vault already registered for thi\")\n        mstore(add(headStart, 96), \"s pool\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ed40e154fc5947a1352af7918961f491c7b5e4c2c2d9ffe290fde6912136551f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Borrower cannot be the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_87b863ecb9e24e5ca6ed73ab80a99e3ca6cb5645b7108a8418eddd7225dd4578__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Pool address cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc861dfb3d1e0446599e73c98b2e7d579c1ecdb9e65a09f726c97d864f2bf3dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Pool already registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_enum$_PoolType_$529__to_t_address_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        abi_encode_enum_PoolType(value1, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Caller is not an admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_39a3b1530e3b6596e085e382bff955d043a269a2081635a9d861923ef05dbbcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Pool not registered or has no va\")\n        mstore(add(headStart, 96), \"ult\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_enum$_LoanState_$537_t_enum$_LoanState_$537__to_t_uint8_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        abi_encode_enum_LoanState(value0, headStart)\n        abi_encode_enum_LoanState(value1, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_3300f91172421bdc36f79d184a3d6d7dc2e019f7fb0814aeb4306f4cacbe452e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"VaultManager cannot be zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fd60161d2dbc5f20e9acfa92ab57db75891d1d8ebbf7459220687d0a65d0b331__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"RewardManager cannot be zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7570E389 GT PUSH2 0xFE JUMPI DUP1 PUSH4 0xC489579D GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xD3FFE67A GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xD3FFE67A EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0xE7EF32F7 EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xEC209544 EQ PUSH2 0x490 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC489579D EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0xC56F1B44 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xC81C3BEF EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0xD3E90FA0 EQ PUSH2 0x442 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0xA8D088BB EQ PUSH2 0x3B6 JUMPI DUP1 PUSH4 0xA956239B EQ PUSH2 0x3DC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7570E389 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x7E72C7D7 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x8A4ADF24 EQ PUSH2 0x389 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x169 JUMPI DUP1 PUSH4 0x43756020 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x43756020 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x52FC9B0E EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x56D73568 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x5D102DF7 EQ PUSH2 0x350 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x37E238C5 EQ PUSH2 0x2E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E4966AB GT PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x1E4966AB EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x1F2F2E14 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x24A44EFB EQ PUSH2 0x29D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x5C4FDF9 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xF4EF8A6 EQ PUSH2 0x207 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1DD PUSH2 0x1D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D3B JUMP JUMPDEST PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D7D JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x21A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x268 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST PUSH2 0x28F PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x1DCF JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x2B0 PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x69E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1DE6 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1E31 JUMP JUMPDEST PUSH2 0x711 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1E31 JUMP JUMPDEST PUSH2 0x73B JUMP JUMPDEST PUSH2 0x205 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D7D JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E67 JUMP JUMPDEST PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x31C PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x2079 JUMP JUMPDEST PUSH2 0x28F PUSH32 0x6077685936C8169D09204A1D97DB12E41713588C38E1D29A61867D3DCEE98AFF DUP2 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0xF2E JUMP JUMPDEST PUSH2 0x21A PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0xFB4 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x21A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1E31 JUMP JUMPDEST PUSH2 0x116D JUMP JUMPDEST PUSH2 0x28F PUSH0 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x20BC JUMP JUMPDEST PUSH2 0x1195 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1D7D JUMP JUMPDEST PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x2B0 PUSH2 0x138D JUMP JUMPDEST PUSH2 0x435 PUSH2 0x418 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x20EB JUMP JUMPDEST PUSH2 0x455 PUSH2 0x450 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x20F9 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x28F JUMP JUMPDEST PUSH2 0x205 PUSH2 0x478 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E31 JUMP JUMPDEST PUSH2 0x1562 JUMP JUMPDEST PUSH2 0x2B0 PUSH2 0x48B CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x1586 JUMP JUMPDEST PUSH2 0x31C PUSH2 0x49E CALLDATASIZE PUSH1 0x4 PUSH2 0x1DB4 JUMP JUMPDEST PUSH2 0x15F7 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4D3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x4F9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO ISZERO JUMPDEST PUSH2 0x53E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420616464726573736573 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x574 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x535 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C7420616C7265616479207265676973746572656420666F7220746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1CC81C1BDBDB PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x535 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP7 AND SWAP5 DUP6 OR SWAP1 SSTORE MLOAD PUSH32 0xF8EE9039D8E4D43426638703C71517008894FDEA742BB2D2DBFF5A46FB07ABDB SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x676 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x535 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x705 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E7 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x72B DUP2 PUSH2 0x183E JUMP JUMPDEST PUSH2 0x735 DUP4 DUP4 PUSH2 0x1848 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76E DUP3 DUP3 PUSH2 0x18D7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x7A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x535 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x80B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F72726F7765722063616E6E6F7420626520746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x535 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 AND SWAP1 DUP3 AND DUP2 EQ PUSH2 0x76E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x84B JUMPI PUSH2 0x84B DUP2 DUP5 PUSH2 0x1940 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP6 MSTORE DUP4 DUP6 KECCAK256 ADD DUP1 SLOAD SWAP7 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP8 DUP9 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP5 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH2 0x8FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20616464726573732063616E6E6F74206265207A65726F0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x535 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x961 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20616C72656164792072656769737465726564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x535 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9F1 JUMPI PUSH2 0x9F1 PUSH2 0x1F25 JUMP JUMPDEST DUP2 MSTORE PUSH0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP15 AND PUSH1 0x20 SWAP3 DUP4 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP1 DUP5 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SLOAD SWAP1 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP3 SSTORE SWAP5 DUP7 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD DUP1 SLOAD SWAP3 DUP8 AND SWAP3 DUP9 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP3 DUP7 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD SWAP2 DUP7 AND SWAP2 DUP8 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP7 ADD MLOAD SWAP2 DUP2 ADD DUP1 SLOAD SWAP3 DUP6 AND SWAP3 DUP7 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0x5 DUP3 ADD DUP1 SLOAD SWAP2 DUP6 AND SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x6 DUP3 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP5 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP2 SSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0x7 DUP4 ADD SSTORE PUSH2 0x100 DUP4 ADD MLOAD PUSH1 0x8 DUP4 ADD SSTORE PUSH2 0x120 DUP4 ADD MLOAD PUSH1 0x9 DUP4 ADD SSTORE PUSH2 0x140 DUP4 ADD MLOAD PUSH1 0xA DUP4 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF NOT AND SWAP1 DUP4 DUP2 DUP2 GT ISZERO PUSH2 0xAFF JUMPI PUSH2 0xAFF PUSH2 0x1F25 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x160 DUP3 ADD MLOAD PUSH1 0xA DUP3 ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT DUP4 AND DUP2 OR DUP3 SSTORE PUSH2 0x180 DUP6 ADD MLOAD SWAP3 PUSH3 0xFF0000 NOT SWAP1 SWAP2 AND PUSH3 0xFFFF00 NOT SWAP1 SWAP2 AND OR PUSH3 0x10000 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xB4F JUMPI PUSH2 0xB4F PUSH2 0x1F25 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x1A0 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x5 PUSH0 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP12 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP12 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x8 PUSH0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xC76 JUMPI PUSH2 0xC76 PUSH2 0x1F25 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8F723E49DC038E67C41B41307A1E0C65653D50125A0C474A21AC32D9A0B24D2B DUP12 DUP6 PUSH1 0x40 MLOAD PUSH2 0xCCA SWAP3 SWAP2 SWAP1 PUSH2 0x2135 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP4 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xD45 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD27 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD67 JUMPI PUSH2 0xD67 PUSH2 0x2152 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDA0 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xD8D PUSH2 0x1CC8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD85 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xF26 JUMPI PUSH1 0x4 PUSH0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xDC3 JUMPI PUSH2 0xDC3 PUSH2 0x2166 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE DUP3 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH0 KECCAK256 DUP3 MLOAD PUSH2 0x1C0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP6 AND DUP2 MSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD DUP7 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD DUP5 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD DUP5 AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD SWAP1 SWAP4 AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x8 DUP4 ADD SLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0x9 DUP4 ADD SLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0xA DUP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x140 DUP5 ADD SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP2 GT ISZERO PUSH2 0xE88 JUMPI PUSH2 0xE88 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xE99 JUMPI PUSH2 0xE99 PUSH2 0x1F25 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xA DUP3 ADD SLOAD PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 PUSH3 0x10000 SWAP1 SWAP2 DIV AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xECF JUMPI PUSH2 0xECF PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0xEE0 JUMPI PUSH2 0xEE0 PUSH2 0x1F25 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xA SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xF13 JUMPI PUSH2 0xF13 PUSH2 0x2166 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xDA5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF38 PUSH0 CALLER PUSH2 0x116D JUMP JUMPDEST PUSH2 0xF7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B0B63632B91034B9903737BA1030B71030B236B4B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x535 JUMP JUMPDEST PUSH2 0xFA7 PUSH32 0x6077685936C8169D09204A1D97DB12E41713588C38E1D29A61867D3DCEE98AFF DUP3 PUSH2 0x711 JUMP JUMPDEST PUSH2 0xFB1 PUSH0 DUP3 PUSH2 0x711 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND PUSH2 0x1028 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C206E6F742072656769737465726564206F7220686173206E6F207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1D5B1D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x535 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x107C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x535 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x10A0 DUP2 DUP4 PUSH2 0x1A7A JUMP JUMPDEST PUSH2 0x10A9 DUP3 PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP3 AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP7 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP3 AND SWAP1 SSTORE SWAP4 DUP2 ADD DUP1 SLOAD DUP6 AND SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP1 SLOAD DUP6 AND SWAP1 SSTORE PUSH1 0x6 DUP2 ADD DUP1 SLOAD SWAP1 SWAP5 AND SWAP1 SWAP4 SSTORE PUSH1 0x7 DUP4 ADD DUP5 SWAP1 SSTORE PUSH1 0x8 DUP1 DUP5 ADD DUP6 SWAP1 SSTORE PUSH1 0x9 DUP5 ADD DUP6 SWAP1 SSTORE PUSH1 0xA SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE SWAP2 SWAP1 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x334D0B2111287DFDDEBE4B4C1C5AF3AE644909D7FCD024377BF601E236ED5ABB SWAP2 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x11CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x535 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND SWAP2 DUP4 SWAP2 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x1203 JUMPI PUSH2 0x1203 PUSH2 0x1F25 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA61679A80E33B8CCD7049ED35B83F875349AA2875EF98CE5BA441A88761FB4E DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1243 SWAP3 SWAP2 SWAP1 PUSH2 0x217A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x125A DUP2 PUSH2 0x183E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x12BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C744D616E616765722063616E6E6F74206265207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x535 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x131E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5265776172644D616E616765722063616E6E6F74206265207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x535 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP2 DUP7 AND SWAP2 SWAP1 SWAP3 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x8FC18CC172F74C81235145B7927190D2BD0E351FC45BFB17BB572593273CEF21 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x13E3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13C5 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13F5 PUSH2 0x1CC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x142B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x535 SWAP1 PUSH2 0x2108 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0x1C0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP7 AND DUP2 MSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD DUP8 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP6 AND PUSH1 0x60 DUP6 ADD MSTORE SWAP2 DUP3 ADD SLOAD DUP5 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD DUP5 AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD SWAP1 SWAP4 AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0xA DUP2 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x140 DUP5 ADD SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP2 GT ISZERO PUSH2 0x14E5 JUMPI PUSH2 0x14E5 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x14F6 JUMPI PUSH2 0x14F6 PUSH2 0x1F25 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xA DUP3 ADD SLOAD PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 PUSH3 0x10000 SWAP1 SWAP2 DIV AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x152C JUMPI PUSH2 0x152C PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x153D JUMPI PUSH2 0x153D PUSH2 0x1F25 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xA SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x157C DUP2 PUSH2 0x183E JUMP JUMPDEST PUSH2 0x735 DUP4 DUP4 PUSH2 0x18D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x705 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E7 JUMPI POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP4 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x165D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x163F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x167F JUMPI PUSH2 0x167F PUSH2 0x2152 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16B8 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x16A5 PUSH2 0x1CC8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x169D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xF26 JUMPI PUSH1 0x4 PUSH0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x16DB JUMPI PUSH2 0x16DB PUSH2 0x2166 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE DUP3 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH0 KECCAK256 DUP3 MLOAD PUSH2 0x1C0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP6 AND DUP2 MSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD DUP7 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD DUP5 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD DUP5 AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD SWAP1 SWAP4 AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x8 DUP4 ADD SLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0x9 DUP4 ADD SLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0xA DUP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x140 DUP5 ADD SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP2 GT ISZERO PUSH2 0x17A0 JUMPI PUSH2 0x17A0 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x17B1 JUMPI PUSH2 0x17B1 PUSH2 0x1F25 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xA DUP3 ADD SLOAD PUSH1 0xFF PUSH2 0x100 DUP3 DIV DUP2 AND ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 SWAP1 SWAP3 ADD SWAP2 PUSH3 0x10000 SWAP1 SWAP2 DIV AND PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x17E7 JUMPI PUSH2 0x17E7 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x17F8 JUMPI PUSH2 0x17F8 PUSH2 0x1F25 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xA SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x182B JUMPI PUSH2 0x182B PUSH2 0x2166 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x16BD JUMP JUMPDEST PUSH2 0xFB1 DUP2 CALLER PUSH2 0x1C31 JUMP JUMPDEST PUSH0 PUSH2 0x1853 DUP4 DUP4 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x18D0 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1888 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4D3 JUMP JUMPDEST POP PUSH0 PUSH2 0x4D3 JUMP JUMPDEST PUSH0 PUSH2 0x18E2 DUP4 DUP4 PUSH2 0x116D JUMP JUMPDEST ISZERO PUSH2 0x18D0 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1961 SWAP1 DUP4 PUSH2 0x1C6E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 LT ISZERO PUSH2 0x76E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x19A7 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2195 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 DUP3 SWAP1 DUP2 LT PUSH2 0x19D4 JUMPI PUSH2 0x19D4 PUSH2 0x2166 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1A10 JUMPI PUSH2 0x1A10 PUSH2 0x2166 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP7 AND DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x1A54 JUMPI PUSH2 0x1A54 PUSH2 0x21B4 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1A9B SWAP1 DUP4 PUSH2 0x1C6E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x1AC3 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2195 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 DUP3 SWAP1 DUP2 LT PUSH2 0x1AF0 JUMPI PUSH2 0x1AF0 PUSH2 0x2166 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1B2C JUMPI PUSH2 0x1B2C PUSH2 0x2166 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP7 AND DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x1A54 JUMPI PUSH2 0x1A54 PUSH2 0x21B4 JUMP JUMPDEST PUSH0 PUSH2 0x1B7C PUSH1 0x3 DUP4 PUSH2 0x1C6E JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH0 SWAP1 PUSH2 0x1B90 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2195 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1BA5 JUMPI PUSH2 0x1BA5 PUSH2 0x2166 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0x1BD0 JUMPI PUSH2 0x1BD0 PUSH2 0x2166 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP1 SLOAD DUP1 PUSH2 0x1C0C JUMPI PUSH2 0x1C0C PUSH2 0x21B4 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x1C3B DUP3 DUP3 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x1C6A JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x535 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x1CBE JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C96 JUMPI PUSH2 0x1C96 PUSH2 0x2166 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1CB6 JUMPI SWAP1 POP PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1C71 JUMP JUMPDEST POP PUSH0 NOT SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x1C0 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x140 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x160 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x180 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1A0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D4B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1D62 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D8E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1D99 DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1DA9 DUP2 PUSH2 0x1D69 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DC4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D62 DUP2 PUSH2 0x1D69 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DDF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E26 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1DFF JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E42 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1DA9 DUP2 PUSH2 0x1D69 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0x1E62 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x1E82 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP12 CALLDATALOAD PUSH2 0x1E8D DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP11 POP PUSH1 0x20 DUP13 ADD CALLDATALOAD PUSH2 0x1E9D DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP10 POP PUSH1 0x40 DUP13 ADD CALLDATALOAD PUSH2 0x1EAD DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP9 POP PUSH1 0x60 DUP13 ADD CALLDATALOAD PUSH2 0x1EBD DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP8 POP PUSH1 0x80 DUP13 ADD CALLDATALOAD PUSH2 0x1ECD DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP7 POP PUSH1 0xA0 DUP13 ADD CALLDATALOAD PUSH2 0x1EDD DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP6 POP PUSH1 0xC0 DUP13 ADD CALLDATALOAD PUSH2 0x1EED DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP5 POP PUSH1 0xE0 DUP13 ADD CALLDATALOAD SWAP4 POP PUSH2 0x100 DUP13 ADD CALLDATALOAD SWAP3 POP PUSH2 0x120 DUP13 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1F13 PUSH2 0x140 DUP14 ADD PUSH2 0x1E54 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1F49 JUMPI PUSH2 0x1F49 PUSH2 0x1F25 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x1F49 JUMPI PUSH2 0x1F49 PUSH2 0x1F25 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x1F84 PUSH1 0x20 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x1FA9 PUSH1 0x60 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x80 DUP2 ADD MLOAD PUSH2 0x1FC4 PUSH1 0x80 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP2 ADD MLOAD PUSH2 0x1FDF PUSH1 0xA0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x1FFA PUSH1 0xC0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x140 DUP2 ADD MLOAD PUSH2 0x2031 PUSH2 0x140 DUP5 ADD DUP3 PUSH2 0x1F39 JUMP JUMPDEST POP PUSH2 0x160 DUP2 ADD MLOAD PUSH2 0x2047 PUSH2 0x160 DUP5 ADD DUP3 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x180 DUP2 ADD MLOAD PUSH2 0x205C PUSH2 0x180 DUP5 ADD DUP3 PUSH2 0x1F4D JUMP JUMPDEST POP PUSH2 0x1A0 DUP2 ADD MLOAD PUSH2 0x76E PUSH2 0x1A0 DUP5 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E26 JUMPI PUSH2 0x20A5 DUP4 DUP6 MLOAD PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD SWAP3 PUSH2 0x1C0 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2092 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20CD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x20D8 DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x7 DUP2 LT PUSH2 0x1DA9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x4D3 DUP3 DUP5 PUSH2 0x1F4D JUMP JUMPDEST PUSH2 0x1C0 DUP2 ADD PUSH2 0x4D3 DUP3 DUP5 PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x141BDBDB081B9BDD081C9959DA5CDD195C9959 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD PUSH2 0x1D62 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F39 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x2188 DUP3 DUP6 PUSH2 0x1F4D JUMP JUMPDEST PUSH2 0x1D62 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F4D JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4D3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x1A1197A7B0C64F985E9F6CDC927F DUP10 RETURN SWAP3 0xD3 0xA6 0xA8 KECCAK256 0xD1 PUSH27 0xA8271FCC23C6619D64736F6C634300081A00330000000000000000 ",
							"sourceMap": "428:14412:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;:::i;:::-;;:::i;:::-;;;566:14:10;;559:22;541:41;;529:2;514:18;2565:202:0;;;;;;;;12416:432:9;;;;;;:::i;:::-;;:::i;:::-;;610:35;;;;;-1:-1:-1;;;;;610:35:9;;;;;;-1:-1:-1;;;;;1433:32:10;;;1415:51;;1403:2;1388:18;610:35:9;1247:225:10;808:45:9;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;808:45:9;;;5417:177;;;;;;:::i;:::-;;:::i;3810:120:0:-;;;;;;:::i;:::-;3875:7;3901:12;;;;;;;;;;:22;;;;3810:120;;;;2314:25:10;;;2302:2;2287:18;3810:120:0;2168:177:10;10543:154:9;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4226:136:0:-;;;;;;:::i;:::-;;:::i;5328:245::-;;;;;;:::i;:::-;;:::i;8405:632:9:-;;;;;;:::i;:::-;;:::i;3468:1268::-;;;;;;:::i;:::-;;:::i;6066:522::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;490:74::-;;534:30;490:74;;11862:295;;;;;;:::i;:::-;;:::i;11270:233::-;;;;;;:::i;:::-;;:::i;7844:381::-;;;;;;:::i;:::-;;:::i;571:33::-;;;;;-1:-1:-1;;;;;571:33:9;;;2854:136:0;;;;;;:::i;:::-;;:::i;2187:49::-;;2232:4;2187:49;;10024:135:9;10114:12;;10137:13;;10024:135;;;-1:-1:-1;;;;;10114:12:9;;;8181:51:10;;10137:13:9;;;;8263:2:10;8248:18;;8241:60;8154:18;10024:135:9;8007:300:10;4950:296:9;;;;;;:::i;:::-;;:::i;9325:552::-;;;;;;:::i;:::-;;:::i;11619:101::-;;;:::i;5774:110::-;;;;;;:::i;:::-;-1:-1:-1;;;;;5861:16:9;5833:9;5861:16;;;:10;:16;;;;;;;;;5774:110;;;;;;;;:::i;10856:245::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10281:93::-;10355:5;:12;10281:93;;4642:138:0;;;;;;:::i;:::-;;:::i;6763:162:9:-;;;;;;:::i;:::-;;:::i;7113:535::-;;;;;;:::i;:::-;;:::i;2565:202:0:-;2650:4;-1:-1:-1;;;;;;2673:47:0;;-1:-1:-1;;;2673:47:0;;:87;;-1:-1:-1;;;;;;;;;;861:40:4;;;2724:36:0;2666:94;2565:202;-1:-1:-1;;2565:202:0:o;12416:432:9:-;-1:-1:-1;;;;;12495:18:9;;;;;;:41;;-1:-1:-1;;;;;;12517:19:9;;;;12495:41;12487:71;;;;-1:-1:-1;;;12487:71:9;;9585:2:10;12487:71:9;;;9567:21:10;9624:2;9604:18;;;9597:30;-1:-1:-1;;;9643:18:10;;;9636:47;9700:18;;12487:71:9;;;;;;;;;-1:-1:-1;;;;;12576:17:9;;;12612:1;12576:17;;;:11;:17;;;;;:24;;12568:70;;;;-1:-1:-1;;;12568:70:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;12669:16:9;;;12697:1;12669:16;;;:10;:16;;;;;;;:30;12648:115;;;;-1:-1:-1;;;12648:115:9;;10279:2:10;12648:115:9;;;10261:21:10;10318:2;10298:18;;;10291:30;10357:34;10337:18;;;10330:62;-1:-1:-1;;;10408:18:10;;;10401:36;10454:19;;12648:115:9;10077:402:10;12648:115:9;-1:-1:-1;;;;;12774:16:9;;;;;;;:10;:16;;;;;;:24;;-1:-1:-1;;;;;;12774:24:9;;;;;;;;;12813:28;;;12774:16;12813:28;12416:432;;:::o;5417:177::-;-1:-1:-1;;;;;5484:17:9;;;5520:1;5484:17;;;:11;:17;;;;;:24;;5476:70;;;;-1:-1:-1;;;5476:70:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;5556:17:9;;;;;:11;:17;;;;;:24;;:31;;-1:-1:-1;;5556:31:9;;;;;5417:177::o;10543:154::-;-1:-1:-1;;;;;10671:19:9;;;;;;:11;:19;;;;;;;;;10664:26;;;;;;;;;;;;;;;;;10632:16;;10664:26;;;10671:19;10664:26;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10664:26:9;;;;;;;;;;;;;;;;;;;;;;;10543:154;;;:::o;4226:136:0:-;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;-1:-1:-1;;;;;5421:34:0;;735:10:3;5421:34:0;5417:102;;5478:30;;-1:-1:-1;;;5478:30:0;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;8405:632:9:-;-1:-1:-1;;;;;8495:17:9;;;8531:1;8495:17;;;:11;:17;;;;;:24;;8487:70;;;;-1:-1:-1;;;8487:70:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;8588:25:9;;8567:107;;;;-1:-1:-1;;;8567:107:9;;10686:2:10;8567:107:9;;;10668:21:10;10725:2;10705:18;;;10698:30;10764:34;10744:18;;;10737:62;-1:-1:-1;;;10815:18:10;;;10808:33;10858:19;;8567:107:9;10484:399:10;8567:107:9;-1:-1:-1;;;;;8711:17:9;;;8685:23;8711:17;;;:11;:17;;;;;:26;;;;;;8751:30;;;;8747:284;;-1:-1:-1;;;;;8801:29:9;;;8797:119;;8850:51;8879:15;8896:4;8850:28;:51::i;:::-;-1:-1:-1;;;;;8929:26:9;;;;;;;:13;:26;;;;;;;;:37;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8929:37:9;;;;;;;;8980:17;;:11;:17;;;;;;:26;:40;;;;;;;;8477:560;8405:632;;:::o;3468:1268::-;-1:-1:-1;;;;;3820:18:9;;3812:58;;;;-1:-1:-1;;;3812:58:9;;11090:2:10;3812:58:9;;;11072:21:10;11129:2;11109:18;;;11102:30;11168:29;11148:18;;;11141:57;11215:18;;3812:58:9;10888:351:10;3812:58:9;-1:-1:-1;;;;;3901:17:9;;;3937:1;3901:17;;;:11;:17;;;;;:24;;:38;3880:108;;;;-1:-1:-1;;;3880:108:9;;11446:2:10;3880:108:9;;;11428:21:10;11485:2;11465:18;;;11458:30;11524:25;11504:18;;;11497:53;11567:18;;3880:108:9;11244:347:10;3880:108:9;4019:528;;;;;;;;4068:6;-1:-1:-1;;;;;4019:528:9;;;;;4098:8;-1:-1:-1;;;;;4019:528:9;;;;;4134:15;4019:528;;;;4170:5;-1:-1:-1;;;;;4019:528:9;;;;;4200:9;-1:-1:-1;;;;;4019:528:9;;;;;4235:10;-1:-1:-1;;;;;4019:528:9;;;;;4275:14;-1:-1:-1;;;;;4019:528:9;;;;;4315:10;4019:528;;;;4353:12;4019:528;;;;4396:15;4019:528;;;;4435:8;4019:528;;;;;;;;:::i;:::-;;;4465:5;4019:528;;;;;;;;;;;;;-1:-1:-1;;;;;4019:528:9;;;;;;;;;;-1:-1:-1;3999:17:9;;;:11;:17;;;;;;;;:548;;;;;;;-1:-1:-1;;;;;;3999:548:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3999:548:9;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;3999:548:9;;;;;;;;;;;;;;-1:-1:-1;;3999:548:9;;;;;;;;;;;-1:-1:-1;;3999:548:9;;;-1:-1:-1;;3999:548:9;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3999:548:9;;;;;-1:-1:-1;;;;;3999:548:9;;;;;;;;;4557:11;:19;4569:6;-1:-1:-1;;;;;4557:19:9;-1:-1:-1;;;;;4557:19:9;;;;;;;;;;;;4582:4;4557:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4557:30:9;;;;;-1:-1:-1;;;;;4557:30:9;;;;;;4597:5;4608:4;4597:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4597:16:9;;;;;-1:-1:-1;;;;;4597:16:9;;;;;;4642:17;4623:10;:16;4634:4;-1:-1:-1;;;;;4623:16:9;-1:-1:-1;;;;;4623:16:9;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;4703:8;-1:-1:-1;;;;;4674:55:9;4695:6;-1:-1:-1;;;;;4674:55:9;4689:4;-1:-1:-1;;;;;4674:55:9;;4713:5;4720:8;4674:55;;;;;;;:::i;:::-;;;;;;;;3468:1268;;;;;;;;;;;:::o;6066:522::-;-1:-1:-1;;;;;6249:19:9;;6213:33;6249:19;;;:11;:19;;;;;;;;6213:55;;;;;;;;;;;;;;;;;6162:35;;6213:33;:55;;6249:19;6213:55;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6213:55:9;;;;;;;;;;;;;;;;;;;;;;;6278;6386:16;:23;6336:87;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6278:145;;6439:9;6434:124;6458:16;:23;6454:1;:27;6434:124;;;6515:11;:32;6527:16;6544:1;6527:19;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;6515:32:9;;;;;;;;;;;;;;;;-1:-1:-1;6515:32:9;6502:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6515:32;6502:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;6502:45:9;;;;;;:10;;;;6510:1;;6502:10;;;;;;:::i;:::-;;;;;;;;;;:45;6483:3;;6434:124;;;-1:-1:-1;6574:7:9;6066:522;-1:-1:-1;;;6066:522:9:o;11862:295::-;11954:39;2232:4:0;11982:10:9;11954:7;:39::i;:::-;11933:108;;;;-1:-1:-1;;;11933:108:9;;12369:2:10;11933:108:9;;;12351:21:10;12408:2;12388:18;;;12381:30;-1:-1:-1;;;12427:18:10;;;12420:52;12489:18;;11933:108:9;12167:346:10;11933:108:9;12051:44;534:30;12080:14;12051:9;:44::i;:::-;12105:45;2232:4:0;12135:14:9;12105:9;:45::i;:::-;11862:295;:::o;11270:233::-;-1:-1:-1;;;;;11372:16:9;;;11332:7;11372:16;;;:10;:16;;;;;;11332:7;;11372:16;11351:112;;;;-1:-1:-1;;;11351:112:9;;12720:2:10;11351:112:9;;;12702:21:10;12759:2;12739:18;;;12732:30;12798:34;12778:18;;;12771:62;-1:-1:-1;;;12849:18:10;;;12842:33;12892:19;;11351:112:9;12518:399:10;11351:112:9;-1:-1:-1;;;;;;11480:16:9;;;;;;;:10;:16;;;;;;;;11270:233::o;7844:381::-;-1:-1:-1;;;;;7909:17:9;;;7945:1;7909:17;;;:11;:17;;;;;:24;;7901:70;;;;-1:-1:-1;;;7901:70:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;7999:17:9;;;7982:14;7999:17;;;:11;:17;;;;;:24;;8033:40;7999:24;8011:4;8033:26;:40::i;:::-;8083:30;8108:4;8083:24;:30::i;:::-;-1:-1:-1;;;;;8131:17:9;;;;;;:11;:17;;;;;;;;8124:24;;-1:-1:-1;;;;;;8124:24:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8124:24:9;;;8165:16;;;;;;8158:23;;-1:-1:-1;;8158:23:9;;;8196:22;;;8131:17;8196:22;7891:334;7844:381;:::o;2854:136:0:-;2931:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;;;;2854:136::o;4950:296:9:-;-1:-1:-1;;;;;5036:17:9;;;5072:1;5036:17;;;:11;:17;;;;;:24;;5028:70;;;;-1:-1:-1;;;5028:70:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;5129:16:9;;5108:18;5129:16;;;:10;:16;;;;;;;;;;;5174:8;;-1:-1:-1;;5155:27:9;5129:16;5174:8;5155:27;;;;;;;;:::i;:::-;;;;;;5214:4;-1:-1:-1;;;;;5197:42:9;;5220:8;5230;5197:42;;;;;;;:::i;:::-;;;;;;;;5018:228;4950:296;;:::o;9325:552::-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;9487:27:9;::::1;9466:109;;;::::0;-1:-1:-1;;;9466:109:9;;13437:2:10;9466:109:9::1;::::0;::::1;13419:21:10::0;13476:2;13456:18;;;13449:30;13515:34;13495:18;;;13488:62;-1:-1:-1;;;13566:18:10;;;13559:33;13609:19;;9466:109:9::1;13235:399:10::0;9466:109:9::1;-1:-1:-1::0;;;;;9606:28:9;::::1;9585:111;;;::::0;-1:-1:-1;;;9585:111:9;;13841:2:10;9585:111:9::1;::::0;::::1;13823:21:10::0;13880:2;13860:18;;;13853:30;13919:34;13899:18;;;13892:62;-1:-1:-1;;;13970:18:10;;;13963:34;14014:19;;9585:111:9::1;13639:400:10::0;9585:111:9::1;9707:12;:43:::0;;-1:-1:-1;;;;;9707:43:9;;::::1;-1:-1:-1::0;;;;;;9707:43:9;;::::1;::::0;::::1;::::0;;;9760:13:::1;:46:::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;9822:48:::1;::::0;;8181:51:10;;;8263:2;8248:18;;8241:60;;;;9822:48:9::1;::::0;8154:18:10;9822:48:9::1;;;;;;;9325:552:::0;;;:::o;11619:101::-;11673:16;11708:5;11701:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11701:12:9;;;;;;;;;;;;;;;;;;;;;;;11619:101;:::o;10856:245::-;10941:33;;:::i;:::-;-1:-1:-1;;;;;10998:17:9;;;11034:1;10998:17;;;:11;:17;;;;;:24;;10990:70;;;;-1:-1:-1;;;10990:70:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;11077:17:9;;;;;;;:11;:17;;;;;;;;;11070:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11077:17;;11070:24;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;11070:24:9;;;;;;;;-1:-1:-1;;10856:245:9:o;4642:138:0:-;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;6763:162:9:-:0;-1:-1:-1;;;;;6895:23:9;;;;;;:13;:23;;;;;;;;;6888:30;;;;;;;;;;;;;;;;;6856:16;;6888:30;;;6895:23;6888:30;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6888:30:9;;;;;;;;;;;;;;;;;;;;;;6763:162;;;:::o;7113:535::-;-1:-1:-1;;;;;7299:23:9;;7261:35;7299:23;;;:13;:23;;;;;;;;7261:61;;;;;;;;;;;;;;;;;7210:35;;7261;:61;;7299:23;7261:61;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7261:61:9;;;;;;;;;;;;;;;;;;;;;;;7332:55;7440:18;:25;7390:89;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;7332:147;;7495:9;7490:128;7514:18;:25;7510:1;:29;7490:128;;;7573:11;:34;7585:18;7604:1;7585:21;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;7573:34:9;;;;;;;;;;;;;;;;-1:-1:-1;7573:34:9;7560:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7573:34;7560:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;7560:47:9;;;;;;:10;;;;7568:1;;7560:10;;;;;;:::i;:::-;;;;;;;;;;:47;7541:3;;7490:128;;3199:103:0;3265:30;3276:4;735:10:3;3265::0;:30::i;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:3;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6466:12;;6730:317;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:12;;;;;;;;;;;-1:-1:-1;;;;;6866:29:0;;;;;;;;;;:37;;-1:-1:-1;;6866:37:0;;;6922:40;735:10:3;;6866:12:0;;6922:40;;6898:5;6922:40;-1:-1:-1;6983:4:0;6976:11;;14412:426:9;-1:-1:-1;;;;;14545:23:9;;14512:13;14545:23;;;:13;:23;;;;;14528:47;;14570:4;14528:16;:47::i;:::-;-1:-1:-1;;;;;14597:23:9;;;;;;:13;:23;;;;;:30;14512:63;;-1:-1:-1;14589:38:9;;14585:247;;;-1:-1:-1;;;;;14663:23:9;;14643:17;14663:23;;;:13;:23;;;;;:30;:34;;14696:1;;14663:34;:::i;:::-;-1:-1:-1;;;;;14744:23:9;;;;;;:13;:23;;;;;:34;;14643:54;;-1:-1:-1;14744:23:9;14643:54;;14744:34;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;14711:23:9;;;;;:13;:23;;;;;;;:30;;14744:34;;;;;14711:23;14735:5;;14711:30;;;;;;:::i;:::-;;;;;;;;;;;;;:67;;-1:-1:-1;;;;;;14711:67:9;-1:-1:-1;;;;;14711:67:9;;;;;;14792:23;;;;;:13;:23;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;14792:29:9;;;;;-1:-1:-1;;;;;;14792:29:9;;;;;;-1:-1:-1;14502:336:9;14412:426;;:::o;13056:314::-;-1:-1:-1;;;;;13173:19:9;;13140:13;13173:19;;;:11;:19;;;;;13156:43;;13194:4;13156:16;:43::i;:::-;-1:-1:-1;;;;;13229:19:9;;13209:17;13229:19;;;:11;:19;;;;;:26;13140:59;;-1:-1:-1;13209:17:9;13229:30;;13258:1;;13229:30;:::i;:::-;-1:-1:-1;;;;;13298:19:9;;;;;;:11;:19;;;;;:30;;13209:50;;-1:-1:-1;13298:19:9;13209:50;;13298:30;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;13269:19:9;;;;;:11;:19;;;;;;;:26;;13298:30;;;;;13269:19;13289:5;;13269:26;;;;;;:::i;:::-;;;;;;;;;;;;;:59;;-1:-1:-1;;;;;;13269:59:9;-1:-1:-1;;;;;13269:59:9;;;;;;13338:19;;;;;:11;:19;;;;;;:25;;;;;;;:::i;13493:226::-;13559:13;13575:29;13592:5;13599:4;13575:16;:29::i;:::-;13634:5;:12;13559:45;;-1:-1:-1;13614:17:9;;13634:16;;13649:1;;13634:16;:::i;:::-;13614:36;;13675:5;13681:9;13675:16;;;;;;;;:::i;:::-;;;;;;;;;;;13660:5;:12;;-1:-1:-1;;;;;13675:16:9;;;;13666:5;;13660:12;;;;;;:::i;:::-;;;;;;;;;:31;;;;;-1:-1:-1;;;;;13660:31:9;;;;;-1:-1:-1;;;;;13660:31:9;;;;;;13701:5;:11;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;13701:11:9;;;;;-1:-1:-1;;;;;;13701:11:9;;;;;;-1:-1:-1;;;13493:226:9:o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3565:47;;-1:-1:-1;;;3565:47:0;;-1:-1:-1;;;;;14598:32:10;;3565:47:0;;;14580:51:10;14647:18;;;14640:34;;;14553:18;;3565:47:0;14406:274:10;3515:108:0;3432:197;;:::o;13932:299:9:-;14045:7;;14068:100;14092:12;;14088:16;;14068:100;;;14141:6;-1:-1:-1;;;;;14129:18:9;:5;14135:1;14129:8;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;14129:8:9;:18;14125:32;;14156:1;-1:-1:-1;14149:8:9;;14125:32;14106:3;;14068:100;;;-1:-1:-1;;;14184:17:9;13932:299;-1:-1:-1;;;13932:299:9:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:10:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:10;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:10:o;593:131::-;-1:-1:-1;;;;;668:31:10;;658:42;;648:70;;714:1;711;704:12;729:388;797:6;805;858:2;846:9;837:7;833:23;829:32;826:52;;;874:1;871;864:12;826:52;913:9;900:23;932:31;957:5;932:31;:::i;:::-;982:5;-1:-1:-1;1039:2:10;1024:18;;1011:32;1052:33;1011:32;1052:33;:::i;:::-;1104:7;1094:17;;;729:388;;;;;:::o;1477:247::-;1536:6;1589:2;1577:9;1568:7;1564:23;1560:32;1557:52;;;1605:1;1602;1595:12;1557:52;1644:9;1631:23;1663:31;1688:5;1663:31;:::i;1937:226::-;1996:6;2049:2;2037:9;2028:7;2024:23;2020:32;2017:52;;;2065:1;2062;2055:12;2017:52;-1:-1:-1;2110:23:10;;1937:226;-1:-1:-1;1937:226:10:o;2350:637::-;2540:2;2552:21;;;2622:13;;2525:18;;;2644:22;;;2492:4;;2723:15;;;2697:2;2682:18;;;2492:4;2766:195;2780:6;2777:1;2774:13;2766:195;;;2845:13;;-1:-1:-1;;;;;2841:39:10;2829:52;;2910:2;2936:15;;;;2901:12;;;;2877:1;2795:9;2766:195;;;-1:-1:-1;2978:3:10;;2350:637;-1:-1:-1;;;;;2350:637:10:o;2992:367::-;3060:6;3068;3121:2;3109:9;3100:7;3096:23;3092:32;3089:52;;;3137:1;3134;3127:12;3089:52;3182:23;;;-1:-1:-1;3281:2:10;3266:18;;3253:32;3294:33;3253:32;3294:33;:::i;3364:149::-;3438:20;;3487:1;3477:12;;3467:40;;3503:1;3500;3493:12;3467:40;3364:149;;;:::o;3518:1639::-;3721:6;3729;3737;3745;3753;3761;3769;3777;3785;3793;3801:7;3855:3;3843:9;3834:7;3830:23;3826:33;3823:53;;;3872:1;3869;3862:12;3823:53;3911:9;3898:23;3930:31;3955:5;3930:31;:::i;:::-;3980:5;-1:-1:-1;4037:2:10;4022:18;;4009:32;4050:33;4009:32;4050:33;:::i;:::-;4102:7;-1:-1:-1;4161:2:10;4146:18;;4133:32;4174:33;4133:32;4174:33;:::i;:::-;4226:7;-1:-1:-1;4285:2:10;4270:18;;4257:32;4298:33;4257:32;4298:33;:::i;:::-;4350:7;-1:-1:-1;4409:3:10;4394:19;;4381:33;4423;4381;4423;:::i;:::-;4475:7;-1:-1:-1;4555:3:10;4540:19;;4527:33;4569;4527;4569;:::i;:::-;4621:7;-1:-1:-1;4701:3:10;4686:19;;4673:33;4715;4673;4715;:::i;:::-;4767:7;-1:-1:-1;4847:3:10;4832:19;;4819:33;;-1:-1:-1;4951:3:10;4936:19;;4923:33;;-1:-1:-1;5055:3:10;5040:19;;5027:33;;-1:-1:-1;5106:45:10;5146:3;5131:19;;5106:45;:::i;:::-;5095:56;;3518:1639;;;;;;;;;;;;;;:::o;5162:127::-;5223:10;5218:3;5214:20;5211:1;5204:31;5254:4;5251:1;5244:15;5278:4;5275:1;5268:15;5294:139;5374:1;5367:5;5364:12;5354:46;;5380:18;;:::i;:::-;5409;;5294:139::o;5438:140::-;5519:1;5512:5;5509:12;5499:46;;5525:18;;:::i;5583:1491::-;5683:12;;-1:-1:-1;;;;;1204:31:10;1192:44;;5747:4;5740:5;5736:16;5730:23;5762:64;5820:4;5815:3;5811:14;5797:12;-1:-1:-1;;;;;1204:31:10;1192:44;;1122:120;5762:64;;5875:4;5868:5;5864:16;5858:23;5851:4;5846:3;5842:14;5835:47;5930:4;5923:5;5919:16;5913:23;5945:66;6005:4;6000:3;5996:14;5980;-1:-1:-1;;;;;1204:31:10;1192:44;;1122:120;5945:66;;6059:4;6052:5;6048:16;6042:23;6074:66;6134:4;6129:3;6125:14;6109;-1:-1:-1;;;;;1204:31:10;1192:44;;1122:120;6074:66;;6188:4;6181:5;6177:16;6171:23;6203:66;6263:4;6258:3;6254:14;6238;-1:-1:-1;;;;;1204:31:10;1192:44;;1122:120;6203:66;;6317:4;6310:5;6306:16;6300:23;6332:66;6392:4;6387:3;6383:14;6367;-1:-1:-1;;;;;1204:31:10;1192:44;;1122:120;6332:66;;6447:4;6440:5;6436:16;6430:23;6423:4;6418:3;6414:14;6407:47;6505:6;6498:5;6494:18;6488:25;6479:6;6474:3;6470:16;6463:51;6565:6;6558:5;6554:18;6548:25;6539:6;6534:3;6530:16;6523:51;6622:6;6615:5;6611:18;6605:25;6639:58;6689:6;6684:3;6680:16;6664:14;6639:58;:::i;:::-;;6745:6;6738:5;6734:18;6728:25;6762:49;6803:6;6798:3;6794:16;6778:14;375:13;368:21;356:34;;305:91;6762:49;;6859:6;6852:5;6848:18;6842:25;6876:59;6927:6;6922:3;6918:16;6902:14;6876:59;:::i;:::-;;6983:6;6976:5;6972:18;6966:25;7000:68;7060:6;7055:3;7051:16;7035:14;-1:-1:-1;;;;;1204:31:10;1192:44;;1122:120;7079:694;7325:2;7337:21;;;7407:13;;7310:18;;;7429:22;;;7277:4;;7508:15;;;7482:2;7467:18;;;7277:4;7551:196;7565:6;7562:1;7559:13;7551:196;;;7614:49;7659:3;7650:6;7644:13;7614:49;:::i;:::-;7734:2;7722:15;;;;;7692:6;7683:16;;;;;7587:1;7580:9;7551:196;;8312:410;8393:6;8401;8454:2;8442:9;8433:7;8429:23;8425:32;8422:52;;;8470:1;8467;8460:12;8422:52;8509:9;8496:23;8528:31;8553:5;8528:31;:::i;:::-;8578:5;-1:-1:-1;8635:2:10;8620:18;;8607:32;8670:1;8658:14;;8648:42;;8686:1;8683;8676:12;8727:207;8872:2;8857:18;;8884:44;8861:9;8910:6;8884:44;:::i;8939:257::-;9129:3;9114:19;;9142:48;9118:9;9172:6;9142:48;:::i;9729:343::-;9931:2;9913:21;;;9970:2;9950:18;;;9943:30;-1:-1:-1;;;10004:2:10;9989:18;;9982:49;10063:2;10048:18;;9729:343::o;11596:302::-;-1:-1:-1;;;;;11798:32:10;;11780:51;;11768:2;11753:18;;11840:52;11888:2;11873:18;;11865:6;11840:52;:::i;11903:127::-;11964:10;11959:3;11955:20;11952:1;11945:31;11995:4;11992:1;11985:15;12019:4;12016:1;12009:15;12035:127;12096:10;12091:3;12087:20;12084:1;12077:31;12127:4;12124:1;12117:15;12151:4;12148:1;12141:15;12922:308;13106:2;13091:18;;13118:44;13095:9;13144:6;13118:44;:::i;:::-;13171:53;13220:2;13209:9;13205:18;13197:6;13171:53;:::i;14044:225::-;14111:9;;;14132:11;;;14129:134;;;14185:10;14180:3;14176:20;14173:1;14166:31;14220:4;14217:1;14210:15;14248:4;14245:1;14238:15;14274:127;14335:10;14330:3;14326:20;14323:1;14316:31;14366:4;14363:1;14356:15;14390:4;14387:1;14380:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1740400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "260",
								"POOL_MANAGER_ROLE()": "283",
								"deregisterPool(address)": "infinite",
								"getAllLenderPoolDetails(address)": "infinite",
								"getAllPoolAddresses()": "infinite",
								"getBorrowerPoolDetails(address)": "infinite",
								"getLoanState(address)": "2704",
								"getManagers()": "4519",
								"getPoolDetails(address)": "infinite",
								"getPoolsByBorrower(address)": "infinite",
								"getPoolsByLender(address)": "infinite",
								"getRoleAdmin(bytes32)": "2534",
								"getTotalPools()": "2335",
								"getVaultForPool(address)": "4833",
								"grantFactoryAccess(address)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "2692",
								"markPoolAsFunded(address)": "26884",
								"poolVaults(address)": "2595",
								"registerManagers(address,address)": "infinite",
								"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)": "infinite",
								"registerVault(address,address)": "infinite",
								"renounceRole(bytes32,address)": "29085",
								"revokeRole(bytes32,address)": "infinite",
								"rewardManager()": "2427",
								"setBorrowerForPool(address,address)": "infinite",
								"supportsInterface(bytes4)": "470",
								"updateLoanState(address,uint8)": "infinite",
								"vaultManager()": "2426"
							},
							"internal": {
								"_removePoolFromBorrowerArray(address,address)": "infinite",
								"_removePoolFromLenderArray(address,address)": "infinite",
								"_removePoolFromMainArray(address)": "infinite",
								"findIndexInArray(address[] storage pointer,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 428,
									"end": 14840,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 428,
									"end": 14840,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 428,
									"end": 14840,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2611,
									"end": 2735,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 2611,
									"end": 2735,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2611,
									"end": 2735,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2611,
									"end": 2735,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2611,
									"end": 2735,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2611,
									"end": 2735,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2611,
									"end": 2735,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2611,
									"end": 2735,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2611,
									"end": 2735,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2611,
									"end": 2735,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2666,
									"end": 2676,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 2635,
									"end": 2645,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2635,
									"end": 2677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "tag",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2635,
									"end": 2677,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2687,
									"end": 2728,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 534,
									"end": 564,
									"name": "PUSH",
									"source": 9,
									"value": "6077685936C8169D09204A1D97DB12E41713588C38E1D29A61867D3DCEE98AFF"
								},
								{
									"begin": 2717,
									"end": 2727,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 2697,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2687,
									"end": 2728,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 2728,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2687,
									"end": 2728,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 2728,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 428,
									"end": 14840,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 428,
									"end": 14840,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 428,
									"end": 14840,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 428,
									"end": 14840,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 428,
									"end": 14840,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 428,
									"end": 14840,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 428,
									"end": 14840,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 428,
									"end": 14840,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 428,
									"end": 14840,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 428,
									"end": 14840,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 428,
									"end": 14840,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206d1a1197a7b0c64f985e9f6cdc927f89f392d3a6a820d17aa8271fcc23c6619d64736f6c634300081a0033",
									".code": [
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "7570E389"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "C489579D"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "D3FFE67A"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "D3FFE67A"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "D547741F"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "E7EF32F7"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "EC209544"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "C489579D"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "C56F1B44"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "C81C3BEF"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "D3E90FA0"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "91D14854"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "91D14854"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "A217FDDF"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "A8D088BB"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "A956239B"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "7570E389"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "7E72C7D7"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "8A4ADF24"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "2F2FF15D"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "43756020"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "43756020"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "52FC9B0E"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "56D73568"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "5D102DF7"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "2F2FF15D"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "36568ABE"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "37E238C5"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "1E4966AB"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "1E4966AB"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "1F2F2E14"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "248A9CA3"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "24A44EFB"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A7"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "5C4FDF9"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "F4EF8A6"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 14840,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 566,
											"end": 580,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 566,
											"end": 580,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 559,
											"end": 581,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 541,
											"end": 582,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 541,
											"end": 582,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 529,
											"end": 531,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 514,
											"end": 532,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12416,
											"end": 12848,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12416,
											"end": 12848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12416,
											"end": 12848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 12416,
											"end": 12848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 12416,
											"end": 12848,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 12416,
											"end": 12848,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12416,
											"end": 12848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 12416,
											"end": 12848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12416,
											"end": 12848,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 12416,
											"end": 12848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12416,
											"end": 12848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 12416,
											"end": 12848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12416,
											"end": 12848,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 12416,
											"end": 12848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12416,
											"end": 12848,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 610,
											"end": 645,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 610,
											"end": 645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 610,
											"end": 645,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 610,
											"end": 645,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 610,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 610,
											"end": 645,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 610,
											"end": 645,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 610,
											"end": 645,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 610,
											"end": 645,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 610,
											"end": 645,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 610,
											"end": 645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 610,
											"end": 645,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 610,
											"end": 645,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1433,
											"end": 1465,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1433,
											"end": 1465,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1433,
											"end": 1465,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1415,
											"end": 1466,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1403,
											"end": 1405,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 610,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1247,
											"end": 1472,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 808,
											"end": 853,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 808,
											"end": 853,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 808,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 808,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 808,
											"end": 853,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 808,
											"end": 853,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 808,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 808,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 808,
											"end": 853,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 808,
											"end": 853,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 808,
											"end": 853,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 808,
											"end": 853,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 808,
											"end": 853,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 808,
											"end": 853,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 853,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 808,
											"end": 853,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 808,
											"end": 853,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 808,
											"end": 853,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 808,
											"end": 853,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 808,
											"end": 853,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 808,
											"end": 853,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 808,
											"end": 853,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 808,
											"end": 853,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 808,
											"end": 853,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5417,
											"end": 5594,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 5417,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5417,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 5417,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5417,
											"end": 5594,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5417,
											"end": 5594,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5417,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 5417,
											"end": 5594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5417,
											"end": 5594,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5417,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5417,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 5417,
											"end": 5594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2339,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2339,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2339,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2304,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2305,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2168,
											"end": 2345,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10543,
											"end": 10697,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 10543,
											"end": 10697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10543,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 10543,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 10543,
											"end": 10697,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 10543,
											"end": 10697,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10543,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 10543,
											"end": 10697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10543,
											"end": 10697,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 10543,
											"end": 10697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10543,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 10543,
											"end": 10697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10543,
											"end": 10697,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 10543,
											"end": 10697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10543,
											"end": 10697,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10543,
											"end": 10697,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10543,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 10543,
											"end": 10697,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10543,
											"end": 10697,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10543,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 10543,
											"end": 10697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8405,
											"end": 9037,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 8405,
											"end": 9037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8405,
											"end": 9037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 8405,
											"end": 9037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 8405,
											"end": 9037,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8405,
											"end": 9037,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8405,
											"end": 9037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 8405,
											"end": 9037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8405,
											"end": 9037,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 8405,
											"end": 9037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8405,
											"end": 9037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 8405,
											"end": 9037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3468,
											"end": 4736,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 3468,
											"end": 4736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3468,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 3468,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3468,
											"end": 4736,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3468,
											"end": 4736,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3468,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 3468,
											"end": 4736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3468,
											"end": 4736,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3468,
											"end": 4736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3468,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 3468,
											"end": 4736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6588,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 6066,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 6066,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 6066,
											"end": 6588,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6588,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6066,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 6066,
											"end": 6588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6588,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 6066,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 6066,
											"end": 6588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6588,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 6066,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6588,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6066,
											"end": 6588,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 6066,
											"end": 6588,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6588,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 6066,
											"end": 6588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 490,
											"end": 564,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 490,
											"end": 564,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 490,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 534,
											"end": 564,
											"name": "PUSH",
											"source": 9,
											"value": "6077685936C8169D09204A1D97DB12E41713588C38E1D29A61867D3DCEE98AFF"
										},
										{
											"begin": 490,
											"end": 564,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 490,
											"end": 564,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11862,
											"end": 12157,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 11862,
											"end": 12157,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11862,
											"end": 12157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 11862,
											"end": 12157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 11862,
											"end": 12157,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 11862,
											"end": 12157,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11862,
											"end": 12157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 11862,
											"end": 12157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11862,
											"end": 12157,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 11862,
											"end": 12157,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11862,
											"end": 12157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 11862,
											"end": 12157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11270,
											"end": 11503,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 11270,
											"end": 11503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11270,
											"end": 11503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 11270,
											"end": 11503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 11270,
											"end": 11503,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 11270,
											"end": 11503,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11270,
											"end": 11503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 11270,
											"end": 11503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11270,
											"end": 11503,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 11270,
											"end": 11503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11270,
											"end": 11503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11270,
											"end": 11503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 8225,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 7844,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 8225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 7844,
											"end": 8225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 7844,
											"end": 8225,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 8225,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7844,
											"end": 8225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 7844,
											"end": 8225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 8225,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 7844,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 8225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 7844,
											"end": 8225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 571,
											"end": 604,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 571,
											"end": 604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 571,
											"end": 604,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 571,
											"end": 604,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 571,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 571,
											"end": 604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 571,
											"end": 604,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 571,
											"end": 604,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 571,
											"end": 604,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10024,
											"end": 10159,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 10024,
											"end": 10159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10114,
											"end": 10126,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10114,
											"end": 10126,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10137,
											"end": 10150,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 10137,
											"end": 10150,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10024,
											"end": 10159,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10024,
											"end": 10159,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10024,
											"end": 10159,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10114,
											"end": 10126,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10114,
											"end": 10126,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10114,
											"end": 10126,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8181,
											"end": 8232,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8181,
											"end": 8232,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10137,
											"end": 10150,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10137,
											"end": 10150,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10137,
											"end": 10150,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10137,
											"end": 10150,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8263,
											"end": 8265,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8248,
											"end": 8266,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8248,
											"end": 8266,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8301,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8172,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10024,
											"end": 10159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 8007,
											"end": 8307,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5246,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 4950,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 4950,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 4950,
											"end": 5246,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 5246,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4950,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 4950,
											"end": 5246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 5246,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 4950,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 4950,
											"end": 5246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9325,
											"end": 9877,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9325,
											"end": 9877,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9325,
											"end": 9877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 9325,
											"end": 9877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 9325,
											"end": 9877,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9325,
											"end": 9877,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9325,
											"end": 9877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 9325,
											"end": 9877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9325,
											"end": 9877,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 9325,
											"end": 9877,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9325,
											"end": 9877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 9325,
											"end": 9877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11619,
											"end": 11720,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 11619,
											"end": 11720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11619,
											"end": 11720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 11619,
											"end": 11720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 11619,
											"end": 11720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5774,
											"end": 5884,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 5774,
											"end": 5884,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5774,
											"end": 5884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 5774,
											"end": 5884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 5774,
											"end": 5884,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5774,
											"end": 5884,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5774,
											"end": 5884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 5774,
											"end": 5884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5774,
											"end": 5884,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 5774,
											"end": 5884,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5861,
											"end": 5877,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5833,
											"end": 5842,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5861,
											"end": 5877,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5877,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5877,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5871,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 5861,
											"end": 5877,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5861,
											"end": 5877,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5877,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5861,
											"end": 5877,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5877,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5877,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5877,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5861,
											"end": 5877,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5877,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5774,
											"end": 5884,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5774,
											"end": 5884,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 5774,
											"end": 5884,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5774,
											"end": 5884,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5774,
											"end": 5884,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5774,
											"end": 5884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 5774,
											"end": 5884,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5774,
											"end": 5884,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5774,
											"end": 5884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 5774,
											"end": 5884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10856,
											"end": 11101,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 10856,
											"end": 11101,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10856,
											"end": 11101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 10856,
											"end": 11101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 10856,
											"end": 11101,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 10856,
											"end": 11101,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10856,
											"end": 11101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 10856,
											"end": 11101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10856,
											"end": 11101,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 10856,
											"end": 11101,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10856,
											"end": 11101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 10856,
											"end": 11101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10856,
											"end": 11101,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 10856,
											"end": 11101,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10856,
											"end": 11101,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10856,
											"end": 11101,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10856,
											"end": 11101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 10856,
											"end": 11101,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10856,
											"end": 11101,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10856,
											"end": 11101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 10856,
											"end": 11101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10281,
											"end": 10374,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 10281,
											"end": 10374,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10355,
											"end": 10360,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 10355,
											"end": 10367,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10281,
											"end": 10374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 10281,
											"end": 10374,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6763,
											"end": 6925,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 6763,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 6763,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 6763,
											"end": 6925,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6925,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6763,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 6763,
											"end": 6925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6925,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 6763,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 6763,
											"end": 6925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7113,
											"end": 7648,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 7113,
											"end": 7648,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7113,
											"end": 7648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 7113,
											"end": 7648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 7113,
											"end": 7648,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7113,
											"end": 7648,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7113,
											"end": 7648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 7113,
											"end": 7648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7113,
											"end": 7648,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 7113,
											"end": 7648,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7113,
											"end": 7648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 7113,
											"end": 7648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 861,
											"end": 901,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12416,
											"end": 12848,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 12416,
											"end": 12848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 12495,
											"end": 12536,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12517,
											"end": 12536,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12517,
											"end": 12536,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12517,
											"end": 12536,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12517,
											"end": 12536,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12536,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 12495,
											"end": 12536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12487,
											"end": 12558,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 12487,
											"end": 12558,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12487,
											"end": 12558,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12487,
											"end": 12558,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12487,
											"end": 12558,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12487,
											"end": 12558,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9585,
											"end": 9587,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12487,
											"end": 12558,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12487,
											"end": 12558,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12487,
											"end": 12558,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9567,
											"end": 9588,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9624,
											"end": 9626,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 9604,
											"end": 9622,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9604,
											"end": 9622,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9604,
											"end": 9622,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9597,
											"end": 9627,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420616464726573736573"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9643,
											"end": 9661,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9643,
											"end": 9661,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9643,
											"end": 9661,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9636,
											"end": 9683,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9700,
											"end": 9718,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9700,
											"end": 9718,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12487,
											"end": 12558,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 12487,
											"end": 12558,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12487,
											"end": 12558,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12487,
											"end": 12558,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12487,
											"end": 12558,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12487,
											"end": 12558,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12487,
											"end": 12558,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12487,
											"end": 12558,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12487,
											"end": 12558,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12487,
											"end": 12558,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 12487,
											"end": 12558,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12576,
											"end": 12593,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12576,
											"end": 12593,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12576,
											"end": 12593,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12612,
											"end": 12613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12576,
											"end": 12593,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12576,
											"end": 12593,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12576,
											"end": 12593,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12576,
											"end": 12587,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12576,
											"end": 12593,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12576,
											"end": 12593,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12576,
											"end": 12593,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12576,
											"end": 12593,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12576,
											"end": 12593,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12576,
											"end": 12600,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12576,
											"end": 12600,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12568,
											"end": 12638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 12568,
											"end": 12638,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12568,
											"end": 12638,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12568,
											"end": 12638,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12568,
											"end": 12638,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12568,
											"end": 12638,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12568,
											"end": 12638,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12568,
											"end": 12638,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12568,
											"end": 12638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 12568,
											"end": 12638,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12568,
											"end": 12638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 12568,
											"end": 12638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12568,
											"end": 12638,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 12568,
											"end": 12638,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12669,
											"end": 12685,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12669,
											"end": 12685,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12669,
											"end": 12685,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12697,
											"end": 12698,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12669,
											"end": 12685,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12669,
											"end": 12685,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12669,
											"end": 12685,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12669,
											"end": 12679,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 12669,
											"end": 12685,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12669,
											"end": 12685,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12669,
											"end": 12685,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12669,
											"end": 12685,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12669,
											"end": 12685,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12669,
											"end": 12685,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12669,
											"end": 12685,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12669,
											"end": 12699,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12648,
											"end": 12763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 12648,
											"end": 12763,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12648,
											"end": 12763,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12648,
											"end": 12763,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12648,
											"end": 12763,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12648,
											"end": 12763,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10279,
											"end": 10281,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12648,
											"end": 12763,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12648,
											"end": 12763,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12648,
											"end": 12763,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10261,
											"end": 10282,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10318,
											"end": 10320,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 10298,
											"end": 10316,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10298,
											"end": 10316,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10298,
											"end": 10316,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10291,
											"end": 10321,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10357,
											"end": 10391,
											"name": "PUSH",
											"source": 10,
											"value": "5661756C7420616C7265616479207265676973746572656420666F7220746869"
										},
										{
											"begin": 10337,
											"end": 10355,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10337,
											"end": 10355,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10337,
											"end": 10355,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10330,
											"end": 10392,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CC81C1BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10408,
											"end": 10426,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10408,
											"end": 10426,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10408,
											"end": 10426,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10401,
											"end": 10437,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10454,
											"end": 10473,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10454,
											"end": 10473,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12648,
											"end": 12763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 10077,
											"end": 10479,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12648,
											"end": 12763,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 12648,
											"end": 12763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12774,
											"end": 12790,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12774,
											"end": 12790,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12774,
											"end": 12790,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12774,
											"end": 12790,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12774,
											"end": 12790,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12774,
											"end": 12790,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12774,
											"end": 12790,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12774,
											"end": 12784,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 12774,
											"end": 12790,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12774,
											"end": 12790,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12774,
											"end": 12790,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12774,
											"end": 12790,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12774,
											"end": 12790,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12774,
											"end": 12790,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12774,
											"end": 12798,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12774,
											"end": 12798,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12774,
											"end": 12798,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12774,
											"end": 12798,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 12774,
											"end": 12798,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12774,
											"end": 12798,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12774,
											"end": 12798,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 12774,
											"end": 12798,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12774,
											"end": 12798,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 12774,
											"end": 12798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12774,
											"end": 12798,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 12813,
											"end": 12841,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12813,
											"end": 12841,
											"name": "PUSH",
											"source": 9,
											"value": "F8EE9039D8E4D43426638703C71517008894FDEA742BB2D2DBFF5A46FB07ABDB"
										},
										{
											"begin": 12813,
											"end": 12841,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12774,
											"end": 12790,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12813,
											"end": 12841,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 12416,
											"end": 12848,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12416,
											"end": 12848,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12416,
											"end": 12848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5417,
											"end": 5594,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 5417,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5484,
											"end": 5501,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5501,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5501,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5520,
											"end": 5521,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5501,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5501,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5501,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5495,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5484,
											"end": 5501,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5484,
											"end": 5501,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5501,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5484,
											"end": 5501,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5501,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5508,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5508,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5476,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 5476,
											"end": 5546,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5476,
											"end": 5546,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5476,
											"end": 5546,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5476,
											"end": 5546,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5476,
											"end": 5546,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5476,
											"end": 5546,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5476,
											"end": 5546,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5476,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 5476,
											"end": 5546,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5476,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 5476,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5476,
											"end": 5546,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 5476,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5556,
											"end": 5573,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5556,
											"end": 5573,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5556,
											"end": 5573,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5556,
											"end": 5573,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5556,
											"end": 5573,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5556,
											"end": 5567,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5556,
											"end": 5573,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5556,
											"end": 5573,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5556,
											"end": 5573,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5556,
											"end": 5573,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5556,
											"end": 5573,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5556,
											"end": 5580,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5556,
											"end": 5580,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5556,
											"end": 5587,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5556,
											"end": 5587,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5556,
											"end": 5587,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5556,
											"end": 5587,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5556,
											"end": 5587,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5556,
											"end": 5587,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5556,
											"end": 5587,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5417,
											"end": 5594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10543,
											"end": 10697,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 10543,
											"end": 10697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10671,
											"end": 10690,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10671,
											"end": 10690,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10671,
											"end": 10690,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10671,
											"end": 10690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10671,
											"end": 10690,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10671,
											"end": 10690,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10671,
											"end": 10682,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 10671,
											"end": 10690,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10671,
											"end": 10690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10671,
											"end": 10690,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10671,
											"end": 10690,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10671,
											"end": 10690,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10671,
											"end": 10690,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10671,
											"end": 10690,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10671,
											"end": 10690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10671,
											"end": 10690,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10632,
											"end": 10648,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 10632,
											"end": 10648,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10671,
											"end": 10690,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10664,
											"end": 10690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10543,
											"end": 10697,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10543,
											"end": 10697,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10543,
											"end": 10697,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10543,
											"end": 10697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8405,
											"end": 9037,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 8405,
											"end": 9037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8495,
											"end": 8512,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8495,
											"end": 8512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8495,
											"end": 8512,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8531,
											"end": 8532,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8495,
											"end": 8512,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8495,
											"end": 8512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8495,
											"end": 8512,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8495,
											"end": 8506,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8495,
											"end": 8512,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8495,
											"end": 8512,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8495,
											"end": 8512,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8495,
											"end": 8512,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8495,
											"end": 8512,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8495,
											"end": 8519,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8495,
											"end": 8519,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8487,
											"end": 8557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 8487,
											"end": 8557,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8487,
											"end": 8557,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8487,
											"end": 8557,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8487,
											"end": 8557,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8487,
											"end": 8557,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8487,
											"end": 8557,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8487,
											"end": 8557,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8487,
											"end": 8557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 8487,
											"end": 8557,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8487,
											"end": 8557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 8487,
											"end": 8557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8487,
											"end": 8557,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 8487,
											"end": 8557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8588,
											"end": 8613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8588,
											"end": 8613,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 8567,
											"end": 8674,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8674,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8567,
											"end": 8674,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8567,
											"end": 8674,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8674,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10686,
											"end": 10688,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8567,
											"end": 8674,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8567,
											"end": 8674,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8567,
											"end": 8674,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10668,
											"end": 10689,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10725,
											"end": 10727,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10698,
											"end": 10728,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10764,
											"end": 10798,
											"name": "PUSH",
											"source": 10,
											"value": "426F72726F7765722063616E6E6F7420626520746865207A65726F2061646472"
										},
										{
											"begin": 10744,
											"end": 10762,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10744,
											"end": 10762,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10744,
											"end": 10762,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10737,
											"end": 10799,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10815,
											"end": 10833,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10815,
											"end": 10833,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10815,
											"end": 10833,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10808,
											"end": 10841,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10858,
											"end": 10877,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10858,
											"end": 10877,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8567,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 10484,
											"end": 10883,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8567,
											"end": 8674,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 8567,
											"end": 8674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8711,
											"end": 8728,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8728,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8728,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8708,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8728,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8728,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8728,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8711,
											"end": 8728,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8711,
											"end": 8728,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8728,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8728,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8728,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8737,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8711,
											"end": 8737,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8737,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8737,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8737,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8737,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8751,
											"end": 8781,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8751,
											"end": 8781,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8751,
											"end": 8781,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8751,
											"end": 8781,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8747,
											"end": 9031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 8747,
											"end": 9031,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8801,
											"end": 8830,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8801,
											"end": 8830,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8801,
											"end": 8830,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8797,
											"end": 8916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 8797,
											"end": 8916,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8850,
											"end": 8901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 8879,
											"end": 8894,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8896,
											"end": 8900,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8850,
											"end": 8878,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 8850,
											"end": 8901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8850,
											"end": 8901,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 8850,
											"end": 8901,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8929,
											"end": 8955,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8955,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8955,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8955,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8929,
											"end": 8955,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8955,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8955,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8942,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 8929,
											"end": 8955,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8929,
											"end": 8955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8955,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8955,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8955,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8929,
											"end": 8955,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8955,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8955,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8929,
											"end": 8966,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8980,
											"end": 8991,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8980,
											"end": 9006,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8980,
											"end": 9020,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8980,
											"end": 9020,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8980,
											"end": 9020,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8980,
											"end": 9020,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8980,
											"end": 9020,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8980,
											"end": 9020,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 8980,
											"end": 9020,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8980,
											"end": 9020,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8477,
											"end": 9037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8405,
											"end": 9037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8405,
											"end": 9037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8405,
											"end": 9037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3468,
											"end": 4736,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 3468,
											"end": 4736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3812,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 3812,
											"end": 3870,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3812,
											"end": 3870,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3812,
											"end": 3870,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3812,
											"end": 3870,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3812,
											"end": 3870,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11090,
											"end": 11092,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3812,
											"end": 3870,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3812,
											"end": 3870,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3812,
											"end": 3870,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11072,
											"end": 11093,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11129,
											"end": 11131,
											"name": "PUSH",
											"source": 10,
											"value": "1B"
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11102,
											"end": 11132,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11168,
											"end": 11197,
											"name": "PUSH",
											"source": 10,
											"value": "506F6F6C20616464726573732063616E6E6F74206265207A65726F0000000000"
										},
										{
											"begin": 11148,
											"end": 11166,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11148,
											"end": 11166,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11148,
											"end": 11166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11141,
											"end": 11198,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11215,
											"end": 11233,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11215,
											"end": 11233,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3812,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 10888,
											"end": 11239,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3812,
											"end": 3870,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 3812,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3937,
											"end": 3938,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3912,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3925,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3925,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3939,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3880,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 3880,
											"end": 3988,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3880,
											"end": 3988,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3880,
											"end": 3988,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3880,
											"end": 3988,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3880,
											"end": 3988,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11446,
											"end": 11448,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3880,
											"end": 3988,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3880,
											"end": 3988,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3880,
											"end": 3988,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11428,
											"end": 11449,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11485,
											"end": 11487,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 11465,
											"end": 11483,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11465,
											"end": 11483,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11465,
											"end": 11483,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11458,
											"end": 11488,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11524,
											"end": 11549,
											"name": "PUSH",
											"source": 10,
											"value": "506F6F6C20616C72656164792072656769737465726564000000000000000000"
										},
										{
											"begin": 11504,
											"end": 11522,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11504,
											"end": 11522,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11504,
											"end": 11522,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11497,
											"end": 11550,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11567,
											"end": 11585,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11567,
											"end": 11585,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 11244,
											"end": 11591,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3880,
											"end": 3988,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 3880,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "1C0"
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4074,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4098,
											"end": 4106,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4134,
											"end": 4149,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4175,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4200,
											"end": 4209,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4245,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4275,
											"end": 4289,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4315,
											"end": 4325,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4353,
											"end": 4365,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4396,
											"end": 4411,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4435,
											"end": 4443,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 4019,
											"end": 4547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4465,
											"end": 4470,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4010,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 3999,
											"end": 4547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF0000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "10000"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 3999,
											"end": 4547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "1A0"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4568,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4557,
											"end": 4576,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4569,
											"end": 4575,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4557,
											"end": 4576,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4557,
											"end": 4576,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4576,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4576,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4576,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4557,
											"end": 4576,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4576,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4576,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4576,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4576,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4557,
											"end": 4576,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4576,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4576,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4582,
											"end": 4586,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4557,
											"end": 4587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4602,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4608,
											"end": 4612,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4613,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4642,
											"end": 4659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4633,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4623,
											"end": 4639,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4634,
											"end": 4638,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4639,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4639,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4639,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4639,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4623,
											"end": 4639,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4639,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4639,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4639,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4623,
											"end": 4639,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4639,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4639,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4639,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 4623,
											"end": 4659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4623,
											"end": 4659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4711,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4674,
											"end": 4729,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4695,
											"end": 4701,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4674,
											"end": 4729,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4689,
											"end": 4693,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4674,
											"end": 4729,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 4729,
											"name": "PUSH",
											"source": 9,
											"value": "8F723E49DC038E67C41B41307A1E0C65653D50125A0C474A21AC32D9A0B24D2B"
										},
										{
											"begin": 4713,
											"end": 4718,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 4720,
											"end": 4728,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 4729,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4674,
											"end": 4729,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 4674,
											"end": 4729,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 4729,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 4729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 4674,
											"end": 4729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 4729,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 4674,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 4729,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4674,
											"end": 4729,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 4729,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 4729,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 4729,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 4729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 4729,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 3468,
											"end": 4736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3468,
											"end": 4736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3468,
											"end": 4736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3468,
											"end": 4736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3468,
											"end": 4736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3468,
											"end": 4736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3468,
											"end": 4736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3468,
											"end": 4736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3468,
											"end": 4736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3468,
											"end": 4736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3468,
											"end": 4736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3468,
											"end": 4736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6588,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 6066,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6249,
											"end": 6268,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6249,
											"end": 6268,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6246,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6249,
											"end": 6268,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6249,
											"end": 6268,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6249,
											"end": 6268,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6249,
											"end": 6260,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6249,
											"end": 6268,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6249,
											"end": 6268,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6249,
											"end": 6268,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6249,
											"end": 6268,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6249,
											"end": 6268,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6249,
											"end": 6268,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6249,
											"end": 6268,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6249,
											"end": 6268,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6162,
											"end": 6197,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6162,
											"end": 6197,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6246,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6249,
											"end": 6268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6268,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6278,
											"end": 6333,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6386,
											"end": 6402,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6386,
											"end": 6409,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 6336,
											"end": 6423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 6336,
											"end": 6423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6278,
											"end": 6423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6278,
											"end": 6423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6439,
											"end": 6448,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6434,
											"end": 6558,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 6434,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6458,
											"end": 6474,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6458,
											"end": 6481,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6454,
											"end": 6455,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6454,
											"end": 6481,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6558,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 6434,
											"end": 6558,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6526,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6515,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6543,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6544,
											"end": 6545,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 6527,
											"end": 6546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6515,
											"end": 6547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6547,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6547,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6515,
											"end": 6547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6547,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "1C0"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 6502,
											"end": 6547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 6502,
											"end": 6547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "10000"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 6502,
											"end": 6547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 6502,
											"end": 6547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "1000000"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6510,
											"end": 6511,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6510,
											"end": 6511,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 6502,
											"end": 6512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6486,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6483,
											"end": 6486,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 6434,
											"end": 6558,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6558,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 6434,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6574,
											"end": 6581,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6588,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6066,
											"end": 6588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11862,
											"end": 12157,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 11862,
											"end": 12157,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11954,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11982,
											"end": 11992,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 11954,
											"end": 11961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 11954,
											"end": 11993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11954,
											"end": 11993,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 11954,
											"end": 11993,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11933,
											"end": 12041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 11933,
											"end": 12041,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11933,
											"end": 12041,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11933,
											"end": 12041,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11933,
											"end": 12041,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11933,
											"end": 12041,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12369,
											"end": 12371,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11933,
											"end": 12041,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11933,
											"end": 12041,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11933,
											"end": 12041,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12351,
											"end": 12372,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12408,
											"end": 12410,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 12388,
											"end": 12406,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12388,
											"end": 12406,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12388,
											"end": 12406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12381,
											"end": 12411,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21B0B63632B91034B9903737BA1030B71030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12427,
											"end": 12445,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12427,
											"end": 12445,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12427,
											"end": 12445,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12420,
											"end": 12472,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12489,
											"end": 12507,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12489,
											"end": 12507,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11933,
											"end": 12041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 12167,
											"end": 12513,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11933,
											"end": 12041,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 11933,
											"end": 12041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12051,
											"end": 12095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 534,
											"end": 564,
											"name": "PUSH",
											"source": 9,
											"value": "6077685936C8169D09204A1D97DB12E41713588C38E1D29A61867D3DCEE98AFF"
										},
										{
											"begin": 12080,
											"end": 12094,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12051,
											"end": 12060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 12051,
											"end": 12095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12051,
											"end": 12095,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 12051,
											"end": 12095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12105,
											"end": 12150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12135,
											"end": 12149,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12105,
											"end": 12114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 12105,
											"end": 12150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12105,
											"end": 12150,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 12105,
											"end": 12150,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11862,
											"end": 12157,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11862,
											"end": 12157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11270,
											"end": 11503,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11270,
											"end": 11503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11372,
											"end": 11388,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11372,
											"end": 11388,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11372,
											"end": 11388,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11332,
											"end": 11339,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11372,
											"end": 11388,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11372,
											"end": 11388,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11372,
											"end": 11388,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11372,
											"end": 11382,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 11372,
											"end": 11388,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11372,
											"end": 11388,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11372,
											"end": 11388,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11372,
											"end": 11388,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11372,
											"end": 11388,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11372,
											"end": 11388,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11332,
											"end": 11339,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11332,
											"end": 11339,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11372,
											"end": 11388,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11351,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 11351,
											"end": 11463,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11351,
											"end": 11463,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11351,
											"end": 11463,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11351,
											"end": 11463,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11351,
											"end": 11463,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12720,
											"end": 12722,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11351,
											"end": 11463,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11351,
											"end": 11463,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11351,
											"end": 11463,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12702,
											"end": 12723,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12759,
											"end": 12761,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 12739,
											"end": 12757,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12739,
											"end": 12757,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12739,
											"end": 12757,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12732,
											"end": 12762,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12798,
											"end": 12832,
											"name": "PUSH",
											"source": 10,
											"value": "506F6F6C206E6F742072656769737465726564206F7220686173206E6F207661"
										},
										{
											"begin": 12778,
											"end": 12796,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12778,
											"end": 12796,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12778,
											"end": 12796,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12771,
											"end": 12833,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D5B1D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12849,
											"end": 12867,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12849,
											"end": 12867,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12849,
											"end": 12867,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12842,
											"end": 12875,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12892,
											"end": 12911,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12892,
											"end": 12911,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11351,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 12518,
											"end": 12917,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11351,
											"end": 11463,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 11351,
											"end": 11463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11480,
											"end": 11496,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11480,
											"end": 11496,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11480,
											"end": 11496,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11480,
											"end": 11496,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11480,
											"end": 11496,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11480,
											"end": 11496,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11480,
											"end": 11496,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11480,
											"end": 11490,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 11480,
											"end": 11496,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11480,
											"end": 11496,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11480,
											"end": 11496,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11480,
											"end": 11496,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11480,
											"end": 11496,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11480,
											"end": 11496,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11480,
											"end": 11496,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11480,
											"end": 11496,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11270,
											"end": 11503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 8225,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 7844,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7909,
											"end": 7926,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7909,
											"end": 7926,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7909,
											"end": 7926,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 7946,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7909,
											"end": 7926,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7909,
											"end": 7926,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7909,
											"end": 7926,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7909,
											"end": 7920,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7909,
											"end": 7926,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7909,
											"end": 7926,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7909,
											"end": 7926,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7909,
											"end": 7926,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7909,
											"end": 7926,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7909,
											"end": 7933,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7909,
											"end": 7933,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7901,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 7901,
											"end": 7971,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7901,
											"end": 7971,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7901,
											"end": 7971,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7901,
											"end": 7971,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7901,
											"end": 7971,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7901,
											"end": 7971,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7901,
											"end": 7971,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7901,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 7901,
											"end": 7971,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7901,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 7901,
											"end": 7971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7901,
											"end": 7971,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 7901,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7999,
											"end": 8016,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7999,
											"end": 8016,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7999,
											"end": 8016,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7982,
											"end": 7996,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7999,
											"end": 8016,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7999,
											"end": 8016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7999,
											"end": 8016,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7999,
											"end": 8010,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7999,
											"end": 8016,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7999,
											"end": 8016,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7999,
											"end": 8016,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7999,
											"end": 8016,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7999,
											"end": 8016,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7999,
											"end": 8023,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7999,
											"end": 8023,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8033,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 7999,
											"end": 8023,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8011,
											"end": 8015,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8033,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 8033,
											"end": 8073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8033,
											"end": 8073,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 8033,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8083,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 8108,
											"end": 8112,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8083,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 8083,
											"end": 8113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8083,
											"end": 8113,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 8083,
											"end": 8113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8131,
											"end": 8148,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8131,
											"end": 8148,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8131,
											"end": 8148,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8148,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8131,
											"end": 8148,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8131,
											"end": 8148,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8131,
											"end": 8142,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8131,
											"end": 8148,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8131,
											"end": 8148,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8131,
											"end": 8148,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8131,
											"end": 8148,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8131,
											"end": 8148,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8131,
											"end": 8148,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8131,
											"end": 8148,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8131,
											"end": 8148,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8148,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8165,
											"end": 8181,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8165,
											"end": 8181,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8165,
											"end": 8181,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8165,
											"end": 8181,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8165,
											"end": 8181,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8165,
											"end": 8181,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8158,
											"end": 8181,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8158,
											"end": 8181,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8158,
											"end": 8181,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8158,
											"end": 8181,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8158,
											"end": 8181,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8218,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8218,
											"name": "PUSH",
											"source": 9,
											"value": "334D0B2111287DFDDEBE4B4C1C5AF3AE644909D7FCD024377BF601E236ED5ABB"
										},
										{
											"begin": 8196,
											"end": 8218,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8131,
											"end": 8148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8218,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 7891,
											"end": 8225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 8225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7844,
											"end": 8225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4950,
											"end": 5246,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 4950,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5036,
											"end": 5053,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5036,
											"end": 5053,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5036,
											"end": 5053,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5072,
											"end": 5073,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5036,
											"end": 5053,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5036,
											"end": 5053,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5036,
											"end": 5053,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5036,
											"end": 5047,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5036,
											"end": 5053,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5036,
											"end": 5053,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5036,
											"end": 5053,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5036,
											"end": 5053,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5036,
											"end": 5053,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5036,
											"end": 5060,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5036,
											"end": 5060,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5028,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 5028,
											"end": 5098,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5028,
											"end": 5098,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5028,
											"end": 5098,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5028,
											"end": 5098,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5028,
											"end": 5098,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5028,
											"end": 5098,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5028,
											"end": 5098,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5028,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 5028,
											"end": 5098,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5028,
											"end": 5098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 5028,
											"end": 5098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5028,
											"end": 5098,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 5028,
											"end": 5098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5129,
											"end": 5145,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5145,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5108,
											"end": 5126,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5129,
											"end": 5145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5145,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5145,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5139,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 5129,
											"end": 5145,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5129,
											"end": 5145,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5145,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5129,
											"end": 5145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5145,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5145,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5145,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5145,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5129,
											"end": 5145,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5145,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5145,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5174,
											"end": 5182,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5174,
											"end": 5182,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5155,
											"end": 5182,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5145,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5174,
											"end": 5182,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5155,
											"end": 5182,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5155,
											"end": 5182,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5155,
											"end": 5182,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5155,
											"end": 5182,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5155,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 5155,
											"end": 5182,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5155,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 5155,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 5155,
											"end": 5182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5155,
											"end": 5182,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 5155,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5155,
											"end": 5182,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5155,
											"end": 5182,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5155,
											"end": 5182,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5155,
											"end": 5182,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5155,
											"end": 5182,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5214,
											"end": 5218,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5197,
											"end": 5239,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5197,
											"end": 5239,
											"name": "PUSH",
											"source": 9,
											"value": "A61679A80E33B8CCD7049ED35B83F875349AA2875EF98CE5BA441A88761FB4E"
										},
										{
											"begin": 5220,
											"end": 5228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5230,
											"end": 5238,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5197,
											"end": 5239,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5197,
											"end": 5239,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5197,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 5197,
											"end": 5239,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5197,
											"end": 5239,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5197,
											"end": 5239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5197,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 5197,
											"end": 5239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5197,
											"end": 5239,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 5197,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5197,
											"end": 5239,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5197,
											"end": 5239,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5197,
											"end": 5239,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5197,
											"end": 5239,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5197,
											"end": 5239,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5197,
											"end": 5239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5197,
											"end": 5239,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 5018,
											"end": 5246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 5246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 5246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 5246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9325,
											"end": 9877,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 9325,
											"end": 9877,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9487,
											"end": 9514,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9487,
											"end": 9514,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 9466,
											"end": 9575,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9466,
											"end": 9575,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9466,
											"end": 9575,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9575,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13437,
											"end": 13439,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9466,
											"end": 9575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9466,
											"end": 9575,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9575,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13476,
											"end": 13478,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 13456,
											"end": 13474,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13456,
											"end": 13474,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13456,
											"end": 13474,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13449,
											"end": 13479,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13515,
											"end": 13549,
											"name": "PUSH",
											"source": 10,
											"value": "5661756C744D616E616765722063616E6E6F74206265207A65726F2061646472"
										},
										{
											"begin": 13495,
											"end": 13513,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13495,
											"end": 13513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13495,
											"end": 13513,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13488,
											"end": 13550,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13566,
											"end": 13584,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13566,
											"end": 13584,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13566,
											"end": 13584,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13559,
											"end": 13592,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13609,
											"end": 13628,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 13609,
											"end": 13628,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9466,
											"end": 9575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 13235,
											"end": 13634,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9466,
											"end": 9575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 9466,
											"end": 9575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9606,
											"end": 9634,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9606,
											"end": 9634,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9585,
											"end": 9696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 9585,
											"end": 9696,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9585,
											"end": 9696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9585,
											"end": 9696,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9585,
											"end": 9696,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9585,
											"end": 9696,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13841,
											"end": 13843,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9585,
											"end": 9696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9585,
											"end": 9696,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9585,
											"end": 9696,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13823,
											"end": 13844,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13880,
											"end": 13882,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13860,
											"end": 13878,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13860,
											"end": 13878,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13860,
											"end": 13878,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13853,
											"end": 13883,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13919,
											"end": 13953,
											"name": "PUSH",
											"source": 10,
											"value": "5265776172644D616E616765722063616E6E6F74206265207A65726F20616464"
										},
										{
											"begin": 13899,
											"end": 13917,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13899,
											"end": 13917,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13899,
											"end": 13917,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13892,
											"end": 13954,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13970,
											"end": 13988,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13970,
											"end": 13988,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13970,
											"end": 13988,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13963,
											"end": 13997,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14014,
											"end": 14033,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 14014,
											"end": 14033,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9585,
											"end": 9696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 13639,
											"end": 14039,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9585,
											"end": 9696,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 9585,
											"end": 9696,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9707,
											"end": 9750,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9750,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9707,
											"end": 9750,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9750,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9750,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9707,
											"end": 9750,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9750,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9750,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9750,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9750,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9750,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9750,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9707,
											"end": 9750,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9760,
											"end": 9773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9760,
											"end": 9806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9760,
											"end": 9806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9760,
											"end": 9806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9760,
											"end": 9806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9760,
											"end": 9806,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9760,
											"end": 9806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9760,
											"end": 9806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9760,
											"end": 9806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9760,
											"end": 9806,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9760,
											"end": 9806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9760,
											"end": 9806,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 9760,
											"end": 9806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9760,
											"end": 9806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9760,
											"end": 9806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 9870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9822,
											"end": 9870,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 9870,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8181,
											"end": 8232,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8181,
											"end": 8232,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8181,
											"end": 8232,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8263,
											"end": 8265,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8248,
											"end": 8266,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8248,
											"end": 8266,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8301,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8301,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8301,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8301,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 9870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8FC18CC172F74C81235145B7927190D2BD0E351FC45BFB17BB572593273CEF21"
										},
										{
											"begin": 9822,
											"end": 9870,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8154,
											"end": 8172,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9822,
											"end": 9870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9822,
											"end": 9870,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 9870,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 9870,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 9870,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 9870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9822,
											"end": 9870,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 9325,
											"end": 9877,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9325,
											"end": 9877,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9325,
											"end": 9877,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9325,
											"end": 9877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11619,
											"end": 11720,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 11619,
											"end": 11720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11673,
											"end": 11689,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 11708,
											"end": 11713,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11701,
											"end": 11713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11619,
											"end": 11720,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11619,
											"end": 11720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10856,
											"end": 11101,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 10856,
											"end": 11101,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10941,
											"end": 10974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 10941,
											"end": 10974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 10941,
											"end": 10974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10941,
											"end": 10974,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 10941,
											"end": 10974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10998,
											"end": 11015,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10998,
											"end": 11015,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10998,
											"end": 11015,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11034,
											"end": 11035,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10998,
											"end": 11015,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10998,
											"end": 11015,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10998,
											"end": 11015,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10998,
											"end": 11009,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10998,
											"end": 11015,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10998,
											"end": 11015,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10998,
											"end": 11015,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10998,
											"end": 11015,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10998,
											"end": 11015,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10998,
											"end": 11022,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10998,
											"end": 11022,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10990,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 10990,
											"end": 11060,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10990,
											"end": 11060,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10990,
											"end": 11060,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10990,
											"end": 11060,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10990,
											"end": 11060,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10990,
											"end": 11060,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10990,
											"end": 11060,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10990,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 10990,
											"end": 11060,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10990,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 10990,
											"end": 11060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10990,
											"end": 11060,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 10990,
											"end": 11060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11077,
											"end": 11094,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11077,
											"end": 11094,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11077,
											"end": 11094,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11077,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11077,
											"end": 11094,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11077,
											"end": 11094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11077,
											"end": 11094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11077,
											"end": 11088,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11077,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11077,
											"end": 11094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11077,
											"end": 11094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11077,
											"end": 11094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11077,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11077,
											"end": 11094,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11077,
											"end": 11094,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11077,
											"end": 11094,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11077,
											"end": 11094,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "1C0"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11077,
											"end": 11094,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11077,
											"end": 11094,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 11070,
											"end": 11094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 11070,
											"end": 11094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "10000"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 11070,
											"end": 11094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 11070,
											"end": 11094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "1000000"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11070,
											"end": 11094,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10856,
											"end": 11101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6763,
											"end": 6925,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 6763,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6895,
											"end": 6918,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6895,
											"end": 6918,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6895,
											"end": 6918,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6895,
											"end": 6918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6895,
											"end": 6918,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6895,
											"end": 6918,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6895,
											"end": 6908,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 6895,
											"end": 6918,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6895,
											"end": 6918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6895,
											"end": 6918,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6895,
											"end": 6918,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6895,
											"end": 6918,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6895,
											"end": 6918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6895,
											"end": 6918,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6895,
											"end": 6918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6895,
											"end": 6918,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6856,
											"end": 6872,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6856,
											"end": 6872,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6895,
											"end": 6918,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6925,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6925,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6763,
											"end": 6925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7113,
											"end": 7648,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 7113,
											"end": 7648,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7299,
											"end": 7322,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7299,
											"end": 7322,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7296,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7299,
											"end": 7322,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7299,
											"end": 7322,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7299,
											"end": 7322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7299,
											"end": 7312,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 7299,
											"end": 7322,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7299,
											"end": 7322,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7299,
											"end": 7322,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7299,
											"end": 7322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7299,
											"end": 7322,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7299,
											"end": 7322,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7299,
											"end": 7322,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7299,
											"end": 7322,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7210,
											"end": 7245,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7210,
											"end": 7245,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7296,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7299,
											"end": 7322,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7322,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7332,
											"end": 7387,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7440,
											"end": 7458,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 7390,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 7390,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7390,
											"end": 7479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7332,
											"end": 7479,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7332,
											"end": 7479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7495,
											"end": 7504,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7490,
											"end": 7618,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 7490,
											"end": 7618,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7514,
											"end": 7532,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7514,
											"end": 7539,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7510,
											"end": 7511,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7510,
											"end": 7539,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7490,
											"end": 7618,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7490,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 7490,
											"end": 7618,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 7584,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7573,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7585,
											"end": 7603,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7604,
											"end": 7605,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 7585,
											"end": 7606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7573,
											"end": 7607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 7607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 7607,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 7607,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 7607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 7607,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 7607,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 7607,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 7607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 7607,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 7607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7573,
											"end": 7607,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 7607,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7573,
											"end": 7607,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "1C0"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 7607,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 7560,
											"end": 7607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 7560,
											"end": 7607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "10000"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 7560,
											"end": 7607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 7560,
											"end": 7607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "1000000"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7570,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7570,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7570,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7570,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7569,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7568,
											"end": 7569,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7570,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7570,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 7560,
											"end": 7570,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 7560,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 7560,
											"end": 7570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7570,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 7560,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7570,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7560,
											"end": 7570,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7570,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7570,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7570,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7570,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7570,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7570,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7570,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7541,
											"end": 7544,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7541,
											"end": 7544,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7490,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 7490,
											"end": 7618,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14412,
											"end": 14838,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 14412,
											"end": 14838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14545,
											"end": 14568,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14545,
											"end": 14568,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14512,
											"end": 14525,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14545,
											"end": 14568,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14545,
											"end": 14568,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14545,
											"end": 14568,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14545,
											"end": 14558,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 14545,
											"end": 14568,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14545,
											"end": 14568,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14545,
											"end": 14568,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14545,
											"end": 14568,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14545,
											"end": 14568,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14528,
											"end": 14575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 14528,
											"end": 14575,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14570,
											"end": 14574,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14528,
											"end": 14544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 14528,
											"end": 14575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14528,
											"end": 14575,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 14528,
											"end": 14575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14597,
											"end": 14620,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14620,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14620,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14597,
											"end": 14620,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14620,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14620,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14610,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 14597,
											"end": 14620,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14597,
											"end": 14620,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14620,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14597,
											"end": 14620,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14620,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14597,
											"end": 14627,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14512,
											"end": 14575,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14512,
											"end": 14575,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14589,
											"end": 14627,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14589,
											"end": 14627,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 14585,
											"end": 14832,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14585,
											"end": 14832,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 14585,
											"end": 14832,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14663,
											"end": 14686,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14663,
											"end": 14686,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14643,
											"end": 14660,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14663,
											"end": 14686,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14663,
											"end": 14686,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14663,
											"end": 14686,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14663,
											"end": 14676,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 14663,
											"end": 14686,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14663,
											"end": 14686,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14663,
											"end": 14686,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14663,
											"end": 14686,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14663,
											"end": 14686,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14663,
											"end": 14693,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14663,
											"end": 14697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 14663,
											"end": 14697,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14696,
											"end": 14697,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 14696,
											"end": 14697,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14663,
											"end": 14697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 14663,
											"end": 14697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14663,
											"end": 14697,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 14663,
											"end": 14697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14744,
											"end": 14767,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14767,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14767,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14744,
											"end": 14767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14767,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14767,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14757,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 14744,
											"end": 14767,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14744,
											"end": 14767,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14767,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14744,
											"end": 14767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14767,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14643,
											"end": 14697,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14643,
											"end": 14697,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14744,
											"end": 14767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14643,
											"end": 14697,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14643,
											"end": 14697,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 14744,
											"end": 14778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14711,
											"end": 14734,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14734,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14734,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14724,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 14711,
											"end": 14734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14734,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14734,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14711,
											"end": 14734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14734,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14734,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14741,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14741,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14778,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14735,
											"end": 14740,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14735,
											"end": 14740,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14741,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14741,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 14711,
											"end": 14741,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 14711,
											"end": 14741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 14711,
											"end": 14741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14741,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 14711,
											"end": 14741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14741,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14711,
											"end": 14741,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14741,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14741,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14741,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14711,
											"end": 14741,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14741,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14741,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14741,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14741,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14741,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14778,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14778,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14711,
											"end": 14778,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14711,
											"end": 14778,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14778,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14778,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14778,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14778,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14711,
											"end": 14778,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14815,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14815,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14815,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14815,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14815,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14805,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 14792,
											"end": 14815,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14815,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14815,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14815,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14792,
											"end": 14815,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14815,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 14792,
											"end": 14821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14821,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14502,
											"end": 14838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14412,
											"end": 14838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14412,
											"end": 14838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14412,
											"end": 14838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13056,
											"end": 13370,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 13056,
											"end": 13370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13173,
											"end": 13192,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13173,
											"end": 13192,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13140,
											"end": 13153,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13173,
											"end": 13192,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13173,
											"end": 13192,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13173,
											"end": 13192,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13173,
											"end": 13184,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 13173,
											"end": 13192,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13173,
											"end": 13192,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13173,
											"end": 13192,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13173,
											"end": 13192,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13173,
											"end": 13192,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13156,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 13156,
											"end": 13199,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13194,
											"end": 13198,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13156,
											"end": 13172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 13156,
											"end": 13199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13156,
											"end": 13199,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 13156,
											"end": 13199,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13229,
											"end": 13248,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13229,
											"end": 13248,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13226,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13229,
											"end": 13248,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13229,
											"end": 13248,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13229,
											"end": 13248,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13229,
											"end": 13240,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 13229,
											"end": 13248,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13229,
											"end": 13248,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13229,
											"end": 13248,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13229,
											"end": 13248,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13229,
											"end": 13248,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13229,
											"end": 13255,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13140,
											"end": 13199,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13140,
											"end": 13199,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13209,
											"end": 13226,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13229,
											"end": 13259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 13229,
											"end": 13259,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13258,
											"end": 13259,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 13258,
											"end": 13259,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13229,
											"end": 13259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 13229,
											"end": 13259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13229,
											"end": 13259,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 13229,
											"end": 13259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13298,
											"end": 13317,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13317,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13317,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13298,
											"end": 13317,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13317,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13317,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13309,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 13298,
											"end": 13317,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13298,
											"end": 13317,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13317,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13298,
											"end": 13317,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13317,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13259,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13259,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13298,
											"end": 13317,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13259,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13209,
											"end": 13259,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 13298,
											"end": 13328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13269,
											"end": 13288,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13288,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13288,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13288,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13288,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13280,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 13269,
											"end": 13288,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13288,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13288,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13288,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13269,
											"end": 13288,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13288,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13288,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13295,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13295,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13298,
											"end": 13328,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13288,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13289,
											"end": 13294,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13289,
											"end": 13294,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13295,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13295,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 13269,
											"end": 13295,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 13269,
											"end": 13295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 13269,
											"end": 13295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13295,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 13269,
											"end": 13295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13295,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13269,
											"end": 13295,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13295,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13295,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13295,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13269,
											"end": 13295,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13295,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13295,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13295,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13295,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13295,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13295,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13328,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13328,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13269,
											"end": 13328,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13269,
											"end": 13328,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13328,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13328,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13328,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13328,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13269,
											"end": 13328,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13357,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13357,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13357,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13357,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13357,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13349,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 13338,
											"end": 13357,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13357,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13357,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13357,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13338,
											"end": 13357,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13357,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13363,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13363,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13363,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 13338,
											"end": 13363,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13338,
											"end": 13363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 13338,
											"end": 13363,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 13338,
											"end": 13363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13493,
											"end": 13719,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 13493,
											"end": 13719,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13559,
											"end": 13572,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13575,
											"end": 13604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 13592,
											"end": 13597,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 13599,
											"end": 13603,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13575,
											"end": 13591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 13575,
											"end": 13604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13575,
											"end": 13604,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 13575,
											"end": 13604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13634,
											"end": 13639,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 13634,
											"end": 13646,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13559,
											"end": 13604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13559,
											"end": 13604,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13614,
											"end": 13631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13614,
											"end": 13631,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13634,
											"end": 13650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 13634,
											"end": 13650,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13649,
											"end": 13650,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 13649,
											"end": 13650,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13634,
											"end": 13650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 13634,
											"end": 13650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13634,
											"end": 13650,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 13634,
											"end": 13650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13614,
											"end": 13650,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13614,
											"end": 13650,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13675,
											"end": 13680,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 13681,
											"end": 13690,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 13675,
											"end": 13691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13665,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 13660,
											"end": 13672,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13672,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13675,
											"end": 13691,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13666,
											"end": 13671,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13666,
											"end": 13671,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13672,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13672,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 13660,
											"end": 13672,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 13660,
											"end": 13672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 13660,
											"end": 13672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13672,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 13660,
											"end": 13672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13672,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13672,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13660,
											"end": 13672,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13672,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13660,
											"end": 13672,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13660,
											"end": 13672,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13672,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13672,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13660,
											"end": 13691,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 13660,
											"end": 13691,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13691,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13691,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13691,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13660,
											"end": 13691,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13691,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13691,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13691,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13691,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13660,
											"end": 13691,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13691,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13691,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13691,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13691,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13660,
											"end": 13691,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 13706,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 13701,
											"end": 13712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13701,
											"end": 13712,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13493,
											"end": 13719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2517D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14598,
											"end": 14630,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14598,
											"end": 14630,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14580,
											"end": 14631,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14647,
											"end": 14665,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14647,
											"end": 14665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14647,
											"end": 14665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14640,
											"end": 14674,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14640,
											"end": 14674,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14640,
											"end": 14674,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14553,
											"end": 14571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 14406,
											"end": 14680,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13932,
											"end": 14231,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 13932,
											"end": 14231,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14045,
											"end": 14052,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14045,
											"end": 14052,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14068,
											"end": 14168,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 14068,
											"end": 14168,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14092,
											"end": 14104,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14092,
											"end": 14104,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14088,
											"end": 14104,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14088,
											"end": 14104,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 14068,
											"end": 14168,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14068,
											"end": 14168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 14068,
											"end": 14168,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14141,
											"end": 14147,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14129,
											"end": 14147,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14134,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14135,
											"end": 14136,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14137,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14137,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14137,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14137,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 14129,
											"end": 14137,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 14129,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 14129,
											"end": 14137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14137,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 14129,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14137,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14129,
											"end": 14137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14137,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14137,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14137,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14129,
											"end": 14137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14137,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14137,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14137,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14129,
											"end": 14137,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14129,
											"end": 14147,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14125,
											"end": 14157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 14125,
											"end": 14157,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14156,
											"end": 14157,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14149,
											"end": 14157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 14149,
											"end": 14157,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14125,
											"end": 14157,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 14125,
											"end": 14157,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14106,
											"end": 14109,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 14106,
											"end": 14109,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14068,
											"end": 14168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 14068,
											"end": 14168,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14068,
											"end": 14168,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 14068,
											"end": 14168,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14184,
											"end": 14201,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13932,
											"end": 14231,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13932,
											"end": 14231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "232"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "120"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "140"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "160"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "180"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 199,
											"end": 270,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 593,
											"end": 724,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 593,
											"end": 724,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 668,
											"end": 699,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 668,
											"end": 699,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 658,
											"end": 700,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 658,
											"end": 700,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 648,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 648,
											"end": 718,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 714,
											"end": 715,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 712,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 704,
											"end": 716,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 729,
											"end": 1117,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 729,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 797,
											"end": 803,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 811,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 858,
											"end": 860,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 846,
											"end": 855,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 837,
											"end": 844,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 833,
											"end": 856,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 829,
											"end": 861,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 826,
											"end": 878,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 826,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 826,
											"end": 878,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 874,
											"end": 875,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 872,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 864,
											"end": 876,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 826,
											"end": 878,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 826,
											"end": 878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 913,
											"end": 922,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 900,
											"end": 923,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 932,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 957,
											"end": 962,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 932,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 932,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 932,
											"end": 963,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 932,
											"end": 963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 982,
											"end": 987,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1039,
											"end": 1041,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1042,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1042,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1011,
											"end": 1043,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 1011,
											"end": 1043,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 1052,
											"end": 1085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1085,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 1052,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 729,
											"end": 1117,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 729,
											"end": 1117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 729,
											"end": 1117,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 729,
											"end": 1117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 729,
											"end": 1117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 729,
											"end": 1117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1477,
											"end": 1724,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1477,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1591,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1568,
											"end": 1575,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1564,
											"end": 1587,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1592,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1557,
											"end": 1609,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1557,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 1557,
											"end": 1609,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1605,
											"end": 1606,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1602,
											"end": 1603,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1595,
											"end": 1607,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1557,
											"end": 1609,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 1557,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1644,
											"end": 1653,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1631,
											"end": 1654,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1663,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 1688,
											"end": 1693,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1663,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 1663,
											"end": 1694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1937,
											"end": 2163,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1937,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1996,
											"end": 2002,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2051,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2037,
											"end": 2046,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2028,
											"end": 2035,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2024,
											"end": 2047,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2020,
											"end": 2052,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2069,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 2017,
											"end": 2069,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2066,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2067,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2069,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 2017,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1937,
											"end": 2163,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1937,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2987,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 2350,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2540,
											"end": 2542,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2552,
											"end": 2573,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2552,
											"end": 2573,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2552,
											"end": 2573,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2622,
											"end": 2635,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2543,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2543,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2543,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2644,
											"end": 2666,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2644,
											"end": 2666,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2644,
											"end": 2666,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2496,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2496,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2723,
											"end": 2738,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2697,
											"end": 2699,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 2700,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2682,
											"end": 2700,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2682,
											"end": 2700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2496,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 2961,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 2766,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2777,
											"end": 2778,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2774,
											"end": 2787,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 2961,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 2766,
											"end": 2961,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2858,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2858,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 2880,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2829,
											"end": 2881,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2829,
											"end": 2881,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2910,
											"end": 2912,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2901,
											"end": 2913,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2901,
											"end": 2913,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2901,
											"end": 2913,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2901,
											"end": 2913,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2877,
											"end": 2878,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2795,
											"end": 2804,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 2766,
											"end": 2961,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 2961,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 2766,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2978,
											"end": 2981,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2978,
											"end": 2981,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2350,
											"end": 2987,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2350,
											"end": 2987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2992,
											"end": 3359,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 2992,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3060,
											"end": 3066,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3074,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3121,
											"end": 3123,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3109,
											"end": 3118,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3107,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3096,
											"end": 3119,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3124,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3141,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 3089,
											"end": 3141,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3137,
											"end": 3138,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3135,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3127,
											"end": 3139,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3141,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 3089,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3182,
											"end": 3205,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3182,
											"end": 3205,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3182,
											"end": 3205,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3281,
											"end": 3283,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3266,
											"end": 3284,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3266,
											"end": 3284,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3253,
											"end": 3285,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 3253,
											"end": 3285,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 3294,
											"end": 3327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3364,
											"end": 3513,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 3364,
											"end": 3513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3438,
											"end": 3458,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3438,
											"end": 3458,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3487,
											"end": 3488,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3477,
											"end": 3489,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3489,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3467,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 3467,
											"end": 3507,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3504,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3500,
											"end": 3501,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3505,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3467,
											"end": 3507,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 3467,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3364,
											"end": 3513,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3364,
											"end": 3513,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3364,
											"end": 3513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3364,
											"end": 3513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3518,
											"end": 5157,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 3518,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3721,
											"end": 3727,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3729,
											"end": 3735,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3737,
											"end": 3743,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3751,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3753,
											"end": 3759,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3761,
											"end": 3767,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3769,
											"end": 3775,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3777,
											"end": 3783,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3785,
											"end": 3791,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3793,
											"end": 3799,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3808,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 3858,
											"name": "PUSH",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 3843,
											"end": 3852,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 3841,
											"name": "DUP15",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3853,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3826,
											"end": 3859,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 3876,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 3823,
											"end": 3876,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3872,
											"end": 3873,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3870,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3862,
											"end": 3874,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 3876,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 3823,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3911,
											"end": 3920,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 3898,
											"end": 3921,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3930,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 3955,
											"end": 3960,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3930,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 3930,
											"end": 3961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3930,
											"end": 3961,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 3930,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 3985,
											"name": "SWAP11",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4037,
											"end": 4039,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4022,
											"end": 4040,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 4022,
											"end": 4040,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4041,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4050,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 4009,
											"end": 4041,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4050,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 4050,
											"end": 4083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4050,
											"end": 4083,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 4050,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4102,
											"end": 4109,
											"name": "SWAP10",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4161,
											"end": 4163,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4146,
											"end": 4164,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4164,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4165,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4174,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 4133,
											"end": 4165,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4174,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 4174,
											"end": 4207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4174,
											"end": 4207,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 4174,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4233,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4285,
											"end": 4287,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4270,
											"end": 4288,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4288,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4257,
											"end": 4289,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 4257,
											"end": 4289,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 4298,
											"end": 4331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4331,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 4298,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4350,
											"end": 4357,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4409,
											"end": 4412,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4394,
											"end": 4413,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 4394,
											"end": 4413,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4381,
											"end": 4414,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 4381,
											"end": 4414,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 4423,
											"end": 4456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4456,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 4423,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4475,
											"end": 4482,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4555,
											"end": 4558,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 4540,
											"end": 4559,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 4540,
											"end": 4559,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4527,
											"end": 4560,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4569,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 4527,
											"end": 4560,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4569,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 4569,
											"end": 4602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4569,
											"end": 4602,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 4569,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4621,
											"end": 4628,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4701,
											"end": 4704,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 4686,
											"end": 4705,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 4686,
											"end": 4705,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4706,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 4673,
											"end": 4706,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 4715,
											"end": 4748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4748,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 4715,
											"end": 4748,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4767,
											"end": 4774,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4847,
											"end": 4850,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4832,
											"end": 4851,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 4832,
											"end": 4851,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4819,
											"end": 4852,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4819,
											"end": 4852,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4954,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4936,
											"end": 4955,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 4936,
											"end": 4955,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4923,
											"end": 4956,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4923,
											"end": 4956,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5055,
											"end": 5058,
											"name": "PUSH",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 5040,
											"end": 5059,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 5040,
											"end": 5059,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5027,
											"end": 5060,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5027,
											"end": 5060,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5106,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 5146,
											"end": 5149,
											"name": "PUSH",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 5131,
											"end": 5150,
											"name": "DUP14",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5106,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 5106,
											"end": 5151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5106,
											"end": 5151,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 5106,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5095,
											"end": 5151,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5095,
											"end": 5151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3518,
											"end": 5157,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3518,
											"end": 5157,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3518,
											"end": 5157,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 3518,
											"end": 5157,
											"name": "SWAP12",
											"source": 10
										},
										{
											"begin": 3518,
											"end": 5157,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3518,
											"end": 5157,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3518,
											"end": 5157,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3518,
											"end": 5157,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 3518,
											"end": 5157,
											"name": "SWAP12",
											"source": 10
										},
										{
											"begin": 3518,
											"end": 5157,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3518,
											"end": 5157,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3518,
											"end": 5157,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 3518,
											"end": 5157,
											"name": "SWAP10",
											"source": 10
										},
										{
											"begin": 3518,
											"end": 5157,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3518,
											"end": 5157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5162,
											"end": 5289,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 5162,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5223,
											"end": 5233,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 5218,
											"end": 5221,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5214,
											"end": 5234,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5211,
											"end": 5212,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5204,
											"end": 5235,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5254,
											"end": 5258,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 5251,
											"end": 5252,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5244,
											"end": 5259,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5278,
											"end": 5282,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5275,
											"end": 5276,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5268,
											"end": 5283,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5433,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 5294,
											"end": 5433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5374,
											"end": 5375,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5367,
											"end": 5372,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5364,
											"end": 5376,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5354,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 5354,
											"end": 5400,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 5380,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5409,
											"end": 5427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5409,
											"end": 5427,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5438,
											"end": 5578,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 5438,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5519,
											"end": 5520,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 5512,
											"end": 5517,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5509,
											"end": 5521,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5499,
											"end": 5545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 5499,
											"end": 5545,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5525,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 5525,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 5525,
											"end": 5543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5583,
											"end": 7074,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 5583,
											"end": 7074,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5683,
											"end": 5695,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5683,
											"end": 5695,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1204,
											"end": 1235,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1192,
											"end": 1236,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1192,
											"end": 1236,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5747,
											"end": 5751,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5740,
											"end": 5745,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5752,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5730,
											"end": 5753,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 5820,
											"end": 5824,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5815,
											"end": 5818,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5811,
											"end": 5825,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5797,
											"end": 5809,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1204,
											"end": 1235,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1192,
											"end": 1236,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1192,
											"end": 1236,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1242,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5826,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 5762,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5875,
											"end": 5879,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5858,
											"end": 5881,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5851,
											"end": 5855,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5846,
											"end": 5849,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5842,
											"end": 5856,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5835,
											"end": 5882,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5930,
											"end": 5934,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5923,
											"end": 5928,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5919,
											"end": 5935,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5913,
											"end": 5936,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5945,
											"end": 6011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 6005,
											"end": 6009,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6000,
											"end": 6003,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6010,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1204,
											"end": 1235,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1192,
											"end": 1236,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1192,
											"end": 1236,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1242,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5945,
											"end": 6011,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 5945,
											"end": 6011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5945,
											"end": 6011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6059,
											"end": 6063,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 6052,
											"end": 6057,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6064,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6042,
											"end": 6065,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 6134,
											"end": 6138,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 6129,
											"end": 6132,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6125,
											"end": 6139,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6109,
											"end": 6123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1204,
											"end": 1235,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1192,
											"end": 1236,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1192,
											"end": 1236,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1242,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6140,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 6074,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6074,
											"end": 6140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6188,
											"end": 6192,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 6181,
											"end": 6186,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6177,
											"end": 6193,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6171,
											"end": 6194,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6269,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 6263,
											"end": 6267,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 6258,
											"end": 6261,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6254,
											"end": 6268,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6238,
											"end": 6252,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1204,
											"end": 1235,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1192,
											"end": 1236,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1192,
											"end": 1236,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1242,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6269,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 6203,
											"end": 6269,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6269,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 6310,
											"end": 6315,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6306,
											"end": 6322,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6300,
											"end": 6323,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 6387,
											"end": 6390,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6383,
											"end": 6397,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6367,
											"end": 6381,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1204,
											"end": 1235,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1192,
											"end": 1236,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1192,
											"end": 1236,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1242,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6398,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 6332,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6398,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6447,
											"end": 6451,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 6440,
											"end": 6445,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6436,
											"end": 6452,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6430,
											"end": 6453,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6423,
											"end": 6427,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 6418,
											"end": 6421,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6414,
											"end": 6428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6407,
											"end": 6454,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6511,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6498,
											"end": 6503,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6494,
											"end": 6512,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6488,
											"end": 6513,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6479,
											"end": 6485,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6474,
											"end": 6477,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6470,
											"end": 6486,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6514,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6565,
											"end": 6571,
											"name": "PUSH",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 6558,
											"end": 6563,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6554,
											"end": 6572,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6573,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6539,
											"end": 6545,
											"name": "PUSH",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 6534,
											"end": 6537,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6530,
											"end": 6546,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6523,
											"end": 6574,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6622,
											"end": 6628,
											"name": "PUSH",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 6615,
											"end": 6620,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6605,
											"end": 6630,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6639,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 6689,
											"end": 6695,
											"name": "PUSH",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 6684,
											"end": 6687,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6680,
											"end": 6696,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6664,
											"end": 6678,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6639,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 6639,
											"end": 6697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6639,
											"end": 6697,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 6639,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6639,
											"end": 6697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6745,
											"end": 6751,
											"name": "PUSH",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 6738,
											"end": 6743,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6734,
											"end": 6752,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6728,
											"end": 6753,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6762,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 6803,
											"end": 6809,
											"name": "PUSH",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 6798,
											"end": 6801,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6794,
											"end": 6810,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6778,
											"end": 6792,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 375,
											"end": 388,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 368,
											"end": 389,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 356,
											"end": 390,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 356,
											"end": 390,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 305,
											"end": 396,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6762,
											"end": 6811,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 6762,
											"end": 6811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6762,
											"end": 6811,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6859,
											"end": 6865,
											"name": "PUSH",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 6852,
											"end": 6857,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6848,
											"end": 6866,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6842,
											"end": 6867,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6876,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 6927,
											"end": 6933,
											"name": "PUSH",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 6922,
											"end": 6925,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6918,
											"end": 6934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6902,
											"end": 6916,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6876,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 6876,
											"end": 6935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6876,
											"end": 6935,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 6876,
											"end": 6935,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6876,
											"end": 6935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 6989,
											"name": "PUSH",
											"source": 10,
											"value": "1A0"
										},
										{
											"begin": 6976,
											"end": 6981,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6972,
											"end": 6990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6966,
											"end": 6991,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7000,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 7060,
											"end": 7066,
											"name": "PUSH",
											"source": 10,
											"value": "1A0"
										},
										{
											"begin": 7055,
											"end": 7058,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7051,
											"end": 7067,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7035,
											"end": 7049,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1204,
											"end": 1235,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1192,
											"end": 1236,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1192,
											"end": 1236,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1242,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7079,
											"end": 7773,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 7079,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7325,
											"end": 7327,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7337,
											"end": 7358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7337,
											"end": 7358,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7337,
											"end": 7358,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7407,
											"end": 7420,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7407,
											"end": 7420,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7310,
											"end": 7328,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7310,
											"end": 7328,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7310,
											"end": 7328,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7429,
											"end": 7451,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7429,
											"end": 7451,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7429,
											"end": 7451,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7277,
											"end": 7281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7277,
											"end": 7281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7523,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7523,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7482,
											"end": 7484,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7467,
											"end": 7485,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7467,
											"end": 7485,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7467,
											"end": 7485,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7277,
											"end": 7281,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7747,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 7551,
											"end": 7747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7565,
											"end": 7571,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7562,
											"end": 7563,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7559,
											"end": 7572,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7747,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 7551,
											"end": 7747,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7614,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 7659,
											"end": 7662,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7650,
											"end": 7656,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7644,
											"end": 7657,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7614,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 7614,
											"end": 7663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7614,
											"end": 7663,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 7614,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7734,
											"end": 7736,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7722,
											"end": 7737,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7722,
											"end": 7737,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7722,
											"end": 7737,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7722,
											"end": 7737,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7722,
											"end": 7737,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7692,
											"end": 7698,
											"name": "PUSH",
											"source": 10,
											"value": "1C0"
										},
										{
											"begin": 7683,
											"end": 7699,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7683,
											"end": 7699,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7683,
											"end": 7699,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7683,
											"end": 7699,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7683,
											"end": 7699,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7587,
											"end": 7588,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7580,
											"end": 7589,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 7551,
											"end": 7747,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8393,
											"end": 8399,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8401,
											"end": 8407,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8454,
											"end": 8456,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8442,
											"end": 8451,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8433,
											"end": 8440,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8429,
											"end": 8452,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8425,
											"end": 8457,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8422,
											"end": 8474,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8422,
											"end": 8474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 8422,
											"end": 8474,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8470,
											"end": 8471,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8467,
											"end": 8468,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8460,
											"end": 8472,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8422,
											"end": 8474,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 8422,
											"end": 8474,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8509,
											"end": 8518,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8496,
											"end": 8519,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8528,
											"end": 8559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 8553,
											"end": 8558,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8528,
											"end": 8559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 8528,
											"end": 8559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8528,
											"end": 8559,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 8528,
											"end": 8559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8578,
											"end": 8583,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8635,
											"end": 8637,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8620,
											"end": 8638,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8620,
											"end": 8638,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8607,
											"end": 8639,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8670,
											"end": 8671,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 8658,
											"end": 8672,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8658,
											"end": 8672,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8648,
											"end": 8690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 8648,
											"end": 8690,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8686,
											"end": 8687,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8683,
											"end": 8684,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8676,
											"end": 8688,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8727,
											"end": 8934,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 8727,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8872,
											"end": 8874,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8857,
											"end": 8875,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8857,
											"end": 8875,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8884,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 8861,
											"end": 8870,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8910,
											"end": 8916,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8884,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 8884,
											"end": 8928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8939,
											"end": 9196,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 8939,
											"end": 9196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9129,
											"end": 9132,
											"name": "PUSH",
											"source": 10,
											"value": "1C0"
										},
										{
											"begin": 9114,
											"end": 9133,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9114,
											"end": 9133,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9142,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 9118,
											"end": 9127,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9172,
											"end": 9178,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9142,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 9142,
											"end": 9190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9729,
											"end": 10072,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 9729,
											"end": 10072,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9931,
											"end": 9933,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9913,
											"end": 9934,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9913,
											"end": 9934,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9913,
											"end": 9934,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9970,
											"end": 9972,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 9950,
											"end": 9968,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9950,
											"end": 9968,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9950,
											"end": 9968,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9943,
											"end": 9973,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "141BDBDB081B9BDD081C9959DA5CDD195C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10004,
											"end": 10006,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10007,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9989,
											"end": 10007,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9982,
											"end": 10031,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10063,
											"end": 10065,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10048,
											"end": 10066,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10048,
											"end": 10066,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9729,
											"end": 10072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11596,
											"end": 11898,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 11596,
											"end": 11898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11798,
											"end": 11830,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11798,
											"end": 11830,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11780,
											"end": 11831,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11780,
											"end": 11831,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11768,
											"end": 11770,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11753,
											"end": 11771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11753,
											"end": 11771,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11840,
											"end": 11892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 11888,
											"end": 11890,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11873,
											"end": 11891,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11873,
											"end": 11891,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11865,
											"end": 11871,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11840,
											"end": 11892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 11840,
											"end": 11892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11903,
											"end": 12030,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 11903,
											"end": 12030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11964,
											"end": 11974,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 11959,
											"end": 11962,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 11955,
											"end": 11975,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 11952,
											"end": 11953,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11945,
											"end": 11976,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11995,
											"end": 11999,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 11992,
											"end": 11993,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11985,
											"end": 12000,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12019,
											"end": 12023,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12016,
											"end": 12017,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12009,
											"end": 12024,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12035,
											"end": 12162,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 12035,
											"end": 12162,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12096,
											"end": 12106,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 12091,
											"end": 12094,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 12087,
											"end": 12107,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 12084,
											"end": 12085,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12077,
											"end": 12108,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12127,
											"end": 12131,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 12124,
											"end": 12125,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12117,
											"end": 12132,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12151,
											"end": 12155,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12148,
											"end": 12149,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12141,
											"end": 12156,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12922,
											"end": 13230,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 12922,
											"end": 13230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13106,
											"end": 13108,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13091,
											"end": 13109,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13091,
											"end": 13109,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13118,
											"end": 13162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 13095,
											"end": 13104,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13144,
											"end": 13150,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13118,
											"end": 13162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 13118,
											"end": 13162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13118,
											"end": 13162,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 13118,
											"end": 13162,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13171,
											"end": 13224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 13220,
											"end": 13222,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13209,
											"end": 13218,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13205,
											"end": 13223,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13197,
											"end": 13203,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13171,
											"end": 13224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 13171,
											"end": 13224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14044,
											"end": 14269,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 14044,
											"end": 14269,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14111,
											"end": 14120,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14111,
											"end": 14120,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14111,
											"end": 14120,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14132,
											"end": 14143,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14132,
											"end": 14143,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14132,
											"end": 14143,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14129,
											"end": 14263,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14129,
											"end": 14263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 14129,
											"end": 14263,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14185,
											"end": 14195,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 14180,
											"end": 14183,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 14176,
											"end": 14196,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 14173,
											"end": 14174,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14166,
											"end": 14197,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14220,
											"end": 14224,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 14217,
											"end": 14218,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14210,
											"end": 14225,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14248,
											"end": 14252,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14245,
											"end": 14246,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14238,
											"end": 14253,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14274,
											"end": 14401,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 14274,
											"end": 14401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14335,
											"end": 14345,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 14330,
											"end": 14333,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 14326,
											"end": 14346,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 14323,
											"end": 14324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14316,
											"end": 14347,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14366,
											"end": 14370,
											"name": "PUSH",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 14363,
											"end": 14364,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14356,
											"end": 14371,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14390,
											"end": 14394,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14387,
											"end": 14388,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14380,
											"end": 14395,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/contracts/interfaces/IPoolOrganizer.sol",
								"contracts/contracts/interfaces/IRewardManager.sol",
								"contracts/contracts/interfaces/IVaultManager.sol",
								"contracts/contracts/protocol/PoolOrganizer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"POOL_MANAGER_ROLE()": "56d73568",
							"deregisterPool(address)": "7e72c7d7",
							"getAllLenderPoolDetails(address)": "52fc9b0e",
							"getAllPoolAddresses()": "c56f1b44",
							"getBorrowerPoolDetails(address)": "ec209544",
							"getLoanState(address)": "c81c3bef",
							"getManagers()": "a8d088bb",
							"getPoolDetails(address)": "d3e90fa0",
							"getPoolsByBorrower(address)": "e7ef32f7",
							"getPoolsByLender(address)": "24a44efb",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getTotalPools()": "d3ffe67a",
							"getVaultForPool(address)": "7570e389",
							"grantFactoryAccess(address)": "5d102df7",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"markPoolAsFunded(address)": "1f2f2e14",
							"poolVaults(address)": "1e4966ab",
							"registerManagers(address,address)": "c489579d",
							"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)": "43756020",
							"registerVault(address,address)": "05c4fdf9",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"rewardManager()": "0f4ef8a6",
							"setBorrowerForPool(address,address)": "37e238c5",
							"supportsInterface(bytes4)": "01ffc9a7",
							"updateLoanState(address,uint8)": "a956239b",
							"vaultManager()": "8a4adf24"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IPoolOrganizer.LoanState\",\"name\":\"oldState\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum IPoolOrganizer.LoanState\",\"name\":\"newState\",\"type\":\"uint8\"}],\"name\":\"LoanStateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vaultManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardManager\",\"type\":\"address\"}],\"name\":\"ManagerRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IPoolOrganizer.PoolType\",\"name\":\"poolType\",\"type\":\"uint8\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"VaultRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOL_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"deregisterPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"}],\"name\":\"getAllLenderPoolDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"loanToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"repaymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"enum IPoolOrganizer.PoolType\",\"name\":\"poolType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"funded\",\"type\":\"bool\"},{\"internalType\":\"enum IPoolOrganizer.LoanState\",\"name\":\"loanState\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"internalType\":\"struct IPoolOrganizer.PoolDetails[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPoolAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"getBorrowerPoolDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"loanToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"repaymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"enum IPoolOrganizer.PoolType\",\"name\":\"poolType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"funded\",\"type\":\"bool\"},{\"internalType\":\"enum IPoolOrganizer.LoanState\",\"name\":\"loanState\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"internalType\":\"struct IPoolOrganizer.PoolDetails[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getLoanState\",\"outputs\":[{\"internalType\":\"enum IPoolOrganizer.LoanState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getManagers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"loanToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"repaymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"enum IPoolOrganizer.PoolType\",\"name\":\"poolType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"funded\",\"type\":\"bool\"},{\"internalType\":\"enum IPoolOrganizer.LoanState\",\"name\":\"loanState\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"internalType\":\"struct IPoolOrganizer.PoolDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"getPoolsByBorrower\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"}],\"name\":\"getPoolsByLender\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getVaultForPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"}],\"name\":\"grantFactoryAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"markPoolAsFunded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolVaults\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardManager\",\"type\":\"address\"}],\"name\":\"registerManagers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"loanToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"repaymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"enum IPoolOrganizer.PoolType\",\"name\":\"poolType\",\"type\":\"uint8\"}],\"name\":\"registerPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"registerVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardManager\",\"outputs\":[{\"internalType\":\"contract IRewardManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newBorrower\",\"type\":\"address\"}],\"name\":\"setBorrowerForPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"enum IPoolOrganizer.LoanState\",\"name\":\"newState\",\"type\":\"uint8\"}],\"name\":\"updateLoanState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultManager\",\"outputs\":[{\"internalType\":\"contract IVaultManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements access control and management for pool lifecycle and integration with external managers.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"LoanStateUpdated(address,uint8,uint8)\":{\"details\":\"Emitted when the loan state of a pool is updated.\",\"params\":{\"newState\":\"The new state of the loan.\",\"oldState\":\"The previous state of the loan.\",\"pool\":\"The address of the pool.\"}},\"ManagerRegistered(address,address)\":{\"details\":\"Emitted when managers are registered.\",\"params\":{\"rewardManager\":\"The address of the reward manager.\",\"vaultManager\":\"The address of the vault manager.\"}},\"PoolDeregistered(address)\":{\"details\":\"Emitted when a pool is deregistered.\",\"params\":{\"pool\":\"The address of the deregistered pool.\"}},\"PoolRegistered(address,address,address,address,uint8)\":{\"details\":\"Emitted when a new pool is registered.\",\"params\":{\"borrower\":\"The address of the borrower.\",\"lender\":\"The address of the lender.\",\"pool\":\"The address of the pool.\",\"poolType\":\"The type of the pool.\",\"vault\":\"The address of the vault associated with the pool.\"}},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"VaultRegistered(address,address)\":{\"details\":\"Emitted when a vault is registered for a pool.\",\"params\":{\"pool\":\"The address of the pool.\",\"vault\":\"The address of the registered vault.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor that grants the deployer the admin and pool manager roles.\"},\"deregisterPool(address)\":{\"details\":\"Deregisters the specified pool and emits a `PoolDeregistered` event.\",\"params\":{\"pool\":\"The address of the pool to deregister.\"}},\"getAllLenderPoolDetails(address)\":{\"params\":{\"lender\":\"The address of the lender.\"},\"returns\":{\"_0\":\"An array of pool details.\"}},\"getAllPoolAddresses()\":{\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getBorrowerPoolDetails(address)\":{\"params\":{\"borrower\":\"The address of the borrower.\"},\"returns\":{\"_0\":\"An array of pool details.\"}},\"getLoanState(address)\":{\"params\":{\"pool\":\"The address of the pool.\"},\"returns\":{\"_0\":\"The current loan state of the pool.\"}},\"getManagers()\":{\"returns\":{\"_0\":\"The addresses of the vault and reward managers.\"}},\"getPoolDetails(address)\":{\"params\":{\"pool\":\"The address of the pool.\"},\"returns\":{\"_0\":\"The details of the pool.\"}},\"getPoolsByBorrower(address)\":{\"params\":{\"borrower\":\"The address of the borrower.\"},\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getPoolsByLender(address)\":{\"params\":{\"lender\":\"The address of the lender.\"},\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getTotalPools()\":{\"returns\":{\"_0\":\"The total number of pools.\"}},\"getVaultForPool(address)\":{\"params\":{\"pool\":\"The address of the pool.\"},\"returns\":{\"_0\":\"The address of the vault.\"}},\"grantFactoryAccess(address)\":{\"params\":{\"factoryAddress\":\"The address of the factory.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"markPoolAsFunded(address)\":{\"details\":\"Marks the specified pool as funded.\",\"params\":{\"pool\":\"The address of the pool to mark as funded.\"}},\"registerManagers(address,address)\":{\"details\":\"Registers the specified managers and emits a `ManagerRegistered` event.\",\"params\":{\"_rewardManager\":\"The address of the reward manager.\",\"_vaultManager\":\"The address of the vault manager.\"}},\"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)\":{\"details\":\"Registers a pool and emits a `PoolRegistered` event.\",\"params\":{\"assetToken\":\"The ERC20 token for the asset.\",\"borrower\":\"The address of the borrower.\",\"interestRate\":\"The interest rate for the loan.\",\"lender\":\"The address of the lender.\",\"loanAmount\":\"The amount of the loan.\",\"loanToken\":\"The ERC20 token for the loan.\",\"pool\":\"The address of the pool.\",\"poolType\":\"The type of the pool.\",\"repaymentPeriod\":\"The repayment period for the loan.\",\"repaymentToken\":\"The ERC20 token for the repayment.\",\"vault\":\"The address of the vault.\"}},\"registerVault(address,address)\":{\"details\":\"Registers the specified vault for the pool and emits a `VaultRegistered` event.\",\"params\":{\"pool\":\"The address of the pool.\",\"vault\":\"The address of the vault.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setBorrowerForPool(address,address)\":{\"params\":{\"newBorrower\":\"The address of the new borrower.\",\"pool\":\"The address of the pool.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"updateLoanState(address,uint8)\":{\"params\":{\"newState\":\"The new state of the loan.\",\"pool\":\"The address of the pool.\"}}},\"title\":\"Pool Organizer for managing pools, vaults, and rewards.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deregisterPool(address)\":{\"notice\":\"Deregisters a pool.\"},\"getAllLenderPoolDetails(address)\":{\"notice\":\"Gets the details of all pools associated with a lender.\"},\"getAllPoolAddresses()\":{\"notice\":\"Gets all registered pool addresses.\"},\"getBorrowerPoolDetails(address)\":{\"notice\":\"Gets the details of all pools associated with a borrower.\"},\"getLoanState(address)\":{\"notice\":\"Gets the current loan state of a specific pool.\"},\"getManagers()\":{\"notice\":\"Gets the addresses of the registered managers.\"},\"getPoolDetails(address)\":{\"notice\":\"Gets the details of a specified pool.\"},\"getPoolsByBorrower(address)\":{\"notice\":\"Gets all pools associated with a borrower.\"},\"getPoolsByLender(address)\":{\"notice\":\"Gets all pools associated with a lender.\"},\"getTotalPools()\":{\"notice\":\"Gets the total number of registered pools.\"},\"getVaultForPool(address)\":{\"notice\":\"Gets the vault address associated with a pool.\"},\"grantFactoryAccess(address)\":{\"notice\":\"Grants factory access to the specified address.\"},\"markPoolAsFunded(address)\":{\"notice\":\"Marks a pool as funded.\"},\"registerManagers(address,address)\":{\"notice\":\"Registers the vault and reward managers.\"},\"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)\":{\"notice\":\"Registers a new pool with the specified details.\"},\"registerVault(address,address)\":{\"notice\":\"Registers a vault for a specified pool.\"},\"setBorrowerForPool(address,address)\":{\"notice\":\"Sets the borrower for a specified pool.\"},\"updateLoanState(address,uint8)\":{\"notice\":\"Updates the loan state of the specified pool and emits a `LoanStateUpdated` event.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/protocol/PoolOrganizer.sol\":\"PoolOrganizer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/contracts/interfaces/IPoolOrganizer.sol\":{\"keccak256\":\"0x0ce052094139df49200b21b6c088c9997ddc2c688f4528d1fcdfb0c0414080a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c18bdcccf32a2a9e7fb8e347b80d09032c8fe64dcb02e6b92a4b99c6d7a16a8\",\"dweb:/ipfs/QmVprNk8mRzHy6GWT6bhBPmgtj3U3rkN8LamBAwES92GMh\"]},\"contracts/contracts/interfaces/IRewardManager.sol\":{\"keccak256\":\"0x692870b248c0b71185a5c030f853306d6a4c3a25180a3f57ff56dfb2da59a9d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27ba33e21e32b7bfff41db71f93f4ba9a427659a2c04fdf8510087963dbcb62\",\"dweb:/ipfs/QmcnnmcjEc7gkPNHKLECceA9FdVryvK9qKppnakhXGgNMh\"]},\"contracts/contracts/interfaces/IVaultManager.sol\":{\"keccak256\":\"0xdd866073f1029189ab6d2f04f7cdf481fb48e9e12ef4f9cd2376778674ce1f1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d1aef045b26166c370937ef37a8917a00d63021343795f47c30516745e3786d\",\"dweb:/ipfs/QmbAuF7Ufd78MYjnYKUybDtGDVFcn7e6wSNN8hEg6fGFg5\"]},\"contracts/contracts/protocol/PoolOrganizer.sol\":{\"keccak256\":\"0xdc43e2a49512cfa08faec1371d4de45c454d18667f99a310331ec146bada5e6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://235b06b0e2d17d358c55f20f43b53be2de19539c4ad126835154883ad7b88ab0\",\"dweb:/ipfs/Qmdrb9Ya5AkRPDkSeUWLXrvD9cFa6rQpejRokj438T2ns9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 794,
								"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "vaultManager",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IVaultManager)775"
							},
							{
								"astId": 797,
								"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "rewardManager",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IRewardManager)727"
							},
							{
								"astId": 800,
								"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "pools",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 805,
								"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "poolDetails",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(PoolDetails)571_storage)"
							},
							{
								"astId": 810,
								"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "lenderPools",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
							},
							{
								"astId": 814,
								"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "poolVaults",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 819,
								"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "borrowerPools",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
							},
							{
								"astId": 824,
								"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "loanStates",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_enum(LoanState)537)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)456": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IRewardManager)727": {
								"encoding": "inplace",
								"label": "contract IRewardManager",
								"numberOfBytes": "20"
							},
							"t_contract(IVaultManager)775": {
								"encoding": "inplace",
								"label": "contract IVaultManager",
								"numberOfBytes": "20"
							},
							"t_enum(LoanState)537": {
								"encoding": "inplace",
								"label": "enum IPoolOrganizer.LoanState",
								"numberOfBytes": "1"
							},
							"t_enum(PoolType)529": {
								"encoding": "inplace",
								"label": "enum IPoolOrganizer.PoolType",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_array(t_address)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address[])",
								"numberOfBytes": "32",
								"value": "t_array(t_address)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_enum(LoanState)537)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => enum IPoolOrganizer.LoanState)",
								"numberOfBytes": "32",
								"value": "t_enum(LoanState)537"
							},
							"t_mapping(t_address,t_struct(PoolDetails)571_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct IPoolOrganizer.PoolDetails)",
								"numberOfBytes": "32",
								"value": "t_struct(PoolDetails)571_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(PoolDetails)571_storage": {
								"encoding": "inplace",
								"label": "struct IPoolOrganizer.PoolDetails",
								"members": [
									{
										"astId": 539,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "lender",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 541,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "borrower",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 543,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "creationTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 545,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "vault",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									},
									{
										"astId": 548,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "loanToken",
										"offset": 0,
										"slot": "4",
										"type": "t_contract(IERC20)456"
									},
									{
										"astId": 551,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "assetToken",
										"offset": 0,
										"slot": "5",
										"type": "t_contract(IERC20)456"
									},
									{
										"astId": 554,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "repaymentToken",
										"offset": 0,
										"slot": "6",
										"type": "t_contract(IERC20)456"
									},
									{
										"astId": 556,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "loanAmount",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 558,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "interestRate",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 560,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "repaymentPeriod",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 563,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "poolType",
										"offset": 0,
										"slot": "10",
										"type": "t_enum(PoolType)529"
									},
									{
										"astId": 565,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "funded",
										"offset": 1,
										"slot": "10",
										"type": "t_bool"
									},
									{
										"astId": 568,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "loanState",
										"offset": 2,
										"slot": "10",
										"type": "t_enum(LoanState)537"
									},
									{
										"astId": 570,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "pool",
										"offset": 3,
										"slot": "10",
										"type": "t_address"
									}
								],
								"numberOfBytes": "352"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deregisterPool(address)": {
								"notice": "Deregisters a pool."
							},
							"getAllLenderPoolDetails(address)": {
								"notice": "Gets the details of all pools associated with a lender."
							},
							"getAllPoolAddresses()": {
								"notice": "Gets all registered pool addresses."
							},
							"getBorrowerPoolDetails(address)": {
								"notice": "Gets the details of all pools associated with a borrower."
							},
							"getLoanState(address)": {
								"notice": "Gets the current loan state of a specific pool."
							},
							"getManagers()": {
								"notice": "Gets the addresses of the registered managers."
							},
							"getPoolDetails(address)": {
								"notice": "Gets the details of a specified pool."
							},
							"getPoolsByBorrower(address)": {
								"notice": "Gets all pools associated with a borrower."
							},
							"getPoolsByLender(address)": {
								"notice": "Gets all pools associated with a lender."
							},
							"getTotalPools()": {
								"notice": "Gets the total number of registered pools."
							},
							"getVaultForPool(address)": {
								"notice": "Gets the vault address associated with a pool."
							},
							"grantFactoryAccess(address)": {
								"notice": "Grants factory access to the specified address."
							},
							"markPoolAsFunded(address)": {
								"notice": "Marks a pool as funded."
							},
							"registerManagers(address,address)": {
								"notice": "Registers the vault and reward managers."
							},
							"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)": {
								"notice": "Registers a new pool with the specified details."
							},
							"registerVault(address,address)": {
								"notice": "Registers a vault for a specified pool."
							},
							"setBorrowerForPool(address,address)": {
								"notice": "Sets the borrower for a specified pool."
							},
							"updateLoanState(address,uint8)": {
								"notice": "Updates the loan state of the specified pool and emits a `LoanStateUpdated` event."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							486
						],
						"ERC165": [
							510
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 487,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 486,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 511,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 510,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 486,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 510,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								510,
								522,
								378,
								486
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										509
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 509,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							456
						]
					},
					"id": 457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 456,
							"linearizedBaseContracts": [
								456
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 390,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 399,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 456,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 456,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 456,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 456,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 456,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 456,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 457,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								390,
								399
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							486
						]
					},
					"id": 487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 459,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 486,
							"linearizedBaseContracts": [
								486
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 464,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 463,
												"id": 466,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 486,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 473,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 472,
												"id": 475,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 486,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 481,
												"id": 483,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 486,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 487,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							510
						],
						"IERC165": [
							522
						]
					},
					"id": 511,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 490,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 511,
							"sourceUnit": 523,
							"src": "140:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 489,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 522,
										"src": "148:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 492,
										"name": "IERC165",
										"nameLocations": [
											"687:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 522,
										"src": "687:7:4"
									},
									"id": 493,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:4"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 491,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:4",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 510,
							"linearizedBaseContracts": [
								510,
								522
							],
							"name": "ERC165",
							"nameLocation": "677:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										521
									],
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "844:64:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 501,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "861:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 503,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "881:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$522_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$522_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 502,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$522",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:4",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 500,
												"id": 507,
												"nodeType": "Return",
												"src": "854:47:4"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "789:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 495,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:4"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "838:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:4"
									},
									"scope": 510,
									"src": "762:146:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 511,
							"src": "659:251:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							522
						]
					},
					"id": 523,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 512,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 513,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:5",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 522,
							"linearizedBaseContracts": [
								522
							],
							"name": "IERC165",
							"nameLocation": "431:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "817:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 515,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:5"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "860:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 518,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:5"
									},
									"scope": 522,
									"src": "790:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 523,
							"src": "421:447:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:5"
				},
				"id": 5
			},
			"contracts/contracts/interfaces/IPoolOrganizer.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/IPoolOrganizer.sol",
					"exportedSymbols": {
						"IERC20": [
							456
						],
						"IPoolOrganizer": [
							694
						]
					},
					"id": 695,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 524,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 695,
							"sourceUnit": 457,
							"src": "61:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPoolOrganizer",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 526,
								"nodeType": "StructuredDocumentation",
								"src": "121:129:6",
								"text": "@title IPoolOrganizer interface\n @notice Interface for the Pool Organizer contract managing pools, vaults, and rewards."
							},
							"fullyImplemented": false,
							"id": 694,
							"linearizedBaseContracts": [
								694
							],
							"name": "IPoolOrganizer",
							"nameLocation": "260:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IPoolOrganizer.PoolType",
									"id": 529,
									"members": [
										{
											"id": 527,
											"name": "STANDARD",
											"nameLocation": "298:8:6",
											"nodeType": "EnumValue",
											"src": "298:8:6"
										},
										{
											"id": 528,
											"name": "FLASH_LOAN",
											"nameLocation": "308:10:6",
											"nodeType": "EnumValue",
											"src": "308:10:6"
										}
									],
									"name": "PoolType",
									"nameLocation": "287:8:6",
									"nodeType": "EnumDefinition",
									"src": "282:38:6"
								},
								{
									"canonicalName": "IPoolOrganizer.LoanState",
									"id": 537,
									"members": [
										{
											"id": 530,
											"name": "CREATED",
											"nameLocation": "354:7:6",
											"nodeType": "EnumValue",
											"src": "354:7:6"
										},
										{
											"id": 531,
											"name": "PENDING",
											"nameLocation": "372:7:6",
											"nodeType": "EnumValue",
											"src": "372:7:6"
										},
										{
											"id": 532,
											"name": "ACTIVE",
											"nameLocation": "390:6:6",
											"nodeType": "EnumValue",
											"src": "390:6:6"
										},
										{
											"id": 533,
											"name": "DEFAULTED",
											"nameLocation": "407:9:6",
											"nodeType": "EnumValue",
											"src": "407:9:6"
										},
										{
											"id": 534,
											"name": "REPAID",
											"nameLocation": "427:6:6",
											"nodeType": "EnumValue",
											"src": "427:6:6"
										},
										{
											"id": 535,
											"name": "CLOSED",
											"nameLocation": "444:6:6",
											"nodeType": "EnumValue",
											"src": "444:6:6"
										},
										{
											"id": 536,
											"name": "FUNDED",
											"nameLocation": "461:6:6",
											"nodeType": "EnumValue",
											"src": "461:6:6"
										}
									],
									"name": "LoanState",
									"nameLocation": "333:9:6",
									"nodeType": "EnumDefinition",
									"src": "328:146:6"
								},
								{
									"canonicalName": "IPoolOrganizer.PoolDetails",
									"id": 571,
									"members": [
										{
											"constant": false,
											"id": 539,
											"mutability": "mutable",
											"name": "lender",
											"nameLocation": "523:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 571,
											"src": "515:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 538,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "515:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 541,
											"mutability": "mutable",
											"name": "borrower",
											"nameLocation": "548:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 571,
											"src": "540:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 540,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "540:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 543,
											"mutability": "mutable",
											"name": "creationTime",
											"nameLocation": "575:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 571,
											"src": "567:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 542,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "567:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 545,
											"mutability": "mutable",
											"name": "vault",
											"nameLocation": "606:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 571,
											"src": "598:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 544,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "598:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 548,
											"mutability": "mutable",
											"name": "loanToken",
											"nameLocation": "629:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 571,
											"src": "622:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$456",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 547,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 546,
													"name": "IERC20",
													"nameLocations": [
														"622:6:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 456,
													"src": "622:6:6"
												},
												"referencedDeclaration": 456,
												"src": "622:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 551,
											"mutability": "mutable",
											"name": "assetToken",
											"nameLocation": "656:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 571,
											"src": "649:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$456",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 550,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 549,
													"name": "IERC20",
													"nameLocations": [
														"649:6:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 456,
													"src": "649:6:6"
												},
												"referencedDeclaration": 456,
												"src": "649:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 554,
											"mutability": "mutable",
											"name": "repaymentToken",
											"nameLocation": "684:14:6",
											"nodeType": "VariableDeclaration",
											"scope": 571,
											"src": "677:21:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$456",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 553,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 552,
													"name": "IERC20",
													"nameLocations": [
														"677:6:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 456,
													"src": "677:6:6"
												},
												"referencedDeclaration": 456,
												"src": "677:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 556,
											"mutability": "mutable",
											"name": "loanAmount",
											"nameLocation": "717:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 571,
											"src": "709:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 555,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "709:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 558,
											"mutability": "mutable",
											"name": "interestRate",
											"nameLocation": "746:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 571,
											"src": "738:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 557,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "738:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 560,
											"mutability": "mutable",
											"name": "repaymentPeriod",
											"nameLocation": "777:15:6",
											"nodeType": "VariableDeclaration",
											"scope": 571,
											"src": "769:23:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 559,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "769:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 563,
											"mutability": "mutable",
											"name": "poolType",
											"nameLocation": "812:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 571,
											"src": "803:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_PoolType_$529",
												"typeString": "enum IPoolOrganizer.PoolType"
											},
											"typeName": {
												"id": 562,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 561,
													"name": "PoolType",
													"nameLocations": [
														"803:8:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 529,
													"src": "803:8:6"
												},
												"referencedDeclaration": 529,
												"src": "803:8:6",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PoolType_$529",
													"typeString": "enum IPoolOrganizer.PoolType"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 565,
											"mutability": "mutable",
											"name": "funded",
											"nameLocation": "836:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 571,
											"src": "831:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 564,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "831:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 568,
											"mutability": "mutable",
											"name": "loanState",
											"nameLocation": "863:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 571,
											"src": "853:19:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_LoanState_$537",
												"typeString": "enum IPoolOrganizer.LoanState"
											},
											"typeName": {
												"id": 567,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 566,
													"name": "LoanState",
													"nameLocations": [
														"853:9:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 537,
													"src": "853:9:6"
												},
												"referencedDeclaration": 537,
												"src": "853:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_LoanState_$537",
													"typeString": "enum IPoolOrganizer.LoanState"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 570,
											"mutability": "mutable",
											"name": "pool",
											"nameLocation": "891:4:6",
											"nodeType": "VariableDeclaration",
											"scope": 571,
											"src": "883:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 569,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "883:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolDetails",
									"nameLocation": "492:11:6",
									"nodeType": "StructDefinition",
									"scope": 694,
									"src": "485:418:6",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "911:668:6",
										"text": "@notice Registers a new pool\n @param pool The address of the pool contract\n @param lender The address of the lender\n @param borrower The address of the borrower\n @param vault The address of the vault associated with the pool\n @param loanToken The token to be loaned\n @param assetToken The token used as collateral\n @param repaymentToken The token used for loan repayment\n @param loanAmount The amount of the loan\n @param interestRate The interest rate of the loan\n @param repaymentPeriod The loan repayment period\n @param poolType The type of the pool (standard or flash loan)"
									},
									"functionSelector": "43756020",
									"id": 601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerPool",
									"nameLocation": "1594:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1625:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1617:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1617:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "1648:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1640:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "1673:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1665:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1665:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "1700:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1692:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "loanToken",
												"nameLocation": "1723:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1716:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 582,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 581,
														"name": "IERC20",
														"nameLocations": [
															"1716:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 456,
														"src": "1716:6:6"
													},
													"referencedDeclaration": 456,
													"src": "1716:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$456",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "assetToken",
												"nameLocation": "1750:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1743:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 585,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 584,
														"name": "IERC20",
														"nameLocations": [
															"1743:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 456,
														"src": "1743:6:6"
													},
													"referencedDeclaration": 456,
													"src": "1743:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$456",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "repaymentToken",
												"nameLocation": "1778:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1771:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 588,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 587,
														"name": "IERC20",
														"nameLocations": [
															"1771:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 456,
														"src": "1771:6:6"
													},
													"referencedDeclaration": 456,
													"src": "1771:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$456",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "loanAmount",
												"nameLocation": "1811:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1803:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1803:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "interestRate",
												"nameLocation": "1840:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1832:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "repaymentPeriod",
												"nameLocation": "1871:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1863:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1863:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "poolType",
												"nameLocation": "1906:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1897:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PoolType_$529",
													"typeString": "enum IPoolOrganizer.PoolType"
												},
												"typeName": {
													"id": 597,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 596,
														"name": "PoolType",
														"nameLocations": [
															"1897:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 529,
														"src": "1897:8:6"
													},
													"referencedDeclaration": 529,
													"src": "1897:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PoolType_$529",
														"typeString": "enum IPoolOrganizer.PoolType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1606:321:6"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1936:0:6"
									},
									"scope": 694,
									"src": "1585:352:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "1945:89:6",
										"text": "@notice Deregisters a pool\n @param pool The address of the pool to deregister"
									},
									"functionSelector": "7e72c7d7",
									"id": 607,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deregisterPool",
									"nameLocation": "2049:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "2072:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "2064:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2064:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2063:14:6"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2086:0:6"
									},
									"scope": 694,
									"src": "2040:47:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "2095:107:6",
										"text": "@notice Gets the total number of registered pools\n @return The total number of registered pools"
									},
									"functionSelector": "d3ffe67a",
									"id": 613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalPools",
									"nameLocation": "2217:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2230:2:6"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "2256:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2255:9:6"
									},
									"scope": 694,
									"src": "2208:57:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "2273:167:6",
										"text": "@notice Retrieves all pool addresses associated with a specific lender\n @param lender The address of the lender\n @return An array of pool addresses"
									},
									"functionSelector": "24a44efb",
									"id": 622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolsByLender",
									"nameLocation": "2455:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "2480:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "2472:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2472:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2471:16:6"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "2511:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 618,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2511:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 619,
													"nodeType": "ArrayTypeName",
													"src": "2511:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2510:18:6"
									},
									"scope": 694,
									"src": "2446:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "2537:154:6",
										"text": "@notice Retrieves the loan state of a specific pool\n @param pool The address of the pool\n @return The loan state of the specified pool"
									},
									"functionSelector": "c81c3bef",
									"id": 631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLoanState",
									"nameLocation": "2706:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "2727:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "2719:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:14:6"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "2756:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_LoanState_$537",
													"typeString": "enum IPoolOrganizer.LoanState"
												},
												"typeName": {
													"id": 628,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 627,
														"name": "LoanState",
														"nameLocations": [
															"2756:9:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 537,
														"src": "2756:9:6"
													},
													"referencedDeclaration": 537,
													"src": "2756:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_LoanState_$537",
														"typeString": "enum IPoolOrganizer.LoanState"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:11:6"
									},
									"scope": 694,
									"src": "2697:70:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "2775:149:6",
										"text": "@notice Updates the loan state of a specific pool\n @param pool The address of the pool\n @param newState The new state of the loan"
									},
									"functionSelector": "a956239b",
									"id": 640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateLoanState",
									"nameLocation": "2939:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "2963:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2955:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2955:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "newState",
												"nameLocation": "2979:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2969:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_LoanState_$537",
													"typeString": "enum IPoolOrganizer.LoanState"
												},
												"typeName": {
													"id": 636,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 635,
														"name": "LoanState",
														"nameLocations": [
															"2969:9:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 537,
														"src": "2969:9:6"
													},
													"referencedDeclaration": 537,
													"src": "2969:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_LoanState_$537",
														"typeString": "enum IPoolOrganizer.LoanState"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2954:34:6"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2997:0:6"
									},
									"scope": 694,
									"src": "2930:68:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "3006:160:6",
										"text": "@notice Retrieves detailed information about a specific pool\n @param pool The address of the pool\n @return The details of the specified pool"
									},
									"functionSelector": "d3e90fa0",
									"id": 649,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolDetails",
									"nameLocation": "3181:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3204:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "3196:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:14:6"
									},
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "3233:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolDetails_$571_memory_ptr",
													"typeString": "struct IPoolOrganizer.PoolDetails"
												},
												"typeName": {
													"id": 646,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 645,
														"name": "PoolDetails",
														"nameLocations": [
															"3233:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 571,
														"src": "3233:11:6"
													},
													"referencedDeclaration": 571,
													"src": "3233:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolDetails_$571_storage_ptr",
														"typeString": "struct IPoolOrganizer.PoolDetails"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:20:6"
									},
									"scope": 694,
									"src": "3172:81:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "3261:161:6",
										"text": "@notice Retrieves the associated vault address for a given pool\n @param pool The address of the pool\n @return The address of the linked vault"
									},
									"functionSelector": "7570e389",
									"id": 657,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVaultForPool",
									"nameLocation": "3437:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3461:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3453:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3452:14:6"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3490:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3490:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3489:9:6"
									},
									"scope": 694,
									"src": "3428:71:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "3507:128:6",
										"text": "@notice Grants factory access to manage pools\n @param factoryAddress The address of the factory to be granted access"
									},
									"functionSelector": "5d102df7",
									"id": 663,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantFactoryAccess",
									"nameLocation": "3650:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "factoryAddress",
												"nameLocation": "3677:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "3669:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3669:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3668:24:6"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3701:0:6"
									},
									"scope": 694,
									"src": "3641:61:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "3710:141:6",
										"text": "@notice Registers a vault for a specific pool\n @param pool The address of the pool\n @param vault The address of the vault"
									},
									"functionSelector": "05c4fdf9",
									"id": 671,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerVault",
									"nameLocation": "3866:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3888:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3880:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "3902:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3894:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3879:29:6"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3917:0:6"
									},
									"scope": 694,
									"src": "3857:61:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "3926:215:6",
										"text": "@notice Registers manager contracts for managing vaults and rewards\n @param _vaultManager The address of the VaultManager contract\n @param _rewardManager The address of the RewardManager contract"
									},
									"functionSelector": "c489579d",
									"id": 679,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerManagers",
									"nameLocation": "4156:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "_vaultManager",
												"nameLocation": "4181:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "4173:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4173:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "_rewardManager",
												"nameLocation": "4204:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "4196:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4196:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4172:47:6"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4228:0:6"
									},
									"scope": 694,
									"src": "4147:82:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "4237:97:6",
										"text": "@notice Marks a pool as funded\n @param pool The address of the pool to mark as funded"
									},
									"functionSelector": "1f2f2e14",
									"id": 685,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "markPoolAsFunded",
									"nameLocation": "4349:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "4374:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "4366:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:14:6"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4388:0:6"
									},
									"scope": 694,
									"src": "4340:49:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "4402:155:6",
										"text": "@notice Sets the borrower for a specified pool\n @param pool The address of the pool\n @param newBorrower The address of the new borrower"
									},
									"functionSelector": "37e238c5",
									"id": 693,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setBorrowerForPool",
									"nameLocation": "4572:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "4599:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "4591:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4591:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "newBorrower",
												"nameLocation": "4613:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "4605:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4605:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4590:35:6"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4634:0:6"
									},
									"scope": 694,
									"src": "4563:72:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 695,
							"src": "250:4388:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:4607:6"
				},
				"id": 6
			},
			"contracts/contracts/interfaces/IRewardManager.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/IRewardManager.sol",
					"exportedSymbols": {
						"IRewardManager": [
							727
						]
					},
					"id": 728,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 696,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRewardManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 727,
							"linearizedBaseContracts": [
								727
							],
							"name": "IRewardManager",
							"nameLocation": "71:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "93:213:7",
										"text": "@notice Registers a pool to be eligible for rewards, initializing its reward token.\n @param pool The address of the pool to register.\n @param rewardToken The ERC20 address for the reward token."
									},
									"functionSelector": "77ff76e7",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerPool",
									"nameLocation": "321:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "342:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "334:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "rewardToken",
												"nameLocation": "356:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "348:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "isFlashPool",
												"nameLocation": "374:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "369:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 702,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "369:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:53:7"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "395:0:7"
									},
									"scope": 727,
									"src": "312:84:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "404:94:7",
										"text": "@notice Accrues rewards for a specific pool.\n @param pool The address of the pool."
									},
									"functionSelector": "3d39955c",
									"id": 712,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "accrueRewards",
									"nameLocation": "513:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "535:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "527:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "526:14:7"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "549:0:7"
									},
									"scope": 727,
									"src": "504:46:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 713,
										"nodeType": "StructuredDocumentation",
										"src": "558:187:7",
										"text": "@notice Claims rewards for either the lender or borrower.\n @param pool The address of the pool.\n @param isLender True if the lender is claiming, false if the borrower."
									},
									"functionSelector": "491c011a",
									"id": 720,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nameLocation": "760:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "781:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "773:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "isLender",
												"nameLocation": "792:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "787:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 716,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "787:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:29:7"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "810:0:7"
									},
									"scope": 727,
									"src": "751:60:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "819:91:7",
										"text": "@notice Deregisters a pool.\n @param pool The address of the pool to deregister."
									},
									"functionSelector": "7e72c7d7",
									"id": 726,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deregisterPool",
									"nameLocation": "925:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "948:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "940:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:14:7"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "962:0:7"
									},
									"scope": 727,
									"src": "916:47:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 728,
							"src": "61:905:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:935:7"
				},
				"id": 7
			},
			"contracts/contracts/interfaces/IVaultManager.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/IVaultManager.sol",
					"exportedSymbols": {
						"IVaultManager": [
							775
						]
					},
					"id": 776,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 729,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVaultManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 730,
								"nodeType": "StructuredDocumentation",
								"src": "63:77:8",
								"text": "@title IVaultManager\n @dev Interface for the VaultManager contract."
							},
							"fullyImplemented": false,
							"id": 775,
							"linearizedBaseContracts": [
								775
							],
							"name": "IVaultManager",
							"nameLocation": "150:13:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "171:93:8",
										"text": "@notice Registers a pool's vault upon creation.\n @param pool Address of the pool."
									},
									"functionSelector": "5228a4da",
									"id": 736,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerPoolVault",
									"nameLocation": "279:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "305:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "297:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "297:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "296:14:8"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "319:0:8"
									},
									"scope": 775,
									"src": "270:50:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "328:99:8",
										"text": "@notice Deregisters a pool's vault upon loan closure.\n @param pool Address of the pool."
									},
									"functionSelector": "38e270ed",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deregisterVault",
									"nameLocation": "442:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "466:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "458:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "458:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:14:8"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "480:0:8"
									},
									"scope": 775,
									"src": "433:48:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "489:206:8",
										"text": "@notice Distributes accrued interest from a vault to a specified recipient.\n @param pool Address of the pool initiating the interest payout.\n @param to Recipient of the interest payment."
									},
									"functionSelector": "d302bf76",
									"id": 750,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "distributeInterest",
									"nameLocation": "710:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "737:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "729:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "751:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "743:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "728:26:8"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:8"
									},
									"scope": 775,
									"src": "701:63:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "772:226:8",
										"text": "@notice Calculates the claimable interest for a user based on the pool's loan configuration.\n @param pool Address of the pool for which to calculate interest.\n @return amount The calculated interest amount."
									},
									"functionSelector": "51b2d521",
									"id": 758,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateClaimableInterest",
									"nameLocation": "1013:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1048:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "1040:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:14:8"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "1077:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1076:9:8"
									},
									"scope": 775,
									"src": "1004:82:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "1094:175:8",
										"text": "@notice Refunds any remaining interest to the borrower when the loan is repaid.\n @param pool Address of the pool.\n @param borrower Address of the borrower."
									},
									"functionSelector": "56f78a1d",
									"id": 766,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "refundRemainingInterest",
									"nameLocation": "1284:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1316:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "1308:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1308:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "1330:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "1322:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1322:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1307:32:8"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1348:0:8"
									},
									"scope": 775,
									"src": "1275:74:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "1361:217:8",
										"text": "@notice Handle the default for the lender to get remaining interest.\n @param pool The address of the loan pool associated with this interest payment.\n @param lender The lender address of that pool."
									},
									"functionSelector": "713c00ce",
									"id": 774,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "handleDefault",
									"nameLocation": "1593:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1615:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "1607:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1607:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "1629:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "1621:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1606:30:8"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1645:0:8"
									},
									"scope": 775,
									"src": "1584:62:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 776,
							"src": "140:1509:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1618:8"
				},
				"id": 8
			},
			"contracts/contracts/protocol/PoolOrganizer.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/protocol/PoolOrganizer.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							486
						],
						"ERC165": [
							510
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							456
						],
						"IPoolOrganizer": [
							694
						],
						"IRewardManager": [
							727
						],
						"IVaultManager": [
							775
						],
						"PoolOrganizer": [
							1741
						]
					},
					"id": 1742,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 777,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 778,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1742,
							"sourceUnit": 296,
							"src": "58:58:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IPoolOrganizer.sol",
							"file": "../interfaces/IPoolOrganizer.sol",
							"id": 779,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1742,
							"sourceUnit": 695,
							"src": "117:42:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IVaultManager.sol",
							"file": "../interfaces/IVaultManager.sol",
							"id": 780,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1742,
							"sourceUnit": 776,
							"src": "160:41:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IRewardManager.sol",
							"file": "../interfaces/IRewardManager.sol",
							"id": 781,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1742,
							"sourceUnit": 728,
							"src": "202:42:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 783,
										"name": "AccessControl",
										"nameLocations": [
											"454:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "454:13:9"
									},
									"id": 784,
									"nodeType": "InheritanceSpecifier",
									"src": "454:13:9"
								},
								{
									"baseName": {
										"id": 785,
										"name": "IPoolOrganizer",
										"nameLocations": [
											"469:14:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 694,
										"src": "469:14:9"
									},
									"id": 786,
									"nodeType": "InheritanceSpecifier",
									"src": "469:14:9"
								}
							],
							"canonicalName": "PoolOrganizer",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 782,
								"nodeType": "StructuredDocumentation",
								"src": "246:181:9",
								"text": " @title Pool Organizer for managing pools, vaults, and rewards.\n @dev Implements access control and management for pool lifecycle and integration with external managers."
							},
							"fullyImplemented": true,
							"id": 1741,
							"linearizedBaseContracts": [
								1741,
								694,
								295,
								510,
								522,
								378,
								486
							],
							"name": "PoolOrganizer",
							"nameLocation": "437:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "56d73568",
									"id": 791,
									"mutability": "constant",
									"name": "POOL_MANAGER_ROLE",
									"nameLocation": "514:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 1741,
									"src": "490:74:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 787,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "490:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "504f4f4c5f4d414e414745525f524f4c45",
												"id": 789,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "544:19:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff",
													"typeString": "literal_string \"POOL_MANAGER_ROLE\""
												},
												"value": "POOL_MANAGER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff",
													"typeString": "literal_string \"POOL_MANAGER_ROLE\""
												}
											],
											"id": 788,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "534:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 790,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "534:30:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a4adf24",
									"id": 794,
									"mutability": "mutable",
									"name": "vaultManager",
									"nameLocation": "592:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1741,
									"src": "571:33:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IVaultManager_$775",
										"typeString": "contract IVaultManager"
									},
									"typeName": {
										"id": 793,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 792,
											"name": "IVaultManager",
											"nameLocations": [
												"571:13:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 775,
											"src": "571:13:9"
										},
										"referencedDeclaration": 775,
										"src": "571:13:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IVaultManager_$775",
											"typeString": "contract IVaultManager"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0f4ef8a6",
									"id": 797,
									"mutability": "mutable",
									"name": "rewardManager",
									"nameLocation": "632:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1741,
									"src": "610:35:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IRewardManager_$727",
										"typeString": "contract IRewardManager"
									},
									"typeName": {
										"id": 796,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 795,
											"name": "IRewardManager",
											"nameLocations": [
												"610:14:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 727,
											"src": "610:14:9"
										},
										"referencedDeclaration": 727,
										"src": "610:14:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IRewardManager_$727",
											"typeString": "contract IRewardManager"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 800,
									"mutability": "mutable",
									"name": "pools",
									"nameLocation": "670:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1741,
									"src": "652:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 798,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "652:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 799,
										"nodeType": "ArrayTypeName",
										"src": "652:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 805,
									"mutability": "mutable",
									"name": "poolDetails",
									"nameLocation": "736:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1741,
									"src": "681:66:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$571_storage_$",
										"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails)"
									},
									"typeName": {
										"id": 804,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 801,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "689:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "681:46:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$571_storage_$",
											"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 803,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 802,
												"name": "IPoolOrganizer.PoolDetails",
												"nameLocations": [
													"700:14:9",
													"715:11:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 571,
												"src": "700:26:9"
											},
											"referencedDeclaration": 571,
											"src": "700:26:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolDetails_$571_storage_ptr",
												"typeString": "struct IPoolOrganizer.PoolDetails"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 810,
									"mutability": "mutable",
									"name": "lenderPools",
									"nameLocation": "791:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1741,
									"src": "753:49:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
										"typeString": "mapping(address => address[])"
									},
									"typeName": {
										"id": 809,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 806,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "761:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "753:29:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
											"typeString": "mapping(address => address[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 807,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "772:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 808,
											"nodeType": "ArrayTypeName",
											"src": "772:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "1e4966ab",
									"id": 814,
									"mutability": "mutable",
									"name": "poolVaults",
									"nameLocation": "843:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1741,
									"src": "808:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 813,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 811,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "816:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "808:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 812,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "827:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 819,
									"mutability": "mutable",
									"name": "borrowerPools",
									"nameLocation": "897:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1741,
									"src": "859:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
										"typeString": "mapping(address => address[])"
									},
									"typeName": {
										"id": 818,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 815,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "867:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "859:29:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
											"typeString": "mapping(address => address[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 816,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "878:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 817,
											"nodeType": "ArrayTypeName",
											"src": "878:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 824,
									"mutability": "mutable",
									"name": "loanStates",
									"nameLocation": "954:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1741,
									"src": "916:48:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_enum$_LoanState_$537_$",
										"typeString": "mapping(address => enum IPoolOrganizer.LoanState)"
									},
									"typeName": {
										"id": 823,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 820,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "924:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "916:29:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_enum$_LoanState_$537_$",
											"typeString": "mapping(address => enum IPoolOrganizer.LoanState)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 822,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 821,
												"name": "LoanState",
												"nameLocations": [
													"935:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 537,
												"src": "935:9:9"
											},
											"referencedDeclaration": 537,
											"src": "935:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_LoanState_$537",
												"typeString": "enum IPoolOrganizer.LoanState"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "971:322:9",
										"text": " @dev Emitted when a new pool is registered.\n @param pool The address of the pool.\n @param lender The address of the lender.\n @param borrower The address of the borrower.\n @param vault The address of the vault associated with the pool.\n @param poolType The type of the pool."
									},
									"eventSelector": "8f723e49dc038e67c41b41307a1e0c65653d50125a0c474a21ac32d9a0b24d2b",
									"id": 838,
									"name": "PoolRegistered",
									"nameLocation": "1304:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1344:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "1328:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"indexed": true,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "1374:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "1358:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1358:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"indexed": true,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "1406:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "1390:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1390:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"indexed": false,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "1432:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "1424:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"indexed": false,
												"mutability": "mutable",
												"name": "poolType",
												"nameLocation": "1456:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "1447:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PoolType_$529",
													"typeString": "enum IPoolOrganizer.PoolType"
												},
												"typeName": {
													"id": 835,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 834,
														"name": "PoolType",
														"nameLocations": [
															"1447:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 529,
														"src": "1447:8:9"
													},
													"referencedDeclaration": 529,
													"src": "1447:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PoolType_$529",
														"typeString": "enum IPoolOrganizer.PoolType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1318:152:9"
									},
									"src": "1298:173:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "1477:117:9",
										"text": " @dev Emitted when a pool is deregistered.\n @param pool The address of the deregistered pool."
									},
									"eventSelector": "334d0b2111287dfddebe4b4c1c5af3ae644909d7fcd024377bf601e236ed5abb",
									"id": 843,
									"name": "PoolDeregistered",
									"nameLocation": "1605:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1638:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "1622:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:22:9"
									},
									"src": "1599:45:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "1650:185:9",
										"text": " @dev Emitted when managers are registered.\n @param vaultManager The address of the vault manager.\n @param rewardManager The address of the reward manager."
									},
									"eventSelector": "8fc18cc172f74c81235145b7927190d2bd0e351fc45bfb17bb572593273cef21",
									"id": 850,
									"name": "ManagerRegistered",
									"nameLocation": "1846:17:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"indexed": false,
												"mutability": "mutable",
												"name": "vaultManager",
												"nameLocation": "1872:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "1864:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1864:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardManager",
												"nameLocation": "1894:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "1886:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:45:9"
									},
									"src": "1840:69:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "1915:171:9",
										"text": " @dev Emitted when a vault is registered for a pool.\n @param pool The address of the pool.\n @param vault The address of the registered vault."
									},
									"eventSelector": "f8ee9039d8e4d43426638703c71517008894fdea742bb2d2dbff5a46fb07abdb",
									"id": 857,
									"name": "VaultRegistered",
									"nameLocation": "2097:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "2129:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "2113:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2113:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"indexed": true,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "2151:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "2135:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2135:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2112:45:9"
									},
									"src": "2091:67:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "2164:222:9",
										"text": " @dev Emitted when the loan state of a pool is updated.\n @param pool The address of the pool.\n @param oldState The previous state of the loan.\n @param newState The new state of the loan."
									},
									"eventSelector": "0a61679a80e33b8ccd7049ed35b83f875349aa2875ef98ce5ba441a88761fb4e",
									"id": 868,
									"name": "LoanStateUpdated",
									"nameLocation": "2397:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "2439:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "2423:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2423:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldState",
												"nameLocation": "2463:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "2453:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_LoanState_$537",
													"typeString": "enum IPoolOrganizer.LoanState"
												},
												"typeName": {
													"id": 862,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 861,
														"name": "LoanState",
														"nameLocations": [
															"2453:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 537,
														"src": "2453:9:9"
													},
													"referencedDeclaration": 537,
													"src": "2453:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_LoanState_$537",
														"typeString": "enum IPoolOrganizer.LoanState"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"indexed": false,
												"mutability": "mutable",
												"name": "newState",
												"nameLocation": "2491:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "2481:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_LoanState_$537",
													"typeString": "enum IPoolOrganizer.LoanState"
												},
												"typeName": {
													"id": 865,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 864,
														"name": "LoanState",
														"nameLocations": [
															"2481:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 537,
														"src": "2481:9:9"
													},
													"referencedDeclaration": 537,
													"src": "2481:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_LoanState_$537",
														"typeString": "enum IPoolOrganizer.LoanState"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2413:92:9"
									},
									"src": "2391:115:9"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "2625:110:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 873,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "2646:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 874,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2666:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2670:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2666:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 872,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2635:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2635:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "2635:42:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 879,
															"name": "POOL_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "2698:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 880,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2717:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2721:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2717:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 878,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2687:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2687:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "2687:41:9"
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "2512:94:9",
										"text": " @dev Constructor that grants the deployer the admin and pool manager roles."
									},
									"id": 885,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2622:2:9"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2625:0:9"
									},
									"scope": 1741,
									"src": "2611:124:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										601
									],
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "3802:934:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 916,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "3820:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3836:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3828:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 917,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3828:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3828:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3820:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20616464726573732063616e6e6f74206265207a65726f",
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3840:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87b863ecb9e24e5ca6ed73ab80a99e3ca6cb5645b7108a8418eddd7225dd4578",
																"typeString": "literal_string \"Pool address cannot be zero\""
															},
															"value": "Pool address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87b863ecb9e24e5ca6ed73ab80a99e3ca6cb5645b7108a8418eddd7225dd4578",
																"typeString": "literal_string \"Pool address cannot be zero\""
															}
														],
														"id": 915,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3812:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3812:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "3812:58:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 926,
																		"name": "poolDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "3901:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$571_storage_$",
																			"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																		}
																	},
																	"id": 928,
																	"indexExpression": {
																		"id": 927,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 888,
																		"src": "3913:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3901:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$571_storage",
																		"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																	}
																},
																"id": 929,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3919:6:9",
																"memberName": "lender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 539,
																"src": "3901:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3937:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3929:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 930,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3929:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3929:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3901:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20616c72656164792072656769737465726564",
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3953:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc861dfb3d1e0446599e73c98b2e7d579c1ecdb9e65a09f726c97d864f2bf3dd",
																"typeString": "literal_string \"Pool already registered\""
															},
															"value": "Pool already registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc861dfb3d1e0446599e73c98b2e7d579c1ecdb9e65a09f726c97d864f2bf3dd",
																"typeString": "literal_string \"Pool already registered\""
															}
														],
														"id": 925,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3880:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3880:108:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 937,
												"nodeType": "ExpressionStatement",
												"src": "3880:108:9"
											},
											{
												"expression": {
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 938,
															"name": "poolDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "3999:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$571_storage_$",
																"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
															}
														},
														"id": 940,
														"indexExpression": {
															"id": 939,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "4011:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3999:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolDetails_$571_storage",
															"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 943,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "4068:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 944,
																"name": "borrower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "4098:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 945,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4134:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4140:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4134:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 947,
																"name": "vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "4170:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 948,
																"name": "loanToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 897,
																"src": "4200:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$456",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 949,
																"name": "assetToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 900,
																"src": "4235:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$456",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 950,
																"name": "repaymentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "4275:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$456",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 951,
																"name": "loanAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "4315:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 952,
																"name": "interestRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "4353:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 953,
																"name": "repaymentPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "4396:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 954,
																"name": "poolType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "4435:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PoolType_$529",
																	"typeString": "enum IPoolOrganizer.PoolType"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4465:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"expression": {
																	"id": 956,
																	"name": "LoanState",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 537,
																	"src": "4495:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_LoanState_$537_$",
																		"typeString": "type(enum IPoolOrganizer.LoanState)"
																	}
																},
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4505:7:9",
																"memberName": "CREATED",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 530,
																"src": "4495:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_LoanState_$537",
																	"typeString": "enum IPoolOrganizer.LoanState"
																}
															},
															{
																"id": 958,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "4532:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_contract$_IERC20_$456",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_contract$_IERC20_$456",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_contract$_IERC20_$456",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_enum$_PoolType_$529",
																	"typeString": "enum IPoolOrganizer.PoolType"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_enum$_LoanState_$537",
																	"typeString": "enum IPoolOrganizer.LoanState"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 941,
																"name": "IPoolOrganizer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "4019:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IPoolOrganizer_$694_$",
																	"typeString": "type(contract IPoolOrganizer)"
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4034:11:9",
															"memberName": "PoolDetails",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 571,
															"src": "4019:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_PoolDetails_$571_storage_ptr_$",
																"typeString": "type(struct IPoolOrganizer.PoolDetails storage pointer)"
															}
														},
														"id": 959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"4060:6:9",
															"4088:8:9",
															"4120:12:9",
															"4163:5:9",
															"4189:9:9",
															"4223:10:9",
															"4259:14:9",
															"4303:10:9",
															"4339:12:9",
															"4379:15:9",
															"4425:8:9",
															"4457:6:9",
															"4484:9:9",
															"4526:4:9"
														],
														"names": [
															"lender",
															"borrower",
															"creationTime",
															"vault",
															"loanToken",
															"assetToken",
															"repaymentToken",
															"loanAmount",
															"interestRate",
															"repaymentPeriod",
															"poolType",
															"funded",
															"loanState",
															"pool"
														],
														"nodeType": "FunctionCall",
														"src": "4019:528:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolDetails_$571_memory_ptr",
															"typeString": "struct IPoolOrganizer.PoolDetails memory"
														}
													},
													"src": "3999:548:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolDetails_$571_storage",
														"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "3999:548:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 966,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "4582:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 962,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "4557:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 964,
															"indexExpression": {
																"id": 963,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "4569:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4557:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4577:4:9",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4557:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4557:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "4557:30:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 972,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "4608:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 969,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "4597:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4603:4:9",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4597:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4597:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "4597:16:9"
											},
											{
												"expression": {
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 975,
															"name": "loanStates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "4623:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_enum$_LoanState_$537_$",
																"typeString": "mapping(address => enum IPoolOrganizer.LoanState)"
															}
														},
														"id": 977,
														"indexExpression": {
															"id": 976,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "4634:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4623:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_LoanState_$537",
															"typeString": "enum IPoolOrganizer.LoanState"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 978,
															"name": "LoanState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4642:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_LoanState_$537_$",
																"typeString": "type(enum IPoolOrganizer.LoanState)"
															}
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4652:7:9",
														"memberName": "CREATED",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 530,
														"src": "4642:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_LoanState_$537",
															"typeString": "enum IPoolOrganizer.LoanState"
														}
													},
													"src": "4623:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_LoanState_$537",
														"typeString": "enum IPoolOrganizer.LoanState"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "4623:36:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 983,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "4689:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 984,
															"name": "lender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "4695:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 985,
															"name": "borrower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "4703:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "4713:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 987,
															"name": "poolType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "4720:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_PoolType_$529",
																"typeString": "enum IPoolOrganizer.PoolType"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_enum$_PoolType_$529",
																"typeString": "enum IPoolOrganizer.PoolType"
															}
														],
														"id": 982,
														"name": "PoolRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "4674:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_enum$_PoolType_$529_$returns$__$",
															"typeString": "function (address,address,address,address,enum IPoolOrganizer.PoolType)"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4674:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 989,
												"nodeType": "EmitStatement",
												"src": "4669:60:9"
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "2741:722:9",
										"text": " @notice Registers a new pool with the specified details.\n @dev Registers a pool and emits a `PoolRegistered` event.\n @param pool The address of the pool.\n @param lender The address of the lender.\n @param borrower The address of the borrower.\n @param vault The address of the vault.\n @param loanToken The ERC20 token for the loan.\n @param assetToken The ERC20 token for the asset.\n @param repaymentToken The ERC20 token for the repayment.\n @param loanAmount The amount of the loan.\n @param interestRate The interest rate for the loan.\n @param repaymentPeriod The repayment period for the loan.\n @param poolType The type of the pool."
									},
									"functionSelector": "43756020",
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "registerPool",
									"nameLocation": "3477:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3507:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3499:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "3529:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3521:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "3553:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3545:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "3579:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3571:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3571:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "loanToken",
												"nameLocation": "3601:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3594:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 896,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 895,
														"name": "IERC20",
														"nameLocations": [
															"3594:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 456,
														"src": "3594:6:9"
													},
													"referencedDeclaration": 456,
													"src": "3594:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$456",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "assetToken",
												"nameLocation": "3627:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3620:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 899,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 898,
														"name": "IERC20",
														"nameLocations": [
															"3620:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 456,
														"src": "3620:6:9"
													},
													"referencedDeclaration": 456,
													"src": "3620:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$456",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "repaymentToken",
												"nameLocation": "3654:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3647:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 902,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 901,
														"name": "IERC20",
														"nameLocations": [
															"3647:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 456,
														"src": "3647:6:9"
													},
													"referencedDeclaration": 456,
													"src": "3647:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$456",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "loanAmount",
												"nameLocation": "3686:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3678:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3678:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "interestRate",
												"nameLocation": "3714:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3706:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3706:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "repaymentPeriod",
												"nameLocation": "3744:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3736:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3736:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "poolType",
												"nameLocation": "3778:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3769:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PoolType_$529",
													"typeString": "enum IPoolOrganizer.PoolType"
												},
												"typeName": {
													"id": 911,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 910,
														"name": "PoolType",
														"nameLocations": [
															"3769:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 529,
														"src": "3769:8:9"
													},
													"referencedDeclaration": 529,
													"src": "3769:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PoolType_$529",
														"typeString": "enum IPoolOrganizer.PoolType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3489:303:9"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3802:0:9"
									},
									"scope": 1741,
									"src": "3468:1268:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										640
									],
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "5018:228:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1001,
																		"name": "poolDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "5036:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$571_storage_$",
																			"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																		}
																	},
																	"id": 1003,
																	"indexExpression": {
																		"id": 1002,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 994,
																		"src": "5048:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5036:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$571_storage",
																		"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5054:6:9",
																"memberName": "lender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 539,
																"src": "5036:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5072:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5064:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1005,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5064:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5064:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5036:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c206e6f742072656769737465726564",
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5076:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															},
															"value": "Pool not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															}
														],
														"id": 1000,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5028:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5028:70:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "5028:70:9"
											},
											{
												"assignments": [
													1015
												],
												"declarations": [
													{
														"constant": false,
														"id": 1015,
														"mutability": "mutable",
														"name": "oldState",
														"nameLocation": "5118:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1032,
														"src": "5108:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_LoanState_$537",
															"typeString": "enum IPoolOrganizer.LoanState"
														},
														"typeName": {
															"id": 1014,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1013,
																"name": "LoanState",
																"nameLocations": [
																	"5108:9:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 537,
																"src": "5108:9:9"
															},
															"referencedDeclaration": 537,
															"src": "5108:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_LoanState_$537",
																"typeString": "enum IPoolOrganizer.LoanState"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1019,
												"initialValue": {
													"baseExpression": {
														"id": 1016,
														"name": "loanStates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "5129:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_enum$_LoanState_$537_$",
															"typeString": "mapping(address => enum IPoolOrganizer.LoanState)"
														}
													},
													"id": 1018,
													"indexExpression": {
														"id": 1017,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "5140:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5129:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_LoanState_$537",
														"typeString": "enum IPoolOrganizer.LoanState"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5108:37:9"
											},
											{
												"expression": {
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1020,
															"name": "loanStates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "5155:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_enum$_LoanState_$537_$",
																"typeString": "mapping(address => enum IPoolOrganizer.LoanState)"
															}
														},
														"id": 1022,
														"indexExpression": {
															"id": 1021,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "5166:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5155:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_LoanState_$537",
															"typeString": "enum IPoolOrganizer.LoanState"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1023,
														"name": "newState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "5174:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_LoanState_$537",
															"typeString": "enum IPoolOrganizer.LoanState"
														}
													},
													"src": "5155:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_LoanState_$537",
														"typeString": "enum IPoolOrganizer.LoanState"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "5155:27:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1027,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "5214:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1028,
															"name": "oldState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "5220:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_LoanState_$537",
																"typeString": "enum IPoolOrganizer.LoanState"
															}
														},
														{
															"id": 1029,
															"name": "newState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "5230:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_LoanState_$537",
																"typeString": "enum IPoolOrganizer.LoanState"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_enum$_LoanState_$537",
																"typeString": "enum IPoolOrganizer.LoanState"
															},
															{
																"typeIdentifier": "t_enum$_LoanState_$537",
																"typeString": "enum IPoolOrganizer.LoanState"
															}
														],
														"id": 1026,
														"name": "LoanStateUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "5197:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_enum$_LoanState_$537_$_t_enum$_LoanState_$537_$returns$__$",
															"typeString": "function (address,enum IPoolOrganizer.LoanState,enum IPoolOrganizer.LoanState)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5197:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "EmitStatement",
												"src": "5192:47:9"
											}
										]
									},
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "4742:203:9",
										"text": " @notice Updates the loan state of the specified pool and emits a `LoanStateUpdated` event.\n @param pool The address of the pool.\n @param newState The new state of the loan."
									},
									"functionSelector": "a956239b",
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateLoanState",
									"nameLocation": "4959:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "4983:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "4975:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4975:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "newState",
												"nameLocation": "4999:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "4989:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_LoanState_$537",
													"typeString": "enum IPoolOrganizer.LoanState"
												},
												"typeName": {
													"id": 996,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 995,
														"name": "LoanState",
														"nameLocations": [
															"4989:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 537,
														"src": "4989:9:9"
													},
													"referencedDeclaration": 537,
													"src": "4989:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_LoanState_$537",
														"typeString": "enum IPoolOrganizer.LoanState"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4974:34:9"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5018:0:9"
									},
									"scope": 1741,
									"src": "4950:296:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										685
									],
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "5466:128:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1040,
																		"name": "poolDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "5484:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$571_storage_$",
																			"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																		}
																	},
																	"id": 1042,
																	"indexExpression": {
																		"id": 1041,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1036,
																		"src": "5496:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5484:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$571_storage",
																		"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5502:6:9",
																"memberName": "lender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 539,
																"src": "5484:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5520:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5512:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1044,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5512:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5512:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5484:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c206e6f742072656769737465726564",
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5524:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															},
															"value": "Pool not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															}
														],
														"id": 1039,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5476:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5476:70:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "5476:70:9"
											},
											{
												"expression": {
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1052,
																"name": "poolDetails",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "5556:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$571_storage_$",
																	"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																}
															},
															"id": 1054,
															"indexExpression": {
																"id": 1053,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "5568:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5556:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolDetails_$571_storage",
																"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
															}
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5574:6:9",
														"memberName": "funded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 565,
														"src": "5556:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1056,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5583:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5556:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "5556:31:9"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "5252:160:9",
										"text": " @notice Marks a pool as funded.\n @dev Marks the specified pool as funded.\n @param pool The address of the pool to mark as funded."
									},
									"functionSelector": "1f2f2e14",
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "markPoolAsFunded",
									"nameLocation": "5426:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "5451:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "5443:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5443:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5442:14:9"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5466:0:9"
									},
									"scope": 1741,
									"src": "5417:177:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										631
									],
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "5844:40:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1069,
														"name": "loanStates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "5861:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_enum$_LoanState_$537_$",
															"typeString": "mapping(address => enum IPoolOrganizer.LoanState)"
														}
													},
													"id": 1071,
													"indexExpression": {
														"id": 1070,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "5872:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5861:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_LoanState_$537",
														"typeString": "enum IPoolOrganizer.LoanState"
													}
												},
												"functionReturnParameters": 1068,
												"id": 1072,
												"nodeType": "Return",
												"src": "5854:23:9"
											}
										]
									},
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "5600:169:9",
										"text": " @notice Gets the current loan state of a specific pool.\n @param pool The address of the pool.\n @return The current loan state of the pool."
									},
									"functionSelector": "c81c3bef",
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLoanState",
									"nameLocation": "5783:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "5804:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "5796:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5796:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5795:14:9"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "5833:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_LoanState_$537",
													"typeString": "enum IPoolOrganizer.LoanState"
												},
												"typeName": {
													"id": 1066,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1065,
														"name": "LoanState",
														"nameLocations": [
															"5833:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 537,
														"src": "5833:9:9"
													},
													"referencedDeclaration": 537,
													"src": "5833:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_LoanState_$537",
														"typeString": "enum IPoolOrganizer.LoanState"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5832:11:9"
									},
									"scope": 1741,
									"src": "5774:110:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "6203:385:9",
										"statements": [
											{
												"assignments": [
													1088
												],
												"declarations": [
													{
														"constant": false,
														"id": 1088,
														"mutability": "mutable",
														"name": "lenderPoolsArray",
														"nameLocation": "6230:16:9",
														"nodeType": "VariableDeclaration",
														"scope": 1132,
														"src": "6213:33:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1086,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6213:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1087,
															"nodeType": "ArrayTypeName",
															"src": "6213:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1092,
												"initialValue": {
													"baseExpression": {
														"id": 1089,
														"name": "lenderPools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "6249:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(address => address[] storage ref)"
														}
													},
													"id": 1091,
													"indexExpression": {
														"id": 1090,
														"name": "lender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "6261:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6249:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6213:55:9"
											},
											{
												"assignments": [
													1098
												],
												"declarations": [
													{
														"constant": false,
														"id": 1098,
														"mutability": "mutable",
														"name": "details",
														"nameLocation": "6326:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1132,
														"src": "6278:55:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolDetails_$571_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IPoolOrganizer.PoolDetails[]"
														},
														"typeName": {
															"baseType": {
																"id": 1096,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1095,
																	"name": "IPoolOrganizer.PoolDetails",
																	"nameLocations": [
																		"6278:14:9",
																		"6293:11:9"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 571,
																	"src": "6278:26:9"
																},
																"referencedDeclaration": 571,
																"src": "6278:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolDetails_$571_storage_ptr",
																	"typeString": "struct IPoolOrganizer.PoolDetails"
																}
															},
															"id": 1097,
															"nodeType": "ArrayTypeName",
															"src": "6278:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolDetails_$571_storage_$dyn_storage_ptr",
																"typeString": "struct IPoolOrganizer.PoolDetails[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1106,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1103,
																"name": "lenderPoolsArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "6386:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6403:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6386:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "6336:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PoolDetails_$571_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IPoolOrganizer.PoolDetails memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1100,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1099,
																	"name": "IPoolOrganizer.PoolDetails",
																	"nameLocations": [
																		"6340:14:9",
																		"6355:11:9"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 571,
																	"src": "6340:26:9"
																},
																"referencedDeclaration": 571,
																"src": "6340:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolDetails_$571_storage_ptr",
																	"typeString": "struct IPoolOrganizer.PoolDetails"
																}
															},
															"id": 1101,
															"nodeType": "ArrayTypeName",
															"src": "6340:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolDetails_$571_storage_$dyn_storage_ptr",
																"typeString": "struct IPoolOrganizer.PoolDetails[]"
															}
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6336:87:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PoolDetails_$571_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IPoolOrganizer.PoolDetails memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6278:145:9"
											},
											{
												"body": {
													"id": 1128,
													"nodeType": "Block",
													"src": "6488:70:9",
													"statements": [
														{
															"expression": {
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1118,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "6502:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PoolDetails_$571_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct IPoolOrganizer.PoolDetails memory[] memory"
																		}
																	},
																	"id": 1120,
																	"indexExpression": {
																		"id": 1119,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "6510:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6502:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$571_memory_ptr",
																		"typeString": "struct IPoolOrganizer.PoolDetails memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1121,
																		"name": "poolDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "6515:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$571_storage_$",
																			"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																		}
																	},
																	"id": 1125,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1122,
																			"name": "lenderPoolsArray",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1088,
																			"src": "6527:16:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1124,
																		"indexExpression": {
																			"id": 1123,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1108,
																			"src": "6544:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6527:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6515:32:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$571_storage",
																		"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																	}
																},
																"src": "6502:45:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolDetails_$571_memory_ptr",
																	"typeString": "struct IPoolOrganizer.PoolDetails memory"
																}
															},
															"id": 1127,
															"nodeType": "ExpressionStatement",
															"src": "6502:45:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1111,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "6454:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1112,
															"name": "lenderPoolsArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "6458:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6475:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6458:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6454:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1129,
												"initializationExpression": {
													"assignments": [
														1108
													],
													"declarations": [
														{
															"constant": false,
															"id": 1108,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6447:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1129,
															"src": "6439:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1107,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6439:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1110,
													"initialValue": {
														"hexValue": "30",
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6451:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6439:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6483:3:9",
														"subExpression": {
															"id": 1115,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "6483:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1117,
													"nodeType": "ExpressionStatement",
													"src": "6483:3:9"
												},
												"nodeType": "ForStatement",
												"src": "6434:124:9"
											},
											{
												"expression": {
													"id": 1130,
													"name": "details",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1098,
													"src": "6574:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PoolDetails_$571_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IPoolOrganizer.PoolDetails memory[] memory"
													}
												},
												"functionReturnParameters": 1083,
												"id": 1131,
												"nodeType": "Return",
												"src": "6567:14:9"
											}
										]
									},
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "5890:171:9",
										"text": " @notice Gets the details of all pools associated with a lender.\n @param lender The address of the lender.\n @return An array of pool details."
									},
									"functionSelector": "52fc9b0e",
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllLenderPoolDetails",
									"nameLocation": "6075:23:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "6107:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "6099:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6099:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6098:16:9"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "6162:35:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PoolDetails_$571_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IPoolOrganizer.PoolDetails[]"
												},
												"typeName": {
													"baseType": {
														"id": 1080,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1079,
															"name": "IPoolOrganizer.PoolDetails",
															"nameLocations": [
																"6162:14:9",
																"6177:11:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 571,
															"src": "6162:26:9"
														},
														"referencedDeclaration": 571,
														"src": "6162:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolDetails_$571_storage_ptr",
															"typeString": "struct IPoolOrganizer.PoolDetails"
														}
													},
													"id": 1081,
													"nodeType": "ArrayTypeName",
													"src": "6162:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PoolDetails_$571_storage_$dyn_storage_ptr",
														"typeString": "struct IPoolOrganizer.PoolDetails[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6161:37:9"
									},
									"scope": 1741,
									"src": "6066:522:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "6878:47:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1142,
														"name": "borrowerPools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "6895:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(address => address[] storage ref)"
														}
													},
													"id": 1144,
													"indexExpression": {
														"id": 1143,
														"name": "borrower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "6909:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6895:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1141,
												"id": 1145,
												"nodeType": "Return",
												"src": "6888:30:9"
											}
										]
									},
									"documentation": {
										"id": 1134,
										"nodeType": "StructuredDocumentation",
										"src": "6594:164:9",
										"text": " @notice Gets all pools associated with a borrower.\n @param borrower The address of the borrower.\n @return An array of pool addresses."
									},
									"functionSelector": "e7ef32f7",
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolsByBorrower",
									"nameLocation": "6772:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "6799:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "6791:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6791:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6790:18:9"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "6856:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1138,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6856:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1139,
													"nodeType": "ArrayTypeName",
													"src": "6856:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6855:18:9"
									},
									"scope": 1741,
									"src": "6763:162:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "7251:397:9",
										"statements": [
											{
												"assignments": [
													1161
												],
												"declarations": [
													{
														"constant": false,
														"id": 1161,
														"mutability": "mutable",
														"name": "borrowerPoolsArray",
														"nameLocation": "7278:18:9",
														"nodeType": "VariableDeclaration",
														"scope": 1205,
														"src": "7261:35:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1159,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7261:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1160,
															"nodeType": "ArrayTypeName",
															"src": "7261:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1165,
												"initialValue": {
													"baseExpression": {
														"id": 1162,
														"name": "borrowerPools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "7299:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(address => address[] storage ref)"
														}
													},
													"id": 1164,
													"indexExpression": {
														"id": 1163,
														"name": "borrower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "7313:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7299:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7261:61:9"
											},
											{
												"assignments": [
													1171
												],
												"declarations": [
													{
														"constant": false,
														"id": 1171,
														"mutability": "mutable",
														"name": "details",
														"nameLocation": "7380:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1205,
														"src": "7332:55:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolDetails_$571_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IPoolOrganizer.PoolDetails[]"
														},
														"typeName": {
															"baseType": {
																"id": 1169,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1168,
																	"name": "IPoolOrganizer.PoolDetails",
																	"nameLocations": [
																		"7332:14:9",
																		"7347:11:9"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 571,
																	"src": "7332:26:9"
																},
																"referencedDeclaration": 571,
																"src": "7332:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolDetails_$571_storage_ptr",
																	"typeString": "struct IPoolOrganizer.PoolDetails"
																}
															},
															"id": 1170,
															"nodeType": "ArrayTypeName",
															"src": "7332:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolDetails_$571_storage_$dyn_storage_ptr",
																"typeString": "struct IPoolOrganizer.PoolDetails[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1179,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1176,
																"name": "borrowerPoolsArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1161,
																"src": "7440:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7459:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "7440:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1175,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "7390:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PoolDetails_$571_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IPoolOrganizer.PoolDetails memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1173,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1172,
																	"name": "IPoolOrganizer.PoolDetails",
																	"nameLocations": [
																		"7394:14:9",
																		"7409:11:9"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 571,
																	"src": "7394:26:9"
																},
																"referencedDeclaration": 571,
																"src": "7394:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolDetails_$571_storage_ptr",
																	"typeString": "struct IPoolOrganizer.PoolDetails"
																}
															},
															"id": 1174,
															"nodeType": "ArrayTypeName",
															"src": "7394:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolDetails_$571_storage_$dyn_storage_ptr",
																"typeString": "struct IPoolOrganizer.PoolDetails[]"
															}
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7390:89:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PoolDetails_$571_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IPoolOrganizer.PoolDetails memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7332:147:9"
											},
											{
												"body": {
													"id": 1201,
													"nodeType": "Block",
													"src": "7546:72:9",
													"statements": [
														{
															"expression": {
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1191,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1171,
																		"src": "7560:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PoolDetails_$571_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct IPoolOrganizer.PoolDetails memory[] memory"
																		}
																	},
																	"id": 1193,
																	"indexExpression": {
																		"id": 1192,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1181,
																		"src": "7568:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7560:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$571_memory_ptr",
																		"typeString": "struct IPoolOrganizer.PoolDetails memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1194,
																		"name": "poolDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "7573:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$571_storage_$",
																			"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																		}
																	},
																	"id": 1198,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1195,
																			"name": "borrowerPoolsArray",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1161,
																			"src": "7585:18:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1197,
																		"indexExpression": {
																			"id": 1196,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1181,
																			"src": "7604:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7585:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7573:34:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$571_storage",
																		"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																	}
																},
																"src": "7560:47:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolDetails_$571_memory_ptr",
																	"typeString": "struct IPoolOrganizer.PoolDetails memory"
																}
															},
															"id": 1200,
															"nodeType": "ExpressionStatement",
															"src": "7560:47:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1184,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "7510:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1185,
															"name": "borrowerPoolsArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "7514:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7533:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7514:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7510:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1202,
												"initializationExpression": {
													"assignments": [
														1181
													],
													"declarations": [
														{
															"constant": false,
															"id": 1181,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7503:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1202,
															"src": "7495:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1180,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7495:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1183,
													"initialValue": {
														"hexValue": "30",
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7507:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7495:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7541:3:9",
														"subExpression": {
															"id": 1188,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "7541:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1190,
													"nodeType": "ExpressionStatement",
													"src": "7541:3:9"
												},
												"nodeType": "ForStatement",
												"src": "7490:128:9"
											},
											{
												"expression": {
													"id": 1203,
													"name": "details",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1171,
													"src": "7634:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PoolDetails_$571_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IPoolOrganizer.PoolDetails memory[] memory"
													}
												},
												"functionReturnParameters": 1156,
												"id": 1204,
												"nodeType": "Return",
												"src": "7627:14:9"
											}
										]
									},
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "6931:177:9",
										"text": " @notice Gets the details of all pools associated with a borrower.\n @param borrower The address of the borrower.\n @return An array of pool details."
									},
									"functionSelector": "ec209544",
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBorrowerPoolDetails",
									"nameLocation": "7122:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "7153:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "7145:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7145:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7144:18:9"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "7210:35:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PoolDetails_$571_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IPoolOrganizer.PoolDetails[]"
												},
												"typeName": {
													"baseType": {
														"id": 1153,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1152,
															"name": "IPoolOrganizer.PoolDetails",
															"nameLocations": [
																"7210:14:9",
																"7225:11:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 571,
															"src": "7210:26:9"
														},
														"referencedDeclaration": 571,
														"src": "7210:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolDetails_$571_storage_ptr",
															"typeString": "struct IPoolOrganizer.PoolDetails"
														}
													},
													"id": 1154,
													"nodeType": "ArrayTypeName",
													"src": "7210:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PoolDetails_$571_storage_$dyn_storage_ptr",
														"typeString": "struct IPoolOrganizer.PoolDetails[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:37:9"
									},
									"scope": 1741,
									"src": "7113:535:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										607
									],
									"body": {
										"id": 1255,
										"nodeType": "Block",
										"src": "7891:334:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1213,
																		"name": "poolDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "7909:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$571_storage_$",
																			"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																		}
																	},
																	"id": 1215,
																	"indexExpression": {
																		"id": 1214,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1209,
																		"src": "7921:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7909:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$571_storage",
																		"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																	}
																},
																"id": 1216,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7927:6:9",
																"memberName": "lender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 539,
																"src": "7909:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7945:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7937:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1217,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7937:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7937:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7909:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c206e6f742072656769737465726564",
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7949:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															},
															"value": "Pool not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															}
														],
														"id": 1212,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7901:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7901:70:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1224,
												"nodeType": "ExpressionStatement",
												"src": "7901:70:9"
											},
											{
												"assignments": [
													1226
												],
												"declarations": [
													{
														"constant": false,
														"id": 1226,
														"mutability": "mutable",
														"name": "lender",
														"nameLocation": "7990:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1255,
														"src": "7982:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1225,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7982:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1231,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1227,
															"name": "poolDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "7999:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$571_storage_$",
																"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
															}
														},
														"id": 1229,
														"indexExpression": {
															"id": 1228,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "8011:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7999:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolDetails_$571_storage",
															"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8017:6:9",
													"memberName": "lender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 539,
													"src": "7999:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7982:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1233,
															"name": "lender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "8060:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1234,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "8068:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1232,
														"name": "_removePoolFromLenderArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "8033:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8033:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "8033:40:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1238,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "8108:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1237,
														"name": "_removePoolFromMainArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "8083:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8083:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "8083:30:9"
											},
											{
												"expression": {
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "8124:24:9",
													"subExpression": {
														"baseExpression": {
															"id": 1241,
															"name": "poolDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "8131:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$571_storage_$",
																"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
															}
														},
														"id": 1243,
														"indexExpression": {
															"id": 1242,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "8143:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8131:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolDetails_$571_storage",
															"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "8124:24:9"
											},
											{
												"expression": {
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "8158:23:9",
													"subExpression": {
														"baseExpression": {
															"id": 1246,
															"name": "loanStates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "8165:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_enum$_LoanState_$537_$",
																"typeString": "mapping(address => enum IPoolOrganizer.LoanState)"
															}
														},
														"id": 1248,
														"indexExpression": {
															"id": 1247,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "8176:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8165:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_LoanState_$537",
															"typeString": "enum IPoolOrganizer.LoanState"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "8158:23:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1252,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "8213:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1251,
														"name": "PoolDeregistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "8196:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8196:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1254,
												"nodeType": "EmitStatement",
												"src": "8191:27:9"
											}
										]
									},
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "7654:185:9",
										"text": " @notice Deregisters a pool.\n @dev Deregisters the specified pool and emits a `PoolDeregistered` event.\n @param pool The address of the pool to deregister."
									},
									"functionSelector": "7e72c7d7",
									"id": 1256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deregisterPool",
									"nameLocation": "7853:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "7876:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "7868:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7868:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7867:14:9"
									},
									"returnParameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7891:0:9"
									},
									"scope": 1741,
									"src": "7844:381:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										693
									],
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "8477:560:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1265,
																		"name": "poolDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "8495:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$571_storage_$",
																			"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																		}
																	},
																	"id": 1267,
																	"indexExpression": {
																		"id": 1266,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1259,
																		"src": "8507:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8495:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$571_storage",
																		"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																	}
																},
																"id": 1268,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8513:6:9",
																"memberName": "lender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 539,
																"src": "8495:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8531:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8523:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1269,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8523:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8523:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8495:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c206e6f742072656769737465726564",
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8535:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															},
															"value": "Pool not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															}
														],
														"id": 1264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8487:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8487:70:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "8487:70:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1278,
																"name": "newBorrower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "8588:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8611:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8603:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1279,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8603:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8603:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8588:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f72726f7765722063616e6e6f7420626520746865207a65726f2061646472657373",
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8627:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed40e154fc5947a1352af7918961f491c7b5e4c2c2d9ffe290fde6912136551f",
																"typeString": "literal_string \"Borrower cannot be the zero address\""
															},
															"value": "Borrower cannot be the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed40e154fc5947a1352af7918961f491c7b5e4c2c2d9ffe290fde6912136551f",
																"typeString": "literal_string \"Borrower cannot be the zero address\""
															}
														],
														"id": 1277,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8567:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8567:107:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1286,
												"nodeType": "ExpressionStatement",
												"src": "8567:107:9"
											},
											{
												"assignments": [
													1288
												],
												"declarations": [
													{
														"constant": false,
														"id": 1288,
														"mutability": "mutable",
														"name": "currentBorrower",
														"nameLocation": "8693:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 1326,
														"src": "8685:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1287,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8685:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1293,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1289,
															"name": "poolDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "8711:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$571_storage_$",
																"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
															}
														},
														"id": 1291,
														"indexExpression": {
															"id": 1290,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "8723:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8711:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolDetails_$571_storage",
															"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8729:8:9",
													"memberName": "borrower",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 541,
													"src": "8711:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8685:52:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1294,
														"name": "currentBorrower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1288,
														"src": "8751:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1295,
														"name": "newBorrower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "8770:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8751:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1325,
												"nodeType": "IfStatement",
												"src": "8747:284:9",
												"trueBody": {
													"id": 1324,
													"nodeType": "Block",
													"src": "8783:248:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1297,
																	"name": "currentBorrower",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1288,
																	"src": "8801:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8828:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8820:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1298,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8820:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8820:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "8801:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1309,
															"nodeType": "IfStatement",
															"src": "8797:119:9",
															"trueBody": {
																"id": 1308,
																"nodeType": "Block",
																"src": "8832:84:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1304,
																					"name": "currentBorrower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1288,
																					"src": "8879:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1305,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1259,
																					"src": "8896:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1303,
																				"name": "_removePoolFromBorrowerArray",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1740,
																				"src": "8850:28:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
																					"typeString": "function (address,address)"
																				}
																			},
																			"id": 1306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8850:51:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1307,
																		"nodeType": "ExpressionStatement",
																		"src": "8850:51:9"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1314,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1259,
																		"src": "8961:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 1310,
																			"name": "borrowerPools",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 819,
																			"src": "8929:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 1312,
																		"indexExpression": {
																			"id": 1311,
																			"name": "newBorrower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1261,
																			"src": "8943:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8929:26:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8956:4:9",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "8929:31:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8929:37:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1316,
															"nodeType": "ExpressionStatement",
															"src": "8929:37:9"
														},
														{
															"expression": {
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1317,
																			"name": "poolDetails",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 805,
																			"src": "8980:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$571_storage_$",
																				"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																			}
																		},
																		"id": 1319,
																		"indexExpression": {
																			"id": 1318,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1259,
																			"src": "8992:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8980:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolDetails_$571_storage",
																			"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																		}
																	},
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8998:8:9",
																	"memberName": "borrower",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 541,
																	"src": "8980:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1321,
																	"name": "newBorrower",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1261,
																	"src": "9009:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "8980:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1323,
															"nodeType": "ExpressionStatement",
															"src": "8980:40:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "8231:169:9",
										"text": " @notice Sets the borrower for a specified pool.\n @param pool The address of the pool.\n @param newBorrower The address of the new borrower."
									},
									"functionSelector": "37e238c5",
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBorrowerForPool",
									"nameLocation": "8414:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "8441:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "8433:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8433:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "newBorrower",
												"nameLocation": "8455:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "8447:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8447:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8432:35:9"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8477:0:9"
									},
									"scope": 1741,
									"src": "8405:632:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										679
									],
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "9456:421:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1339,
																"name": "_vaultManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "9487:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9512:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9504:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1340,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9504:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9504:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9487:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5661756c744d616e616765722063616e6e6f74206265207a65726f2061646472657373",
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9528:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3300f91172421bdc36f79d184a3d6d7dc2e019f7fb0814aeb4306f4cacbe452e",
																"typeString": "literal_string \"VaultManager cannot be zero address\""
															},
															"value": "VaultManager cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3300f91172421bdc36f79d184a3d6d7dc2e019f7fb0814aeb4306f4cacbe452e",
																"typeString": "literal_string \"VaultManager cannot be zero address\""
															}
														],
														"id": 1338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9466:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9466:109:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1347,
												"nodeType": "ExpressionStatement",
												"src": "9466:109:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1349,
																"name": "_rewardManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1332,
																"src": "9606:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9632:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9624:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1350,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9624:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9624:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9606:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265776172644d616e616765722063616e6e6f74206265207a65726f2061646472657373",
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9648:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fd60161d2dbc5f20e9acfa92ab57db75891d1d8ebbf7459220687d0a65d0b331",
																"typeString": "literal_string \"RewardManager cannot be zero address\""
															},
															"value": "RewardManager cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fd60161d2dbc5f20e9acfa92ab57db75891d1d8ebbf7459220687d0a65d0b331",
																"typeString": "literal_string \"RewardManager cannot be zero address\""
															}
														],
														"id": 1348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9585:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9585:111:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1357,
												"nodeType": "ExpressionStatement",
												"src": "9585:111:9"
											},
											{
												"expression": {
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1358,
														"name": "vaultManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "9707:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVaultManager_$775",
															"typeString": "contract IVaultManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1360,
																"name": "_vaultManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "9736:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1359,
															"name": "IVaultManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "9722:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IVaultManager_$775_$",
																"typeString": "type(contract IVaultManager)"
															}
														},
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9722:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVaultManager_$775",
															"typeString": "contract IVaultManager"
														}
													},
													"src": "9707:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVaultManager_$775",
														"typeString": "contract IVaultManager"
													}
												},
												"id": 1363,
												"nodeType": "ExpressionStatement",
												"src": "9707:43:9"
											},
											{
												"expression": {
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1364,
														"name": "rewardManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "9760:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRewardManager_$727",
															"typeString": "contract IRewardManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1366,
																"name": "_rewardManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1332,
																"src": "9791:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1365,
															"name": "IRewardManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "9776:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IRewardManager_$727_$",
																"typeString": "type(contract IRewardManager)"
															}
														},
														"id": 1367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9776:30:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRewardManager_$727",
															"typeString": "contract IRewardManager"
														}
													},
													"src": "9760:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IRewardManager_$727",
														"typeString": "contract IRewardManager"
													}
												},
												"id": 1369,
												"nodeType": "ExpressionStatement",
												"src": "9760:46:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1371,
															"name": "_vaultManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "9840:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1372,
															"name": "_rewardManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "9855:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1370,
														"name": "ManagerRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "9822:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9822:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1374,
												"nodeType": "EmitStatement",
												"src": "9817:53:9"
											}
										]
									},
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "9043:277:9",
										"text": " @notice Registers the vault and reward managers.\n @dev Registers the specified managers and emits a `ManagerRegistered` event.\n @param _vaultManager The address of the vault manager.\n @param _rewardManager The address of the reward manager."
									},
									"functionSelector": "c489579d",
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1335,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "9432:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1336,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1334,
												"name": "onlyRole",
												"nameLocations": [
													"9423:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "9423:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "9423:28:9"
										}
									],
									"name": "registerManagers",
									"nameLocation": "9334:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "_vaultManager",
												"nameLocation": "9359:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "9351:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9351:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "_rewardManager",
												"nameLocation": "9382:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "9374:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9374:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9350:47:9"
									},
									"returnParameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9456:0:9"
									},
									"scope": 1741,
									"src": "9325:552:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1394,
										"nodeType": "Block",
										"src": "10088:71:9",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 1386,
																	"name": "vaultManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "10114:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IVaultManager_$775",
																		"typeString": "contract IVaultManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IVaultManager_$775",
																		"typeString": "contract IVaultManager"
																	}
																],
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10106:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1384,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10106:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10106:21:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1390,
																	"name": "rewardManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "10137:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IRewardManager_$727",
																		"typeString": "contract IRewardManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IRewardManager_$727",
																		"typeString": "contract IRewardManager"
																	}
																],
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10129:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1388,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10129:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10129:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 1392,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10105:47:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"functionReturnParameters": 1383,
												"id": 1393,
												"nodeType": "Return",
												"src": "10098:54:9"
											}
										]
									},
									"documentation": {
										"id": 1377,
										"nodeType": "StructuredDocumentation",
										"src": "9883:136:9",
										"text": " @notice Gets the addresses of the registered managers.\n @return The addresses of the vault and reward managers."
									},
									"functionSelector": "a8d088bb",
									"id": 1395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getManagers",
									"nameLocation": "10033:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10044:2:9"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "10070:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10070:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "10079:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10079:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10069:18:9"
									},
									"scope": 1741,
									"src": "10024:135:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										613
									],
									"body": {
										"id": 1404,
										"nodeType": "Block",
										"src": "10338:36:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1401,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "10355:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "10361:6:9",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "10355:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1400,
												"id": 1403,
												"nodeType": "Return",
												"src": "10348:19:9"
											}
										]
									},
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "10165:111:9",
										"text": " @notice Gets the total number of registered pools.\n @return The total number of pools."
									},
									"functionSelector": "d3ffe67a",
									"id": 1405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalPools",
									"nameLocation": "10290:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10303:2:9"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "10329:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10329:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10328:9:9"
									},
									"scope": 1741,
									"src": "10281:93:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										622
									],
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "10654:43:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1414,
														"name": "lenderPools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "10671:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(address => address[] storage ref)"
														}
													},
													"id": 1416,
													"indexExpression": {
														"id": 1415,
														"name": "lender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1408,
														"src": "10683:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10671:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1413,
												"id": 1417,
												"nodeType": "Return",
												"src": "10664:26:9"
											}
										]
									},
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "10380:158:9",
										"text": " @notice Gets all pools associated with a lender.\n @param lender The address of the lender.\n @return An array of pool addresses."
									},
									"functionSelector": "24a44efb",
									"id": 1419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolsByLender",
									"nameLocation": "10552:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "10577:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "10569:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10569:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10568:16:9"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "10632:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1410,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10632:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1411,
													"nodeType": "ArrayTypeName",
													"src": "10632:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10631:18:9"
									},
									"scope": 1741,
									"src": "10543:154:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										649
									],
									"body": {
										"id": 1445,
										"nodeType": "Block",
										"src": "10980:121:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1429,
																		"name": "poolDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "10998:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$571_storage_$",
																			"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																		}
																	},
																	"id": 1431,
																	"indexExpression": {
																		"id": 1430,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1422,
																		"src": "11010:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10998:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$571_storage",
																		"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																	}
																},
																"id": 1432,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11016:6:9",
																"memberName": "lender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 539,
																"src": "10998:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11034:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11026:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1433,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11026:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11026:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10998:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c206e6f742072656769737465726564",
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11038:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															},
															"value": "Pool not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															}
														],
														"id": 1428,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10990:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10990:70:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1440,
												"nodeType": "ExpressionStatement",
												"src": "10990:70:9"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1441,
														"name": "poolDetails",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "11077:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$571_storage_$",
															"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
														}
													},
													"id": 1443,
													"indexExpression": {
														"id": 1442,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1422,
														"src": "11089:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11077:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolDetails_$571_storage",
														"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
													}
												},
												"functionReturnParameters": 1427,
												"id": 1444,
												"nodeType": "Return",
												"src": "11070:24:9"
											}
										]
									},
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "10703:148:9",
										"text": " @notice Gets the details of a specified pool.\n @param pool The address of the pool.\n @return The details of the pool."
									},
									"functionSelector": "d3e90fa0",
									"id": 1446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolDetails",
									"nameLocation": "10865:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "10888:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "10880:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10880:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10879:14:9"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "10941:33:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolDetails_$571_memory_ptr",
													"typeString": "struct IPoolOrganizer.PoolDetails"
												},
												"typeName": {
													"id": 1425,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1424,
														"name": "IPoolOrganizer.PoolDetails",
														"nameLocations": [
															"10941:14:9",
															"10956:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 571,
														"src": "10941:26:9"
													},
													"referencedDeclaration": 571,
													"src": "10941:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolDetails_$571_storage_ptr",
														"typeString": "struct IPoolOrganizer.PoolDetails"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10940:35:9"
									},
									"scope": 1741,
									"src": "10856:245:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										657
									],
									"body": {
										"id": 1470,
										"nodeType": "Block",
										"src": "11341:162:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1455,
																	"name": "poolVaults",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "11372:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 1457,
																"indexExpression": {
																	"id": 1456,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "11383:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11372:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11400:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11392:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1458,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11392:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11392:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11372:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c206e6f742072656769737465726564206f7220686173206e6f207661756c74",
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11416:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_39a3b1530e3b6596e085e382bff955d043a269a2081635a9d861923ef05dbbcd",
																"typeString": "literal_string \"Pool not registered or has no vault\""
															},
															"value": "Pool not registered or has no vault"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_39a3b1530e3b6596e085e382bff955d043a269a2081635a9d861923ef05dbbcd",
																"typeString": "literal_string \"Pool not registered or has no vault\""
															}
														],
														"id": 1454,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11351:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11351:112:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1465,
												"nodeType": "ExpressionStatement",
												"src": "11351:112:9"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1466,
														"name": "poolVaults",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "11480:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 1468,
													"indexExpression": {
														"id": 1467,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1449,
														"src": "11491:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11480:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1453,
												"id": 1469,
												"nodeType": "Return",
												"src": "11473:23:9"
											}
										]
									},
									"documentation": {
										"id": 1447,
										"nodeType": "StructuredDocumentation",
										"src": "11107:158:9",
										"text": " @notice Gets the vault address associated with a pool.\n @param pool The address of the pool.\n @return The address of the vault."
									},
									"functionSelector": "7570e389",
									"id": 1471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVaultForPool",
									"nameLocation": "11279:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "11303:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "11295:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11295:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11294:14:9"
									},
									"returnParameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "11332:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11332:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11331:9:9"
									},
									"scope": 1741,
									"src": "11270:233:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1480,
										"nodeType": "Block",
										"src": "11691:29:9",
										"statements": [
											{
												"expression": {
													"id": 1478,
													"name": "pools",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 800,
													"src": "11708:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1477,
												"id": 1479,
												"nodeType": "Return",
												"src": "11701:12:9"
											}
										]
									},
									"documentation": {
										"id": 1472,
										"nodeType": "StructuredDocumentation",
										"src": "11509:105:9",
										"text": " @notice Gets all registered pool addresses.\n @return An array of pool addresses."
									},
									"functionSelector": "c56f1b44",
									"id": 1481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllPoolAddresses",
									"nameLocation": "11628:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11647:2:9"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "11673:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1474,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "11673:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1475,
													"nodeType": "ArrayTypeName",
													"src": "11673:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11672:18:9"
									},
									"scope": 1741,
									"src": "11619:101:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										663
									],
									"body": {
										"id": 1506,
										"nodeType": "Block",
										"src": "11923:234:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1489,
																	"name": "DEFAULT_ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "11962:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1490,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11982:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11986:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11982:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1488,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "11954:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11954:39:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420616e2061646d696e",
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12007:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															},
															"value": "Caller is not an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															}
														],
														"id": 1487,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11933:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11933:108:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1495,
												"nodeType": "ExpressionStatement",
												"src": "11933:108:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1497,
															"name": "POOL_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "12061:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1498,
															"name": "factoryAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "12080:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1496,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "12051:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12051:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1500,
												"nodeType": "ExpressionStatement",
												"src": "12051:44:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1502,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "12115:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1503,
															"name": "factoryAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "12135:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1501,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "12105:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12105:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "12105:45:9"
											}
										]
									},
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "11726:131:9",
										"text": " @notice Grants factory access to the specified address.\n @param factoryAddress The address of the factory."
									},
									"functionSelector": "5d102df7",
									"id": 1507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "grantFactoryAccess",
									"nameLocation": "11871:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "factoryAddress",
												"nameLocation": "11898:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "11890:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11890:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11889:24:9"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11923:0:9"
									},
									"scope": 1741,
									"src": "11862:295:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										671
									],
									"body": {
										"id": 1568,
										"nodeType": "Block",
										"src": "12477:371:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1516,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1510,
																	"src": "12495:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12511:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12503:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1517,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12503:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12503:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "12495:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1522,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "12517:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12534:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12526:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1523,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12526:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12526:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "12517:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "12495:41:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616464726573736573",
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12538:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee597f13de1ba23a7961edbe397251ba0565f39f3d995b5348c732d160eca14f",
																"typeString": "literal_string \"Invalid addresses\""
															},
															"value": "Invalid addresses"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee597f13de1ba23a7961edbe397251ba0565f39f3d995b5348c732d160eca14f",
																"typeString": "literal_string \"Invalid addresses\""
															}
														],
														"id": 1515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12487:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12487:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "12487:71:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1533,
																		"name": "poolDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "12576:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$571_storage_$",
																			"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																		}
																	},
																	"id": 1535,
																	"indexExpression": {
																		"id": 1534,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1510,
																		"src": "12588:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12576:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$571_storage",
																		"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																	}
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12594:6:9",
																"memberName": "lender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 539,
																"src": "12576:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12612:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12604:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1537,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12604:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12604:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12576:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c206e6f742072656769737465726564",
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12616:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															},
															"value": "Pool not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															}
														],
														"id": 1532,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12568:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12568:70:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "12568:70:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1546,
																	"name": "poolVaults",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "12669:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 1548,
																"indexExpression": {
																	"id": 1547,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1510,
																	"src": "12680:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12669:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12697:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12689:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1549,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12689:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12689:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12669:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5661756c7420616c7265616479207265676973746572656420666f72207468697320706f6f6c",
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12713:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d429b56e51591333ba49e70031a7e747fbb1110c7c7977c922e5e8e59ef9580",
																"typeString": "literal_string \"Vault already registered for this pool\""
															},
															"value": "Vault already registered for this pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d429b56e51591333ba49e70031a7e747fbb1110c7c7977c922e5e8e59ef9580",
																"typeString": "literal_string \"Vault already registered for this pool\""
															}
														],
														"id": 1545,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12648:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12648:115:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "12648:115:9"
											},
											{
												"expression": {
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1557,
															"name": "poolVaults",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "12774:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1559,
														"indexExpression": {
															"id": 1558,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "12785:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12774:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1560,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "12793:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12774:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1562,
												"nodeType": "ExpressionStatement",
												"src": "12774:24:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1564,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "12829:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1565,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "12835:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1563,
														"name": "VaultRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "12813:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12813:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1567,
												"nodeType": "EmitStatement",
												"src": "12808:33:9"
											}
										]
									},
									"documentation": {
										"id": 1508,
										"nodeType": "StructuredDocumentation",
										"src": "12163:248:9",
										"text": " @notice Registers a vault for a specified pool.\n @dev Registers the specified vault for the pool and emits a `VaultRegistered` event.\n @param pool The address of the pool.\n @param vault The address of the vault."
									},
									"functionSelector": "05c4fdf9",
									"id": 1569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "registerVault",
									"nameLocation": "12425:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "12447:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "12439:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12439:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "12461:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "12453:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12453:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12438:29:9"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12477:0:9"
									},
									"scope": 1741,
									"src": "12416:432:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1613,
										"nodeType": "Block",
										"src": "13130:240:9",
										"statements": [
											{
												"assignments": [
													1578
												],
												"declarations": [
													{
														"constant": false,
														"id": 1578,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "13148:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1613,
														"src": "13140:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1577,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13140:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1585,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1580,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "13173:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 1582,
															"indexExpression": {
																"id": 1581,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "13185:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13173:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														{
															"id": 1583,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "13194:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1579,
														"name": "findIndexInArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "13156:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address[] storage pointer,address) view returns (uint256)"
														}
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13156:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13140:59:9"
											},
											{
												"assignments": [
													1587
												],
												"declarations": [
													{
														"constant": false,
														"id": 1587,
														"mutability": "mutable",
														"name": "lastIndex",
														"nameLocation": "13217:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1613,
														"src": "13209:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1586,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13209:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1594,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1588,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "13229:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 1590,
															"indexExpression": {
																"id": 1589,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "13241:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13229:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13249:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13229:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13258:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "13229:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13209:50:9"
											},
											{
												"expression": {
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1595,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "13269:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 1598,
															"indexExpression": {
																"id": 1596,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "13281:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13269:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1599,
														"indexExpression": {
															"id": 1597,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "13289:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13269:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1600,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "13298:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 1602,
															"indexExpression": {
																"id": 1601,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "13310:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13298:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1604,
														"indexExpression": {
															"id": 1603,
															"name": "lastIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "13318:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13298:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13269:59:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1606,
												"nodeType": "ExpressionStatement",
												"src": "13269:59:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 1607,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "13338:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 1609,
															"indexExpression": {
																"id": 1608,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "13350:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13338:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13358:3:9",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "13338:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer)"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13338:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1612,
												"nodeType": "ExpressionStatement",
												"src": "13338:25:9"
											}
										]
									},
									"documentation": {
										"id": 1570,
										"nodeType": "StructuredDocumentation",
										"src": "12887:164:9",
										"text": " @dev Removes a pool from the lender's array of pools.\n @param lender The address of the lender.\n @param pool The address of the pool."
									},
									"id": 1614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removePoolFromLenderArray",
									"nameLocation": "13065:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "13100:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "13092:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13092:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "13116:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "13108:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13108:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13091:30:9"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13130:0:9"
									},
									"scope": 1741,
									"src": "13056:314:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1647,
										"nodeType": "Block",
										"src": "13549:170:9",
										"statements": [
											{
												"assignments": [
													1621
												],
												"declarations": [
													{
														"constant": false,
														"id": 1621,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "13567:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1647,
														"src": "13559:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1620,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13559:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1626,
												"initialValue": {
													"arguments": [
														{
															"id": 1623,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "13592:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														{
															"id": 1624,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "13599:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1622,
														"name": "findIndexInArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "13575:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address[] storage pointer,address) view returns (uint256)"
														}
													},
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13575:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13559:45:9"
											},
											{
												"assignments": [
													1628
												],
												"declarations": [
													{
														"constant": false,
														"id": 1628,
														"mutability": "mutable",
														"name": "lastIndex",
														"nameLocation": "13622:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1647,
														"src": "13614:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1627,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13614:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1633,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1629,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "13634:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13640:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13634:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13649:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "13634:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13614:36:9"
											},
											{
												"expression": {
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1634,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "13660:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1636,
														"indexExpression": {
															"id": 1635,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1621,
															"src": "13666:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13660:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1637,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "13675:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1639,
														"indexExpression": {
															"id": 1638,
															"name": "lastIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "13681:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13675:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13660:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1641,
												"nodeType": "ExpressionStatement",
												"src": "13660:31:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1642,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "13701:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13707:3:9",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "13701:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer)"
														}
													},
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13701:11:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1646,
												"nodeType": "ExpressionStatement",
												"src": "13701:11:9"
											}
										]
									},
									"documentation": {
										"id": 1615,
										"nodeType": "StructuredDocumentation",
										"src": "13376:112:9",
										"text": " @dev Removes a pool from the main array of pools.\n @param pool The address of the pool."
									},
									"id": 1648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removePoolFromMainArray",
									"nameLocation": "13502:24:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "13535:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "13527:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13527:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13526:14:9"
									},
									"returnParameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13549:0:9"
									},
									"scope": 1741,
									"src": "13493:226:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1686,
										"nodeType": "Block",
										"src": "14058:173:9",
										"statements": [
											{
												"body": {
													"id": 1678,
													"nodeType": "Block",
													"src": "14111:57:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1670,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1652,
																		"src": "14129:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[] storage pointer"
																		}
																	},
																	"id": 1672,
																	"indexExpression": {
																		"id": 1671,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1660,
																		"src": "14135:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14129:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1673,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1654,
																	"src": "14141:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "14129:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1677,
															"nodeType": "IfStatement",
															"src": "14125:32:9",
															"trueBody": {
																"expression": {
																	"id": 1675,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1660,
																	"src": "14156:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1658,
																"id": 1676,
																"nodeType": "Return",
																"src": "14149:8:9"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1663,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "14088:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1664,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1652,
															"src": "14092:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[] storage pointer"
															}
														},
														"id": 1665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14098:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14092:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14088:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1679,
												"initializationExpression": {
													"assignments": [
														1660
													],
													"declarations": [
														{
															"constant": false,
															"id": 1660,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "14081:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1679,
															"src": "14073:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1659,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14073:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1662,
													"initialValue": {
														"hexValue": "30",
														"id": 1661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14085:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "14073:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "14106:3:9",
														"subExpression": {
															"id": 1667,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "14106:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1669,
													"nodeType": "ExpressionStatement",
													"src": "14106:3:9"
												},
												"nodeType": "ForStatement",
												"src": "14068:100:9"
											},
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14189:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1681,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14189:7:9",
																	"typeDescriptions": {}
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																}
															],
															"id": 1680,
															"name": "type",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967269,
															"src": "14184:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14184:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_magic_meta_type_t_uint256",
															"typeString": "type(uint256)"
														}
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "14198:3:9",
													"memberName": "max",
													"nodeType": "MemberAccess",
													"src": "14184:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1658,
												"id": 1685,
												"nodeType": "Return",
												"src": "14177:24:9"
											}
										]
									},
									"documentation": {
										"id": 1649,
										"nodeType": "StructuredDocumentation",
										"src": "13725:202:9",
										"text": " @dev Finds the index of a target address in an array.\n @param array The array to search.\n @param target The target address.\n @return The index of the target address."
									},
									"id": 1687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findIndexInArray",
									"nameLocation": "13941:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "13976:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "13958:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1650,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "13958:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1651,
													"nodeType": "ArrayTypeName",
													"src": "13958:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13991:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "13983:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13983:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13957:41:9"
									},
									"returnParameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "14045:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14045:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14044:9:9"
									},
									"scope": 1741,
									"src": "13932:299:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "14502:336:9",
										"statements": [
											{
												"assignments": [
													1696
												],
												"declarations": [
													{
														"constant": false,
														"id": 1696,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "14520:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1739,
														"src": "14512:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1695,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14512:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1703,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1698,
																"name": "borrowerPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "14545:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 1700,
															"indexExpression": {
																"id": 1699,
																"name": "borrower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1690,
																"src": "14559:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14545:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														{
															"id": 1701,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "14570:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1697,
														"name": "findIndexInArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "14528:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address[] storage pointer,address) view returns (uint256)"
														}
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14528:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14512:63:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1704,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1696,
														"src": "14589:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1705,
																"name": "borrowerPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "14597:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 1707,
															"indexExpression": {
																"id": 1706,
																"name": "borrower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1690,
																"src": "14611:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14597:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14621:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14597:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14589:38:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1738,
												"nodeType": "IfStatement",
												"src": "14585:247:9",
												"trueBody": {
													"id": 1737,
													"nodeType": "Block",
													"src": "14629:203:9",
													"statements": [
														{
															"assignments": [
																1711
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1711,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "14651:9:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1737,
																	"src": "14643:17:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1710,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "14643:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1718,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1712,
																			"name": "borrowerPools",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 819,
																			"src": "14663:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 1714,
																		"indexExpression": {
																			"id": 1713,
																			"name": "borrower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1690,
																			"src": "14677:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14663:23:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14687:6:9",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "14663:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14696:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "14663:34:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14643:54:9"
														},
														{
															"expression": {
																"id": 1729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1719,
																			"name": "borrowerPools",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 819,
																			"src": "14711:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 1722,
																		"indexExpression": {
																			"id": 1720,
																			"name": "borrower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1690,
																			"src": "14725:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14711:23:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1723,
																	"indexExpression": {
																		"id": 1721,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1696,
																		"src": "14735:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "14711:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1724,
																			"name": "borrowerPools",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 819,
																			"src": "14744:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 1726,
																		"indexExpression": {
																			"id": 1725,
																			"name": "borrower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1690,
																			"src": "14758:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14744:23:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1728,
																	"indexExpression": {
																		"id": 1727,
																		"name": "lastIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1711,
																		"src": "14768:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14744:34:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "14711:67:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1730,
															"nodeType": "ExpressionStatement",
															"src": "14711:67:9"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"baseExpression": {
																			"id": 1731,
																			"name": "borrowerPools",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 819,
																			"src": "14792:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 1733,
																		"indexExpression": {
																			"id": 1732,
																			"name": "borrower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1690,
																			"src": "14806:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14792:23:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14816:3:9",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "14792:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer)"
																	}
																},
																"id": 1735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14792:29:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1736,
															"nodeType": "ExpressionStatement",
															"src": "14792:29:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1688,
										"nodeType": "StructuredDocumentation",
										"src": "14237:170:9",
										"text": " @dev Removes a pool from the borrower's array of pools.\n @param borrower The address of the borrower.\n @param pool The address of the pool."
									},
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removePoolFromBorrowerArray",
									"nameLocation": "14421:28:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "14458:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "14450:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14450:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "14476:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "14468:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14468:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14449:32:9"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14502:0:9"
									},
									"scope": 1741,
									"src": "14412:426:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1742,
							"src": "428:14412:9",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335,
								838,
								843,
								850,
								857,
								868
							]
						}
					],
					"src": "32:14809:9"
				},
				"id": 9
			}
		}
	}
}