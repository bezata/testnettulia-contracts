{
	"id": "347154eb208dbf4b2a60155a147a37cb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"settings": {
			"viaIR": true,
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/contracts/contracts/protocol/PoolOrganizer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"../interfaces/IPoolOrganizer.sol\";\nimport \"../interfaces/IVaultManager.sol\";\nimport \"../interfaces/IRewardManager.sol\";\n\n/**\n * @title Pool Organizer for managing pools, vaults, and rewards.\n * @dev Implements access control and management for pool lifecycle and integration with external managers.\n */\ncontract PoolOrganizer is AccessControl, IPoolOrganizer {\n    bytes32 public constant POOL_MANAGER_ROLE = keccak256(\"POOL_MANAGER_ROLE\");\n\n    IVaultManager public vaultManager;\n    IRewardManager public rewardManager;\n\n    address[] private pools;\n    mapping(address => IPoolOrganizer.PoolDetails) private poolDetails;\n    mapping(address => address[]) private lenderPools;\n    mapping(address => address) public poolVaults;\n    mapping(address => address[]) private borrowerPools;\n\n    /**\n     * @dev Emitted when a new pool is registered.\n     * @param pool The address of the pool.\n     * @param lender The address of the lender.\n     * @param borrower The address of the borrower.\n     * @param vault The address of the vault associated with the pool.\n     * @param poolType The type of the pool.\n     */\n    event PoolRegistered(\n        address indexed pool,\n        address indexed lender,\n        address indexed borrower,\n        address vault,\n        PoolType poolType\n    );\n\n    /**\n     * @dev Emitted when a pool is deregistered.\n     * @param pool The address of the deregistered pool.\n     */\n    event PoolDeregistered(address indexed pool);\n\n    /**\n     * @dev Emitted when managers are registered.\n     * @param vaultManager The address of the vault manager.\n     * @param rewardManager The address of the reward manager.\n     */\n    event ManagerRegistered(address vaultManager, address rewardManager);\n\n    /**\n     * @dev Emitted when a vault is registered for a pool.\n     * @param pool The address of the pool.\n     * @param vault The address of the registered vault.\n     */\n    event VaultRegistered(address indexed pool, address indexed vault);\n\n    /**\n     * @dev Constructor that grants the deployer the admin and pool manager roles.\n     */\n    constructor() {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(POOL_MANAGER_ROLE, msg.sender);\n    }\n\n    /**\n     * @notice Registers a new pool with the specified details.\n     * @dev Registers a pool and emits a `PoolRegistered` event.\n     * @param pool The address of the pool.\n     * @param lender The address of the lender.\n     * @param borrower The address of the borrower.\n     * @param vault The address of the vault.\n     * @param loanToken The ERC20 token for the loan.\n     * @param assetToken The ERC20 token for the asset.\n     * @param repaymentToken The ERC20 token for the repayment.\n     * @param loanAmount The amount of the loan.\n     * @param interestRate The interest rate for the loan.\n     * @param repaymentPeriod The repayment period for the loan.\n     * @param poolType The type of the pool.\n     */\n    function registerPool(\n        address pool,\n        address lender,\n        address borrower,\n        address vault,\n        IERC20 loanToken,\n        IERC20 assetToken,\n        IERC20 repaymentToken,\n        uint256 loanAmount,\n        uint256 interestRate,\n        uint256 repaymentPeriod,\n        PoolType poolType\n    ) external {\n        require(pool != address(0), \"Pool address cannot be zero\");\n        require(\n            poolDetails[pool].lender == address(0),\n            \"Pool already registered\"\n        );\n\n        poolDetails[pool] = IPoolOrganizer.PoolDetails({\n            lender: lender,\n            borrower: borrower,\n            creationTime: block.timestamp,\n            vault: vault,\n            loanToken: loanToken,\n            assetToken: assetToken,\n            repaymentToken: repaymentToken,\n            loanAmount: loanAmount,\n            interestRate: interestRate,\n            repaymentPeriod: repaymentPeriod,\n            poolType: poolType,\n            funded: false\n        });\n        lenderPools[lender].push(pool);\n        pools.push(pool);\n        emit PoolRegistered(pool, lender, borrower, vault, poolType);\n    }\n\n    /**\n     * @notice Marks a pool as funded.\n     * @dev Marks the specified pool as funded.\n     * @param pool The address of the pool to mark as funded.\n     */\n    function markPoolAsFunded(address pool)\n        external\n    {\n        require(poolDetails[pool].lender != address(0), \"Pool not registered\");\n        poolDetails[pool].funded = true;\n    }\n\n    /**\n     * @notice Gets the details of all pools associated with a lender.\n     * @param lender The address of the lender.\n     * @return An array of pool details.\n     */\n    function getAllLenderPoolDetails(address lender)\n        external\n        view\n        returns (IPoolOrganizer.PoolDetails[] memory)\n    {\n        address[] memory lenderPoolsArray = lenderPools[lender];\n        IPoolOrganizer.PoolDetails[]\n            memory details = new IPoolOrganizer.PoolDetails[](\n                lenderPoolsArray.length\n            );\n\n        for (uint256 i = 0; i < lenderPoolsArray.length; i++) {\n            details[i] = poolDetails[lenderPoolsArray[i]];\n        }\n        return details;\n    }\n\n    /**\n     * @notice Gets all pools associated with a borrower.\n     * @param borrower The address of the borrower.\n     * @return An array of pool addresses.\n     */\n    function getPoolsByBorrower(address borrower)\n        external\n        view\n        returns (address[] memory)\n    {\n        return borrowerPools[borrower];\n    }\n\n    /**\n     * @notice Deregisters a pool.\n     * @dev Deregisters the specified pool and emits a `PoolDeregistered` event.\n     * @param pool The address of the pool to deregister.\n     */\n    function deregisterPool(address pool) external {\n        require(poolDetails[pool].lender != address(0), \"Pool not registered\");\n\n        address lender = poolDetails[pool].lender;\n        _removePoolFromLenderArray(lender, pool);\n        _removePoolFromMainArray(pool);\n\n        delete poolDetails[pool];\n        emit PoolDeregistered(pool);\n    }\n\n    /**\n     * @notice Sets the borrower for a specified pool.\n     * @param pool The address of the pool.\n     * @param newBorrower The address of the new borrower.\n     */\n    function setBorrowerForPool(address pool, address newBorrower)\n        external\n    {\n        require(poolDetails[pool].lender != address(0), \"Pool not registered\");\n        require(\n            newBorrower != address(0),\n            \"Borrower cannot be the zero address\"\n        );\n\n        address currentBorrower = poolDetails[pool].borrower;\n        if (currentBorrower != newBorrower) {\n            if (currentBorrower != address(0)) {\n                _removePoolFromBorrowerArray(currentBorrower, pool);\n            }\n            borrowerPools[newBorrower].push(pool);\n            poolDetails[pool].borrower = newBorrower;\n        }\n    }\n\n    /**\n     * @notice Registers the vault and reward managers.\n     * @dev Registers the specified managers and emits a `ManagerRegistered` event.\n     * @param _vaultManager The address of the vault manager.\n     * @param _rewardManager The address of the reward manager.\n     */\n    function registerManagers(address _vaultManager, address _rewardManager)\n        external\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        require(\n            _vaultManager != address(0),\n            \"VaultManager cannot be zero address\"\n        );\n        require(\n            _rewardManager != address(0),\n            \"RewardManager cannot be zero address\"\n        );\n\n        vaultManager = IVaultManager(_vaultManager);\n        rewardManager = IRewardManager(_rewardManager);\n\n        emit ManagerRegistered(_vaultManager, _rewardManager);\n    }\n\n    /**\n     * @notice Gets the addresses of the registered managers.\n     * @return The addresses of the vault and reward managers.\n     */\n    function getManagers() external view returns (address, address) {\n        return (address(vaultManager), address(rewardManager));\n    }\n\n    /**\n     * @notice Gets the total number of registered pools.\n     * @return The total number of pools.\n     */\n    function getTotalPools() external view returns (uint256) {\n        return pools.length;\n    }\n\n    /**\n     * @notice Gets all pools associated with a lender.\n     * @param lender The address of the lender.\n     * @return An array of pool addresses.\n     */\n    function getPoolsByLender(address lender)\n        external\n        view\n        returns (address[] memory)\n    {\n        return lenderPools[lender];\n    }\n\n    /**\n     * @notice Gets the details of a specified pool.\n     * @param pool The address of the pool.\n     * @return The details of the pool.\n     */\n    function getPoolDetails(address pool)\n        external\n        view\n        returns (IPoolOrganizer.PoolDetails memory)\n    {\n        require(poolDetails[pool].lender != address(0), \"Pool not registered\");\n        return poolDetails[pool];\n    }\n\n    /**\n     * @notice Gets the vault address associated with a pool.\n     * @param pool The address of the pool.\n     * @return The address of the vault.\n     */\n    function getVaultForPool(address pool) external view returns (address) {\n        require(\n            poolVaults[pool] != address(0),\n            \"Pool not registered or has no vault\"\n        );\n        return poolVaults[pool];\n    }\n\n    /**\n     * @notice Gets all registered pool addresses.\n     * @return An array of pool addresses.\n     */\n    function getAllPoolAddresses() external view returns (address[] memory) {\n        return pools;\n    }\n\n    /**\n     * @notice Grants factory access to the specified address.\n     * @param factoryAddress The address of the factory.\n     */\n    function grantFactoryAccess(address factoryAddress) external {\n        require(\n            hasRole(DEFAULT_ADMIN_ROLE, msg.sender),\n            \"Caller is not an admin\"\n        );\n        grantRole(POOL_MANAGER_ROLE, factoryAddress);\n        grantRole(DEFAULT_ADMIN_ROLE, factoryAddress);\n    }\n\n    /**\n     * @notice Registers a vault for a specified pool.\n     * @dev Registers the specified vault for the pool and emits a `VaultRegistered` event.\n     * @param pool The address of the pool.\n     * @param vault The address of the vault.\n     */\n    function registerVault(address pool, address vault)\n        external\n    {\n        require(pool != address(0) && vault != address(0), \"Invalid addresses\");\n        require(poolDetails[pool].lender != address(0), \"Pool not registered\");\n        require(\n            poolVaults[pool] == address(0),\n            \"Vault already registered for this pool\"\n        );\n\n        poolVaults[pool] = vault;\n        emit VaultRegistered(pool, vault);\n    }\n\n    // Private helper functions\n\n    /**\n     * @dev Removes a pool from the lender's array of pools.\n     * @param lender The address of the lender.\n     * @param pool The address of the pool.\n     */\n    function _removePoolFromLenderArray(address lender, address pool) private {\n        uint256 index = findIndexInArray(lenderPools[lender], pool);\n        uint256 lastIndex = lenderPools[lender].length - 1;\n        lenderPools[lender][index] = lenderPools[lender][lastIndex];\n        lenderPools[lender].pop();\n    }\n\n    /**\n     * @dev Removes a pool from the main array of pools.\n     * @param pool The address of the pool.\n     */\n    function _removePoolFromMainArray(address pool) private {\n        uint256 index = findIndexInArray(pools, pool);\n        uint256 lastIndex = pools.length - 1;\n        pools[index] = pools[lastIndex];\n        pools.pop();\n    }\n\n    /**\n     * @dev Finds the index of a target address in an array.\n     * @param array The array to search.\n     * @param target The target address.\n     * @return The index of the target address.\n     */\n    function findIndexInArray(address[] storage array, address target)\n        private\n        view\n        returns (uint256)\n    {\n        for (uint256 i = 0; i < array.length; i++) {\n            if (array[i] == target) return i;\n        }\n        return type(uint256).max; // Indicates not found\n    }\n\n    /**\n     * @dev Removes a pool from the borrower's array of pools.\n     * @param borrower The address of the borrower.\n     * @param pool The address of the pool.\n     */\n    function _removePoolFromBorrowerArray(address borrower, address pool)\n        private\n    {\n        uint256 index = findIndexInArray(borrowerPools[borrower], pool);\n        if (index < borrowerPools[borrower].length) {\n            uint256 lastIndex = borrowerPools[borrower].length - 1;\n            borrowerPools[borrower][index] = borrowerPools[borrower][lastIndex];\n            borrowerPools[borrower].pop();\n        }\n    }\n}\n"
			},
			"contracts/contracts/contracts/interfaces/IRewardManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ninterface IRewardManager {\r\n    /// @notice Registers a pool to be eligible for rewards, initializing its reward token.\r\n    /// @param pool The address of the pool to register.\r\n    /// @param rewardToken The ERC20 address for the reward token.\r\n    function registerPool(address pool, address rewardToken, bool isFlashPool) external;\r\n\r\n    /// @notice Accrues rewards for a specific pool.\r\n    /// @param pool The address of the pool.\r\n    function accrueRewards(address pool) external;\r\n\r\n    /// @notice Claims rewards for either the lender or borrower.\r\n    /// @param pool The address of the pool.\r\n    /// @param isLender True if the lender is claiming, false if the borrower.\r\n    function claimRewards(address pool, bool isLender) external;\r\n\r\n    /// @notice Deregisters a pool.\r\n    /// @param pool The address of the pool to deregister.\r\n    function deregisterPool(address pool) external;\r\n}\r\n"
			},
			"contracts/contracts/contracts/interfaces/IVaultManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n\r\n/// @title IVaultManager\r\n/// @dev Interface for the VaultManager contract.\r\ninterface IVaultManager {\r\n    /// @notice Registers a pool's vault upon creation.\r\n    /// @param pool Address of the pool.\r\n    function registerPoolVault(address pool) external;\r\n\r\n    /// @notice Deregisters a pool's vault upon loan closure.\r\n    /// @param pool Address of the pool.\r\n    function deregisterVault(address pool) external;\r\n\r\n    /// @notice Distributes accrued interest from a vault to a specified recipient.\r\n    /// @param pool Address of the pool initiating the interest payout.\r\n    /// @param to Recipient of the interest payment.\r\n    function distributeInterest(address pool, address to) external;\r\n\r\n    /// @notice Calculates the claimable interest for a user based on the pool's loan configuration.\r\n    /// @param pool Address of the pool for which to calculate interest.\r\n    /// @return amount The calculated interest amount.\r\n    function calculateClaimableInterest(address pool) external view returns (uint256);\r\n\r\n    /// @notice Refunds any remaining interest to the borrower when the loan is repaid.\r\n    /// @param pool Address of the pool.\r\n    /// @param borrower Address of the borrower.\r\n    function refundRemainingInterest(address pool, address borrower) external;\r\n    \r\n    /// @notice Handle the default for the lender to get remaining interest.\r\n    /// @param pool The address of the loan pool associated with this interest payment.\r\n    /// @param lender The lender address of that pool.\r\n    function handleDefault(address pool, address lender) external;\r\n}\r\n"
			},
			"contracts/contracts/contracts/interfaces/IPoolOrganizer.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\n/// @title IPoolOrganizer interface\r\n/// @notice Interface for the Pool Organizer contract managing pools, vaults, and rewards.\r\ninterface IPoolOrganizer {\r\n    enum PoolType { STANDARD, FLASH_LOAN }\r\n\r\n    struct PoolDetails {\r\n        address lender;\r\n        address borrower;\r\n        uint256 creationTime;\r\n        address vault;\r\n        IERC20 loanToken;\r\n        IERC20 assetToken;\r\n        IERC20 repaymentToken;\r\n        uint256 loanAmount;\r\n        uint256 interestRate;\r\n        uint256 repaymentPeriod;\r\n        PoolType poolType;\r\n        bool funded;\r\n    }\r\n\r\n    /// @notice Registers a new pool\r\n    /// @param pool The address of the pool contract\r\n    /// @param lender The address of the lender\r\n    /// @param borrower The address of the borrower\r\n    /// @param vault The address of the vault associated with the pool\r\n    /// @param loanToken The token to be loaned\r\n    /// @param assetToken The token used as collateral\r\n    /// @param repaymentToken The token used for loan repayment\r\n    /// @param loanAmount The amount of the loan\r\n    /// @param interestRate The interest rate of the loan\r\n    /// @param repaymentPeriod The loan repayment period\r\n    /// @param poolType The type of the pool (standard or flash loan)\r\n    function registerPool(\r\n        address pool,\r\n        address lender,\r\n        address borrower,\r\n        address vault,\r\n        IERC20 loanToken,\r\n        IERC20 assetToken,\r\n        IERC20 repaymentToken,\r\n        uint256 loanAmount,\r\n        uint256 interestRate,\r\n        uint256 repaymentPeriod,\r\n        PoolType poolType\r\n    ) external;\r\n\r\n    /// @notice Deregisters a pool\r\n    /// @param pool The address of the pool to deregister\r\n    function deregisterPool(address pool) external;\r\n\r\n    /// @notice Gets the total number of registered pools\r\n    /// @return The total number of registered pools\r\n    function getTotalPools() external view returns (uint256);\r\n\r\n    /// @notice Retrieves all pool addresses associated with a specific lender\r\n    /// @param lender The address of the lender\r\n    /// @return An array of pool addresses\r\n    function getPoolsByLender(address lender) external view returns (address[] memory);\r\n\r\n    /// @notice Retrieves detailed information about a specific pool\r\n    /// @param pool The address of the pool\r\n    /// @return The details of the specified pool\r\n    function getPoolDetails(address pool) external view returns (PoolDetails memory);\r\n\r\n    /// @notice Retrieves the associated vault address for a given pool\r\n    /// @param pool The address of the pool\r\n    /// @return The address of the linked vault\r\n    function getVaultForPool(address pool) external view returns (address);\r\n\r\n    /// @notice Grants factory access to manage pools\r\n    /// @param factoryAddress The address of the factory to be granted access\r\n    function grantFactoryAccess(address factoryAddress) external;\r\n\r\n    /// @notice Registers a vault for a specific pool\r\n    /// @param pool The address of the pool\r\n    /// @param vault The address of the vault\r\n    function registerVault(address pool, address vault) external;\r\n\r\n    /// @notice Registers manager contracts for managing vaults and rewards\r\n    /// @param _vaultManager The address of the VaultManager contract\r\n    /// @param _rewardManager The address of the RewardManager contract\r\n    function registerManagers(address _vaultManager, address _rewardManager) external;\r\n\r\n    /// @notice Marks a pool as funded\r\n    /// @param pool The address of the pool to mark as funded\r\n    function markPoolAsFunded(address pool) external;\r\n     \r\n    /// @notice Set borrower for pool\r\n    function setBorrowerForPool(address pool, address newBorrower) external;\r\n}\r\n\r\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/contracts/interfaces/IPoolOrganizer.sol": {
				"IPoolOrganizer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "deregisterPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getPoolDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "lender",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "borrower",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "creationTime",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "vault",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "loanToken",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "assetToken",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "repaymentToken",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "loanAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "interestRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "repaymentPeriod",
											"type": "uint256"
										},
										{
											"internalType": "enum IPoolOrganizer.PoolType",
											"name": "poolType",
											"type": "uint8"
										},
										{
											"internalType": "bool",
											"name": "funded",
											"type": "bool"
										}
									],
									"internalType": "struct IPoolOrganizer.PoolDetails",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								}
							],
							"name": "getPoolsByLender",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalPools",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getVaultForPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "factoryAddress",
									"type": "address"
								}
							],
							"name": "grantFactoryAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "markPoolAsFunded",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vaultManager",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardManager",
									"type": "address"
								}
							],
							"name": "registerManagers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "loanToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "assetToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "repaymentToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "loanAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "repaymentPeriod",
									"type": "uint256"
								},
								{
									"internalType": "enum IPoolOrganizer.PoolType",
									"name": "poolType",
									"type": "uint8"
								}
							],
							"name": "registerPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "registerVault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newBorrower",
									"type": "address"
								}
							],
							"name": "setBorrowerForPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"deregisterPool(address)": {
								"params": {
									"pool": "The address of the pool to deregister"
								}
							},
							"getPoolDetails(address)": {
								"params": {
									"pool": "The address of the pool"
								},
								"returns": {
									"_0": "The details of the specified pool"
								}
							},
							"getPoolsByLender(address)": {
								"params": {
									"lender": "The address of the lender"
								},
								"returns": {
									"_0": "An array of pool addresses"
								}
							},
							"getTotalPools()": {
								"returns": {
									"_0": "The total number of registered pools"
								}
							},
							"getVaultForPool(address)": {
								"params": {
									"pool": "The address of the pool"
								},
								"returns": {
									"_0": "The address of the linked vault"
								}
							},
							"grantFactoryAccess(address)": {
								"params": {
									"factoryAddress": "The address of the factory to be granted access"
								}
							},
							"markPoolAsFunded(address)": {
								"params": {
									"pool": "The address of the pool to mark as funded"
								}
							},
							"registerManagers(address,address)": {
								"params": {
									"_rewardManager": "The address of the RewardManager contract",
									"_vaultManager": "The address of the VaultManager contract"
								}
							},
							"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)": {
								"params": {
									"assetToken": "The token used as collateral",
									"borrower": "The address of the borrower",
									"interestRate": "The interest rate of the loan",
									"lender": "The address of the lender",
									"loanAmount": "The amount of the loan",
									"loanToken": "The token to be loaned",
									"pool": "The address of the pool contract",
									"poolType": "The type of the pool (standard or flash loan)",
									"repaymentPeriod": "The loan repayment period",
									"repaymentToken": "The token used for loan repayment",
									"vault": "The address of the vault associated with the pool"
								}
							},
							"registerVault(address,address)": {
								"params": {
									"pool": "The address of the pool",
									"vault": "The address of the vault"
								}
							}
						},
						"title": "IPoolOrganizer interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deregisterPool(address)": "7e72c7d7",
							"getPoolDetails(address)": "d3e90fa0",
							"getPoolsByLender(address)": "24a44efb",
							"getTotalPools()": "d3ffe67a",
							"getVaultForPool(address)": "7570e389",
							"grantFactoryAccess(address)": "5d102df7",
							"markPoolAsFunded(address)": "1f2f2e14",
							"registerManagers(address,address)": "c489579d",
							"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)": "43756020",
							"registerVault(address,address)": "05c4fdf9",
							"setBorrowerForPool(address,address)": "37e238c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"deregisterPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"loanToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"repaymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"enum IPoolOrganizer.PoolType\",\"name\":\"poolType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"funded\",\"type\":\"bool\"}],\"internalType\":\"struct IPoolOrganizer.PoolDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"}],\"name\":\"getPoolsByLender\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getVaultForPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"}],\"name\":\"grantFactoryAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"markPoolAsFunded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardManager\",\"type\":\"address\"}],\"name\":\"registerManagers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"loanToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"repaymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"enum IPoolOrganizer.PoolType\",\"name\":\"poolType\",\"type\":\"uint8\"}],\"name\":\"registerPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"registerVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newBorrower\",\"type\":\"address\"}],\"name\":\"setBorrowerForPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deregisterPool(address)\":{\"params\":{\"pool\":\"The address of the pool to deregister\"}},\"getPoolDetails(address)\":{\"params\":{\"pool\":\"The address of the pool\"},\"returns\":{\"_0\":\"The details of the specified pool\"}},\"getPoolsByLender(address)\":{\"params\":{\"lender\":\"The address of the lender\"},\"returns\":{\"_0\":\"An array of pool addresses\"}},\"getTotalPools()\":{\"returns\":{\"_0\":\"The total number of registered pools\"}},\"getVaultForPool(address)\":{\"params\":{\"pool\":\"The address of the pool\"},\"returns\":{\"_0\":\"The address of the linked vault\"}},\"grantFactoryAccess(address)\":{\"params\":{\"factoryAddress\":\"The address of the factory to be granted access\"}},\"markPoolAsFunded(address)\":{\"params\":{\"pool\":\"The address of the pool to mark as funded\"}},\"registerManagers(address,address)\":{\"params\":{\"_rewardManager\":\"The address of the RewardManager contract\",\"_vaultManager\":\"The address of the VaultManager contract\"}},\"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)\":{\"params\":{\"assetToken\":\"The token used as collateral\",\"borrower\":\"The address of the borrower\",\"interestRate\":\"The interest rate of the loan\",\"lender\":\"The address of the lender\",\"loanAmount\":\"The amount of the loan\",\"loanToken\":\"The token to be loaned\",\"pool\":\"The address of the pool contract\",\"poolType\":\"The type of the pool (standard or flash loan)\",\"repaymentPeriod\":\"The loan repayment period\",\"repaymentToken\":\"The token used for loan repayment\",\"vault\":\"The address of the vault associated with the pool\"}},\"registerVault(address,address)\":{\"params\":{\"pool\":\"The address of the pool\",\"vault\":\"The address of the vault\"}}},\"title\":\"IPoolOrganizer interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deregisterPool(address)\":{\"notice\":\"Deregisters a pool\"},\"getPoolDetails(address)\":{\"notice\":\"Retrieves detailed information about a specific pool\"},\"getPoolsByLender(address)\":{\"notice\":\"Retrieves all pool addresses associated with a specific lender\"},\"getTotalPools()\":{\"notice\":\"Gets the total number of registered pools\"},\"getVaultForPool(address)\":{\"notice\":\"Retrieves the associated vault address for a given pool\"},\"grantFactoryAccess(address)\":{\"notice\":\"Grants factory access to manage pools\"},\"markPoolAsFunded(address)\":{\"notice\":\"Marks a pool as funded\"},\"registerManagers(address,address)\":{\"notice\":\"Registers manager contracts for managing vaults and rewards\"},\"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)\":{\"notice\":\"Registers a new pool\"},\"registerVault(address,address)\":{\"notice\":\"Registers a vault for a specific pool\"},\"setBorrowerForPool(address,address)\":{\"notice\":\"Set borrower for pool\"}},\"notice\":\"Interface for the Pool Organizer contract managing pools, vaults, and rewards.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/contracts/interfaces/IPoolOrganizer.sol\":\"IPoolOrganizer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contracts/contracts/contracts/interfaces/IPoolOrganizer.sol\":{\"keccak256\":\"0xe6cb532077a4d0f82d154a08e30ca766643c902e959e4519e1c78bac567a02d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3277ee67833de684424740208b2a6c823ebd5a2deff2d1c404c60903bf27432e\",\"dweb:/ipfs/QmZaQyFB5veNsF4hAoRW1xLWYDHZyV6SeZuoxCRozXAMWx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deregisterPool(address)": {
								"notice": "Deregisters a pool"
							},
							"getPoolDetails(address)": {
								"notice": "Retrieves detailed information about a specific pool"
							},
							"getPoolsByLender(address)": {
								"notice": "Retrieves all pool addresses associated with a specific lender"
							},
							"getTotalPools()": {
								"notice": "Gets the total number of registered pools"
							},
							"getVaultForPool(address)": {
								"notice": "Retrieves the associated vault address for a given pool"
							},
							"grantFactoryAccess(address)": {
								"notice": "Grants factory access to manage pools"
							},
							"markPoolAsFunded(address)": {
								"notice": "Marks a pool as funded"
							},
							"registerManagers(address,address)": {
								"notice": "Registers manager contracts for managing vaults and rewards"
							},
							"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)": {
								"notice": "Registers a new pool"
							},
							"registerVault(address,address)": {
								"notice": "Registers a vault for a specific pool"
							},
							"setBorrowerForPool(address,address)": {
								"notice": "Set borrower for pool"
							}
						},
						"notice": "Interface for the Pool Organizer contract managing pools, vaults, and rewards.",
						"version": 1
					}
				}
			},
			"contracts/contracts/contracts/interfaces/IRewardManager.sol": {
				"IRewardManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "accrueRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isLender",
									"type": "bool"
								}
							],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "deregisterPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewardToken",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isFlashPool",
									"type": "bool"
								}
							],
							"name": "registerPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"accrueRewards(address)": {
								"params": {
									"pool": "The address of the pool."
								}
							},
							"claimRewards(address,bool)": {
								"params": {
									"isLender": "True if the lender is claiming, false if the borrower.",
									"pool": "The address of the pool."
								}
							},
							"deregisterPool(address)": {
								"params": {
									"pool": "The address of the pool to deregister."
								}
							},
							"registerPool(address,address,bool)": {
								"params": {
									"pool": "The address of the pool to register.",
									"rewardToken": "The ERC20 address for the reward token."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"accrueRewards(address)": "3d39955c",
							"claimRewards(address,bool)": "491c011a",
							"deregisterPool(address)": "7e72c7d7",
							"registerPool(address,address,bool)": "77ff76e7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"accrueRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isLender\",\"type\":\"bool\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"deregisterPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isFlashPool\",\"type\":\"bool\"}],\"name\":\"registerPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"accrueRewards(address)\":{\"params\":{\"pool\":\"The address of the pool.\"}},\"claimRewards(address,bool)\":{\"params\":{\"isLender\":\"True if the lender is claiming, false if the borrower.\",\"pool\":\"The address of the pool.\"}},\"deregisterPool(address)\":{\"params\":{\"pool\":\"The address of the pool to deregister.\"}},\"registerPool(address,address,bool)\":{\"params\":{\"pool\":\"The address of the pool to register.\",\"rewardToken\":\"The ERC20 address for the reward token.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accrueRewards(address)\":{\"notice\":\"Accrues rewards for a specific pool.\"},\"claimRewards(address,bool)\":{\"notice\":\"Claims rewards for either the lender or borrower.\"},\"deregisterPool(address)\":{\"notice\":\"Deregisters a pool.\"},\"registerPool(address,address,bool)\":{\"notice\":\"Registers a pool to be eligible for rewards, initializing its reward token.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/contracts/interfaces/IRewardManager.sol\":\"IRewardManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/contracts/interfaces/IRewardManager.sol\":{\"keccak256\":\"0x692870b248c0b71185a5c030f853306d6a4c3a25180a3f57ff56dfb2da59a9d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27ba33e21e32b7bfff41db71f93f4ba9a427659a2c04fdf8510087963dbcb62\",\"dweb:/ipfs/QmcnnmcjEc7gkPNHKLECceA9FdVryvK9qKppnakhXGgNMh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"accrueRewards(address)": {
								"notice": "Accrues rewards for a specific pool."
							},
							"claimRewards(address,bool)": {
								"notice": "Claims rewards for either the lender or borrower."
							},
							"deregisterPool(address)": {
								"notice": "Deregisters a pool."
							},
							"registerPool(address,address,bool)": {
								"notice": "Registers a pool to be eligible for rewards, initializing its reward token."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/contracts/contracts/interfaces/IVaultManager.sol": {
				"IVaultManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "calculateClaimableInterest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "deregisterVault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "distributeInterest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								}
							],
							"name": "handleDefault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								}
							],
							"name": "refundRemainingInterest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "registerPoolVault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the VaultManager contract.",
						"kind": "dev",
						"methods": {
							"calculateClaimableInterest(address)": {
								"params": {
									"pool": "Address of the pool for which to calculate interest."
								},
								"returns": {
									"_0": "amount The calculated interest amount."
								}
							},
							"deregisterVault(address)": {
								"params": {
									"pool": "Address of the pool."
								}
							},
							"distributeInterest(address,address)": {
								"params": {
									"pool": "Address of the pool initiating the interest payout.",
									"to": "Recipient of the interest payment."
								}
							},
							"handleDefault(address,address)": {
								"params": {
									"lender": "The lender address of that pool.",
									"pool": "The address of the loan pool associated with this interest payment."
								}
							},
							"refundRemainingInterest(address,address)": {
								"params": {
									"borrower": "Address of the borrower.",
									"pool": "Address of the pool."
								}
							},
							"registerPoolVault(address)": {
								"params": {
									"pool": "Address of the pool."
								}
							}
						},
						"title": "IVaultManager",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateClaimableInterest(address)": "51b2d521",
							"deregisterVault(address)": "38e270ed",
							"distributeInterest(address,address)": "d302bf76",
							"handleDefault(address,address)": "713c00ce",
							"refundRemainingInterest(address,address)": "56f78a1d",
							"registerPoolVault(address)": "5228a4da"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"calculateClaimableInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"deregisterVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"distributeInterest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"}],\"name\":\"handleDefault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"refundRemainingInterest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"registerPoolVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the VaultManager contract.\",\"kind\":\"dev\",\"methods\":{\"calculateClaimableInterest(address)\":{\"params\":{\"pool\":\"Address of the pool for which to calculate interest.\"},\"returns\":{\"_0\":\"amount The calculated interest amount.\"}},\"deregisterVault(address)\":{\"params\":{\"pool\":\"Address of the pool.\"}},\"distributeInterest(address,address)\":{\"params\":{\"pool\":\"Address of the pool initiating the interest payout.\",\"to\":\"Recipient of the interest payment.\"}},\"handleDefault(address,address)\":{\"params\":{\"lender\":\"The lender address of that pool.\",\"pool\":\"The address of the loan pool associated with this interest payment.\"}},\"refundRemainingInterest(address,address)\":{\"params\":{\"borrower\":\"Address of the borrower.\",\"pool\":\"Address of the pool.\"}},\"registerPoolVault(address)\":{\"params\":{\"pool\":\"Address of the pool.\"}}},\"title\":\"IVaultManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calculateClaimableInterest(address)\":{\"notice\":\"Calculates the claimable interest for a user based on the pool's loan configuration.\"},\"deregisterVault(address)\":{\"notice\":\"Deregisters a pool's vault upon loan closure.\"},\"distributeInterest(address,address)\":{\"notice\":\"Distributes accrued interest from a vault to a specified recipient.\"},\"handleDefault(address,address)\":{\"notice\":\"Handle the default for the lender to get remaining interest.\"},\"refundRemainingInterest(address,address)\":{\"notice\":\"Refunds any remaining interest to the borrower when the loan is repaid.\"},\"registerPoolVault(address)\":{\"notice\":\"Registers a pool's vault upon creation.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/contracts/interfaces/IVaultManager.sol\":\"IVaultManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/contracts/interfaces/IVaultManager.sol\":{\"keccak256\":\"0xdd866073f1029189ab6d2f04f7cdf481fb48e9e12ef4f9cd2376778674ce1f1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d1aef045b26166c370937ef37a8917a00d63021343795f47c30516745e3786d\",\"dweb:/ipfs/QmbAuF7Ufd78MYjnYKUybDtGDVFcn7e6wSNN8hEg6fGFg5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"calculateClaimableInterest(address)": {
								"notice": "Calculates the claimable interest for a user based on the pool's loan configuration."
							},
							"deregisterVault(address)": {
								"notice": "Deregisters a pool's vault upon loan closure."
							},
							"distributeInterest(address,address)": {
								"notice": "Distributes accrued interest from a vault to a specified recipient."
							},
							"handleDefault(address,address)": {
								"notice": "Handle the default for the lender to get remaining interest."
							},
							"refundRemainingInterest(address,address)": {
								"notice": "Refunds any remaining interest to the borrower when the loan is repaid."
							},
							"registerPoolVault(address)": {
								"notice": "Registers a pool's vault upon creation."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/contracts/contracts/protocol/PoolOrganizer.sol": {
				"PoolOrganizer": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "vaultManager",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "rewardManager",
									"type": "address"
								}
							],
							"name": "ManagerRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "PoolDeregistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "lender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "enum IPoolOrganizer.PoolType",
									"name": "poolType",
									"type": "uint8"
								}
							],
							"name": "PoolRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "VaultRegistered",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "POOL_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "deregisterPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								}
							],
							"name": "getAllLenderPoolDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "lender",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "borrower",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "creationTime",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "vault",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "loanToken",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "assetToken",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "repaymentToken",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "loanAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "interestRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "repaymentPeriod",
											"type": "uint256"
										},
										{
											"internalType": "enum IPoolOrganizer.PoolType",
											"name": "poolType",
											"type": "uint8"
										},
										{
											"internalType": "bool",
											"name": "funded",
											"type": "bool"
										}
									],
									"internalType": "struct IPoolOrganizer.PoolDetails[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllPoolAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getManagers",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getPoolDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "lender",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "borrower",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "creationTime",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "vault",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "loanToken",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "assetToken",
											"type": "address"
										},
										{
											"internalType": "contract IERC20",
											"name": "repaymentToken",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "loanAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "interestRate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "repaymentPeriod",
											"type": "uint256"
										},
										{
											"internalType": "enum IPoolOrganizer.PoolType",
											"name": "poolType",
											"type": "uint8"
										},
										{
											"internalType": "bool",
											"name": "funded",
											"type": "bool"
										}
									],
									"internalType": "struct IPoolOrganizer.PoolDetails",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								}
							],
							"name": "getPoolsByBorrower",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								}
							],
							"name": "getPoolsByLender",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalPools",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getVaultForPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "factoryAddress",
									"type": "address"
								}
							],
							"name": "grantFactoryAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "markPoolAsFunded",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "poolVaults",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vaultManager",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardManager",
									"type": "address"
								}
							],
							"name": "registerManagers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "lender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "loanToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "assetToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "repaymentToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "loanAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "repaymentPeriod",
									"type": "uint256"
								},
								{
									"internalType": "enum IPoolOrganizer.PoolType",
									"name": "poolType",
									"type": "uint8"
								}
							],
							"name": "registerPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "registerVault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardManager",
							"outputs": [
								{
									"internalType": "contract IRewardManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newBorrower",
									"type": "address"
								}
							],
							"name": "setBorrowerForPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vaultManager",
							"outputs": [
								{
									"internalType": "contract IVaultManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implements access control and management for pool lifecycle and integration with external managers.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"ManagerRegistered(address,address)": {
								"details": "Emitted when managers are registered.",
								"params": {
									"rewardManager": "The address of the reward manager.",
									"vaultManager": "The address of the vault manager."
								}
							},
							"PoolDeregistered(address)": {
								"details": "Emitted when a pool is deregistered.",
								"params": {
									"pool": "The address of the deregistered pool."
								}
							},
							"PoolRegistered(address,address,address,address,uint8)": {
								"details": "Emitted when a new pool is registered.",
								"params": {
									"borrower": "The address of the borrower.",
									"lender": "The address of the lender.",
									"pool": "The address of the pool.",
									"poolType": "The type of the pool.",
									"vault": "The address of the vault associated with the pool."
								}
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"VaultRegistered(address,address)": {
								"details": "Emitted when a vault is registered for a pool.",
								"params": {
									"pool": "The address of the pool.",
									"vault": "The address of the registered vault."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Constructor that grants the deployer the admin and pool manager roles."
							},
							"deregisterPool(address)": {
								"details": "Deregisters the specified pool and emits a `PoolDeregistered` event.",
								"params": {
									"pool": "The address of the pool to deregister."
								}
							},
							"getAllLenderPoolDetails(address)": {
								"params": {
									"lender": "The address of the lender."
								},
								"returns": {
									"_0": "An array of pool details."
								}
							},
							"getAllPoolAddresses()": {
								"returns": {
									"_0": "An array of pool addresses."
								}
							},
							"getManagers()": {
								"returns": {
									"_0": "The addresses of the vault and reward managers."
								}
							},
							"getPoolDetails(address)": {
								"params": {
									"pool": "The address of the pool."
								},
								"returns": {
									"_0": "The details of the pool."
								}
							},
							"getPoolsByBorrower(address)": {
								"params": {
									"borrower": "The address of the borrower."
								},
								"returns": {
									"_0": "An array of pool addresses."
								}
							},
							"getPoolsByLender(address)": {
								"params": {
									"lender": "The address of the lender."
								},
								"returns": {
									"_0": "An array of pool addresses."
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getTotalPools()": {
								"returns": {
									"_0": "The total number of pools."
								}
							},
							"getVaultForPool(address)": {
								"params": {
									"pool": "The address of the pool."
								},
								"returns": {
									"_0": "The address of the vault."
								}
							},
							"grantFactoryAccess(address)": {
								"params": {
									"factoryAddress": "The address of the factory."
								}
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"markPoolAsFunded(address)": {
								"details": "Marks the specified pool as funded.",
								"params": {
									"pool": "The address of the pool to mark as funded."
								}
							},
							"registerManagers(address,address)": {
								"details": "Registers the specified managers and emits a `ManagerRegistered` event.",
								"params": {
									"_rewardManager": "The address of the reward manager.",
									"_vaultManager": "The address of the vault manager."
								}
							},
							"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)": {
								"details": "Registers a pool and emits a `PoolRegistered` event.",
								"params": {
									"assetToken": "The ERC20 token for the asset.",
									"borrower": "The address of the borrower.",
									"interestRate": "The interest rate for the loan.",
									"lender": "The address of the lender.",
									"loanAmount": "The amount of the loan.",
									"loanToken": "The ERC20 token for the loan.",
									"pool": "The address of the pool.",
									"poolType": "The type of the pool.",
									"repaymentPeriod": "The repayment period for the loan.",
									"repaymentToken": "The ERC20 token for the repayment.",
									"vault": "The address of the vault."
								}
							},
							"registerVault(address,address)": {
								"details": "Registers the specified vault for the pool and emits a `VaultRegistered` event.",
								"params": {
									"pool": "The address of the pool.",
									"vault": "The address of the vault."
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"setBorrowerForPool(address,address)": {
								"params": {
									"newBorrower": "The address of the new borrower.",
									"pool": "The address of the pool."
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"title": "Pool Organizer for managing pools, vaults, and rewards.",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  mstore(0x40, 0x80)\n  jumpi(tag_3, callvalue)\n    /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":2233:2275  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_5\n    /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":2264:2274  msg.sender */\n  caller\n    /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":2233:2275  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_1\n  jump\t// in\ntag_5:\n  pop\n    /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":2285:2326  _grantRole(POOL_MANAGER_ROLE, msg.sender) */\n  tag_6\n    /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":2264:2274  msg.sender */\n  caller\n    /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":2285:2326  _grantRole(POOL_MANAGER_ROLE, msg.sender) */\n  tag_2\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_3:\n  0x00\n  dup1\n  revert\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_1:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  dup2\n  dup2\n  mstore\n  mstore(0x20, 0xad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5)\n  0x40\n  dup2\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  swap1\n  swap2\n    /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  swap1\n  0xff\n  and\n  tag_7\n  jumpi\n  dup2\n  dup1\n  mstore\n  dup2\n  0x20\n  mstore\n  0x40\n  dup3\n  keccak256\n  dup2\n  dup4\n  mstore\n  0x20\n  mstore\n  0x40\n  dup3\n  keccak256\n  0x01\n  not(0xff)\n  dup3\n  sload\n  and\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  swap2\n  0x00\n  dup1\n  mload\n  0x20\n  data_01400fe2f234cf888b5e4c66700c7903f33f31bfc9675e51cb0119f915eb534d\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  dup2\n  dup1\n  log4\n    /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  pop\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x00\n    /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  dup2\n  dup2\n  mstore\n  mstore(0x20, 0x729ef9451dd492832bd2a98139702ced95dfa0cec7e99526dbbcb957abcbc476)\n  0x40\n  dup2\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  swap1\n  swap2\n    /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  swap1\n    /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":534:564  keccak256(\"POOL_MANAGER_ROLE\") */\n  0x6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff\n  swap1\n    /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  0xff\n  and\n  tag_9\n  jumpi\n  dup1\n  dup4\n  mstore\n  dup3\n  0x20\n  mstore\n  0x40\n  dup4\n  keccak256\n  dup3\n  dup5\n  mstore\n  0x20\n  mstore\n  0x40\n  dup4\n  keccak256\n  0x01\n  not(0xff)\n  dup3\n  sload\n  and\n  or\n  swap1\n  sstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_01400fe2f234cf888b5e4c66700c7903f33f31bfc9675e51cb0119f915eb534d\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  swap4\n  dup1\n  log4\n    /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  pop\n  pop\n  swap1\n  jump\t// out\nstop\ndata_01400fe2f234cf888b5e4c66700c7903f33f31bfc9675e51cb0119f915eb534d 2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n\nsub_0: assembly {\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_28, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_28:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x01ffc9a7\n      eq\n      tag_30\n      jumpi\n      pop\n      dup1\n      0x05c4fdf9\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x0f4ef8a6\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x1e4966ab\n      eq\n      tag_36\n      jumpi\n      dup1\n      0x1f2f2e14\n      eq\n      tag_38\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_40\n      jumpi\n      dup1\n      0x24a44efb\n      eq\n      tag_42\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_44\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_46\n      jumpi\n      dup1\n      0x37e238c5\n      eq\n      tag_48\n      jumpi\n      dup1\n      0x43756020\n      eq\n      tag_50\n      jumpi\n      dup1\n      0x52fc9b0e\n      eq\n      tag_52\n      jumpi\n      dup1\n      0x56d73568\n      eq\n      tag_54\n      jumpi\n      dup1\n      0x5d102df7\n      eq\n      tag_56\n      jumpi\n      dup1\n      0x7570e389\n      eq\n      tag_58\n      jumpi\n      dup1\n      0x7e72c7d7\n      eq\n      tag_60\n      jumpi\n      dup1\n      0x8a4adf24\n      eq\n      tag_62\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_64\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_66\n      jumpi\n      dup1\n      0xa8d088bb\n      eq\n      tag_68\n      jumpi\n      dup1\n      0xc489579d\n      eq\n      tag_70\n      jumpi\n      dup1\n      0xc56f1b44\n      eq\n      tag_72\n      jumpi\n      dup1\n      0xd3e90fa0\n      eq\n      tag_74\n      jumpi\n      dup1\n      0xd3ffe67a\n      eq\n      tag_76\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_78\n      jumpi\n      0xe7ef32f7\n      eq\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      jumpi(tag_84, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_84\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      tag_86\n      tag_1\n      jump\t// in\n    tag_86:\n      and\n      0x00\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":5593:5606  borrowerPools */\n      0x07\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup3\n      mstore\n      keccak256(0x00, 0x40)\n      swap2\n      mload(0x40)\n      dup1\n      swap3\n      dup3\n      dup6\n      sload\n      swap3\n      dup4\n      dup2\n      mstore\n      add\n      swap5\n      0x00\n      mstore\n      dup3\n      0x00\n      keccak256\n      swap3\n      0x00\n      swap2\n    tag_87:\n      dup4\n      dup4\n      lt\n      tag_88\n      jumpi\n      tag_90\n      dup7\n      tag_91\n      dup2\n      dup11\n      sub\n      dup3\n      tag_13\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      dup3\n      tag_3\n      jump\t// in\n    tag_90:\n      sub\n      swap1\n      return\n    tag_88:\n      dup5\n      sload\n      dup2\n      and\n      dup8\n      mstore\n      swap6\n      dup2\n      add\n      swap6\n      0x01\n      swap5\n      dup6\n      add\n      swap5\n      swap1\n      swap3\n      add\n      swap2\n      jump(tag_87)\n    tag_84:\n      0x00\n      dup1\n      revert\n    tag_78:\n      jumpi(tag_84, callvalue)\n      jumpi(tag_84, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_96\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      calldataload(0x04)\n      tag_97\n      tag_2\n      jump\t// in\n    tag_97:\n      swap1\n      dup1\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_98\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x01\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_7\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_11\n      jump\t// in\n    tag_96:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      stop\n    tag_76:\n      jumpi(tag_84, callvalue)\n      jumpi(tag_84, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      sload(0x03)\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_74:\n      jumpi(tag_84, callvalue)\n      jumpi(tag_84, slt(add(not(0x03), calldatasize), 0x20))\n      0x0180\n      tag_107\n      tag_1\n      jump\t// in\n    tag_107:\n      tag_108\n      tag_22\n      jump\t// in\n    tag_108:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n      mstore(0x20, 0x04)\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":8944:9014  require(poolDetails[pool].lender != address(0), \"Pool not registered\") */\n      tag_109\n      swap1\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup4\n      and\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":8952:8990  poolDetails[pool].lender != address(0) */\n      iszero\n      iszero\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":8944:9014  require(poolDetails[pool].lender != address(0), \"Pool not registered\") */\n      tag_20\n      jump\t// in\n    tag_109:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x00\n      mstore\n      mstore(0x20, 0x04)\n      0xff\n      0x0a\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      swap4\n      tag_110\n      dup6\n      tag_12\n      jump\t// in\n    tag_110:\n      dup1\n      dup3\n      sload\n      and\n      dup6\n      mstore\n      dup1\n      0x01\n      dup4\n      add\n      sload\n      and\n      0x20\n      dup7\n      add\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      0x40\n      dup7\n      add\n      mstore\n      dup1\n      0x03\n      dup4\n      add\n      sload\n      and\n      0x60\n      dup7\n      add\n      mstore\n      dup1\n      0x04\n      dup4\n      add\n      sload\n      and\n      0x80\n      dup7\n      add\n      mstore\n      dup1\n      0x05\n      dup4\n      add\n      sload\n      and\n      0xa0\n      dup7\n      add\n      mstore\n      0x06\n      dup3\n      add\n      sload\n      and\n      0xc0\n      dup6\n      add\n      mstore\n      0x07\n      dup2\n      add\n      sload\n      0xe0\n      dup6\n      add\n      mstore\n      0x08\n      dup2\n      add\n      sload\n      0x0100\n      dup6\n      add\n      mstore\n      0x09\n      dup2\n      add\n      sload\n      0x0120\n      dup6\n      add\n      mstore\n      add\n      sload\n      tag_111\n      dup3\n      dup3\n      and\n      0x0140\n      dup6\n      add\n      tag_14\n      jump\t// in\n    tag_111:\n      0x08\n      shr\n      and\n      iszero\n      iszero\n      0x0160\n      dup3\n      add\n      mstore\n      tag_112\n      mload(0x40)\n      dup1\n      swap3\n      tag_5\n      jump\t// in\n    tag_112:\n      return\n    tag_72:\n      jumpi(tag_84, callvalue)\n      jumpi(tag_84, slt(add(not(0x03), calldatasize), 0x00))\n      mload(0x40)\n      dup1\n      sload(0x03)\n      swap2\n      dup3\n      dup2\n      mstore\n      0x20\n      dup1\n      swap2\n      add\n      swap3\n      mstore(0x00, 0x03)\n      0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b\n      swap2\n      0x00\n      swap1\n    tag_117:\n      dup3\n      dup3\n      lt\n      tag_118\n      jumpi\n      tag_90\n      dup6\n      tag_91\n      dup2\n      dup10\n      sub\n      dup3\n      tag_13\n      jump\t// in\n    tag_118:\n      dup4\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup7\n      mstore\n      swap5\n      dup6\n      add\n      swap5\n      0x01\n      swap4\n      dup5\n      add\n      swap4\n      swap1\n      swap2\n      add\n      swap1\n      jump(tag_117)\n    tag_70:\n      jumpi(tag_84, callvalue)\n      jumpi(tag_84, slt(add(not(0x03), calldatasize), 0x40))\n      tag_126\n      tag_1\n      jump\t// in\n    tag_126:\n      tag_127\n      tag_2\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x00\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0xad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_128\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup3\n      dup2\n      and\n      swap3\n      swap1\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":7441:7468  _vaultManager != address(0) */\n      dup4\n      iszero\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      tag_130\n      jumpi\n      dup3\n      and\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":7560:7588  _rewardManager != address(0) */\n      dup1\n      iszero\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      tag_132\n      jumpi\n      0x01\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap6\n      swap1\n      swap6\n      or\n      swap1\n      sstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":7714:7760  rewardManager = IRewardManager(_rewardManager) */\n      0x02\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup1\n      sload\n      swap1\n      swap5\n      and\n      or\n      swap1\n      swap3\n      sstore\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      dup2\n      mstore\n      swap2\n      swap1\n      swap3\n      and\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":7776:7824  ManagerRegistered(_vaultManager, _rewardManager) */\n      0x8fc18cc172f74c81235145b7927190d2bd0e351fc45bfb17bb572593273cef21\n      swap2\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap1\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":7776:7824  ManagerRegistered(_vaultManager, _rewardManager) */\n      log1\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      stop\n    tag_132:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x24\n      dup1\n      dup3\n      add\n      mstore\n      0x5265776172644d616e616765722063616e6e6f74206265207a65726f20616464\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xe0, 0x72657373)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_130:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x23\n      0x24\n      dup3\n      add\n      mstore\n      0x5661756c744d616e616765722063616e6e6f74206265207a65726f2061646472\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xe8, 0x657373)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_128:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload(0x40)\n      shl(0xe0, 0xe2517d3f)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x04\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      dup3\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n      0x00\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n    tag_68:\n      jumpi(tag_84, callvalue)\n      jumpi(tag_84, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x01)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":8091:8104  rewardManager */\n      0x02\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      sload\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      dup2\n      mstore\n      swap3\n      swap1\n      swap2\n      and\n      0x20\n      dup4\n      add\n      mstore\n      swap1\n      return\n    tag_66:\n      jumpi(tag_84, callvalue)\n      jumpi(tag_84, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      return\n    tag_64:\n      jumpi(tag_84, callvalue)\n      jumpi(tag_84, slt(add(not(0x03), calldatasize), 0x40))\n      tag_148\n      tag_2\n      jump\t// in\n    tag_148:\n      mstore(0x00, calldataload(0x04))\n      mstore(0x20, 0x00)\n      keccak256(0x00, 0x40)\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      0x20\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_62:\n      jumpi(tag_84, callvalue)\n      jumpi(tag_84, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x01)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_60:\n      jumpi(tag_84, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_84\n      jumpi\n      tag_157\n      tag_1\n      jump\t// in\n    tag_157:\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap1\n      dup2\n      dup4\n      and\n      swap3\n      dup4\n      0x00\n      mstore\n      0x04\n      dup3\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":5876:5946  require(poolDetails[pool].lender != address(0), \"Pool not registered\") */\n      tag_158\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup4\n      sload(keccak256(0x00, 0x40))\n      and\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":5884:5922  poolDetails[pool].lender != address(0) */\n      iszero\n      iszero\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":5876:5946  require(poolDetails[pool].lender != address(0), \"Pool not registered\") */\n      tag_20\n      jump\t// in\n    tag_158:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup4\n      0x00\n      mstore\n      0x04\n      dup3\n      mstore\n      dup3\n      sload(keccak256(0x00, 0x40))\n      and\n      dup1\n      0x00\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11139:11150  lenderPools */\n      0x05\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap4\n      dup5\n      dup5\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11122:11165  findIndexInArray(lenderPools[lender], pool) */\n      tag_159\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup4\n      keccak256(0x00, 0x40)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11122:11165  findIndexInArray(lenderPools[lender], pool) */\n      tag_27\n      jump\t// in\n    tag_159:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup3\n      0x00\n      mstore\n      dup6\n      dup6\n      mstore\n      sload(keccak256(0x00, 0x40))\n      swap4\n      not(0x00)\n      swap4\n      dup5\n      dup7\n      add\n      swap6\n      dup7\n      gt\n      tag_167\n      jumpi\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11235:11294  lenderPools[lender][index] = lenderPools[lender][lastIndex] */\n      tag_162\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11541:11570  findIndexInArray(pools, pool) */\n      tag_163\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap4\n      dup6\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11264:11294  lenderPools[lender][lastIndex] */\n      tag_164\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11235:11261  lenderPools[lender][index] */\n      tag_165\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap10\n      dup6\n      0x00\n      mstore\n      dup13\n      dup13\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11264:11294  lenderPools[lender][lastIndex] */\n      tag_16\n      jump\t// in\n    tag_164:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap10\n      swap1\n      sload\n      swap3\n      dup6\n      0x00\n      mstore\n      dup13\n      dup13\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11235:11261  lenderPools[lender][index] */\n      tag_16\n      jump\t// in\n    tag_165:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap2\n      swap1\n      swap3\n      0x03\n      swap11\n      dup12\n      shl\n      shr\n      and\n      swap1\n      dup3\n      sload\n      swap1\n      0x03\n      shl\n      swap2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup1\n      swap2\n      and\n      dup4\n      shl\n      swap3\n      shl\n      not\n      and\n      or\n      swap1\n      sstore\n      jump\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11235:11294  lenderPools[lender][index] = lenderPools[lender][lastIndex] */\n    tag_162:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x00\n      mstore\n      dup7\n      dup7\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11304:11327  lenderPools[lender].pop */\n      tag_166\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11304:11327  lenderPools[lender].pop */\n      tag_25\n      jump\t// in\n    tag_166:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11541:11570  findIndexInArray(pools, pool) */\n      tag_26\n      jump\t// in\n    tag_163:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup4\n      sload\n      dup4\n      dup2\n      add\n      swap1\n      dup2\n      gt\n      tag_167\n      jumpi\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11626:11657  pools[index] = pools[lastIndex] */\n      tag_169\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11641:11657  pools[lastIndex] */\n      swap3\n      tag_170\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11626:11638  pools[index] */\n      tag_171\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11641:11657  pools[lastIndex] */\n      swap3\n      tag_15\n      jump\t// in\n    tag_170:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap1\n      sload\n      swap1\n      dup8\n      shl\n      shr\n      and\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11626:11638  pools[index] */\n      swap2\n      tag_15\n      jump\t// in\n    tag_171:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11626:11657  pools[index] = pools[lastIndex] */\n      swap1\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap2\n      swap1\n      dup3\n      sload\n      swap1\n      0x03\n      shl\n      swap2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup1\n      swap2\n      and\n      dup4\n      shl\n      swap3\n      shl\n      not\n      and\n      or\n      swap1\n      sstore\n      jump\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11626:11657  pools[index] = pools[lastIndex] */\n    tag_169:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup2\n      sload\n      swap4\n      dup5\n      iszero\n      tag_172\n      jumpi\n      0x04\n      0x0a\n      swap5\n      0x00\n      swap7\n      swap4\n      dup8\n      swap5\n      add\n      tag_174\n      tag_175\n      dup3\n      tag_15\n      jump\t// in\n    tag_175:\n      dup2\n      sload\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap1\n      0x03\n      shl\n      shl\n      not\n      and\n      swap1\n      sstore\n      jump\n    tag_174:\n      dup6\n      sstore\n      dup8\n      dup5\n      mstore\n      mstore\n      dup2\n      0x40\n      dup2\n      keccak256\n      swap4\n      dup2\n      dup6\n      sstore\n      dup2\n      0x01\n      dup7\n      add\n      sstore\n      dup2\n      0x02\n      dup7\n      add\n      sstore\n      dup5\n      add\n      sstore\n      dup2\n      0x04\n      dup5\n      add\n      sstore\n      dup3\n      add\n      sstore\n      dup3\n      0x06\n      dup3\n      add\n      sstore\n      dup3\n      0x07\n      dup3\n      add\n      sstore\n      dup3\n      0x08\n      dup3\n      add\n      sstore\n      dup3\n      0x09\n      dup3\n      add\n      sstore\n      add\n      sstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":6138:6160  PoolDeregistered(pool) */\n      0x334d0b2111287dfddebe4b4c1c5af3ae644909d7fcd024377bf601e236ed5abb\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x00\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":6138:6160  PoolDeregistered(pool) */\n      dup1\n      log2\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      stop\n    tag_172:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x31)\n      revert(0x00, 0x24)\n    tag_167:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_58:\n      jumpi(tag_84, callvalue)\n      jumpi(tag_84, slt(add(not(0x03), calldatasize), 0x20))\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      tag_180\n      tag_1\n      jump\t// in\n    tag_180:\n      and\n      swap1\n      dup2\n      0x00\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":9326:9336  poolVaults */\n      0x06\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x20\n      mstore\n      dup1\n      sload(keccak256(0x00, 0x40))\n      and\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":9326:9356  poolVaults[pool] != address(0) */\n      iszero\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      tag_181\n      jumpi\n      0x20\n      swap2\n      0x00\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":9326:9336  poolVaults */\n      0x06\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup3\n      mstore\n      sload(keccak256(0x00, 0x40))\n      and\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_181:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x23\n      0x24\n      dup3\n      add\n      mstore\n      0x506f6f6c206e6f742072656769737465726564206f7220686173206e6f207661\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xea, 0x1d5b1d)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_56:\n      jumpi(tag_84, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_84\n      jumpi\n      tag_187\n      tag_1\n      jump\t// in\n    tag_187:\n      0x00\n      dup1\n      mstore\n      0x00\n      dup3\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":9936:9946  msg.sender */\n      caller\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x00\n      mstore\n      dup3\n      mstore\n      jumpi(tag_188, iszero(and(sload(keccak256(0x00, 0x40)), 0xff)))\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_96\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap3\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":534:564  keccak256(\"POOL_MANAGER_ROLE\") */\n      0x6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup3\n      mstore\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_191\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x40\n      dup5\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_7\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_192\n      dup4\n      tag_8\n      jump\t// in\n    tag_192:\n      pop\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup2\n      dup1\n      mstore\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_193\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_7\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_9\n      jump\t// in\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n    tag_188:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      dup4\n      swap1\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x51, 0x21b0b63632b91034b9903737ba1030b71030b236b4b7)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_54:\n      jumpi(tag_84, callvalue)\n      jumpi(tag_84, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":534:564  keccak256(\"POOL_MANAGER_ROLE\") */\n      0x6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup2\n      mstore\n      return\n    tag_52:\n      jumpi(tag_84, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_84\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      tag_202\n      tag_1\n      jump\t// in\n    tag_202:\n      and\n      0x00\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":4947:4958  lenderPools */\n      0x05\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap1\n      dup2\n      dup2\n      mstore\n      keccak256(0x00, 0x40)\n      swap2\n      mload(0x40)\n      dup1\n      dup5\n      dup5\n      dup3\n      swap7\n      sload\n      swap4\n      dup5\n      dup2\n      mstore\n      add\n      swap1\n      0x00\n      mstore\n      dup5\n      0x00\n      keccak256\n      swap3\n      0x00\n    tag_203:\n      dup7\n      dup3\n      dup3\n      lt\n      tag_204\n      jumpi\n      pop\n      pop\n      pop\n      tag_206\n      swap3\n      pop\n      sub\n      dup5\n      tag_13\n      jump\t// in\n    tag_206:\n      dup3\n      mload\n      swap4\n      tag_207\n      dup6\n      tag_21\n      jump\t// in\n    tag_207:\n      swap5\n      tag_208\n      mload(0x40)\n      swap7\n      dup8\n      tag_13\n      jump\t// in\n    tag_208:\n      dup1\n      dup7\n      mstore\n      tag_209\n      not(0x1f)\n      swap2\n      tag_21\n      jump\t// in\n    tag_209:\n      add\n      dup4\n      0x00\n    tag_210:\n      dup3\n      dup2\n      lt\n      tag_211\n      jumpi\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":5137:5150  uint256 i = 0 */\n      pop\n      pop\n      pop\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x00\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":5181:5184  i++ */\n    tag_213:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup5\n      mload\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":5152:5179  i < lenderPoolsArray.length */\n      dup2\n      lt\n      iszero\n      tag_214\n      jumpi\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":5225:5244  lenderPoolsArray[i] */\n      dup1\n      dup3\n      tag_216\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":5181:5184  i++ */\n      tag_217\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":5225:5244  lenderPoolsArray[i] */\n      swap4\n      dup9\n      tag_24\n      jump\t// in\n    tag_216:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload\n      and\n      0x00\n      mstore\n      0x04\n      dup6\n      mstore\n      keccak256(0x00, 0x40)\n      mload(0x40)\n      swap1\n      tag_218\n      dup3\n      tag_12\n      jump\t// in\n    tag_218:\n      dup5\n      dup2\n      sload\n      and\n      dup3\n      mstore\n      dup5\n      0x01\n      dup3\n      add\n      sload\n      and\n      dup8\n      dup4\n      add\n      mstore\n      0x02\n      dup2\n      add\n      sload\n      0x40\n      dup4\n      add\n      mstore\n      dup5\n      0x03\n      dup3\n      add\n      sload\n      and\n      0x60\n      dup4\n      add\n      mstore\n      dup5\n      0x04\n      dup3\n      add\n      sload\n      and\n      0x80\n      dup4\n      add\n      mstore\n      dup5\n      dup7\n      dup3\n      add\n      sload\n      and\n      0xa0\n      dup4\n      add\n      mstore\n      dup5\n      0x06\n      dup3\n      add\n      sload\n      and\n      0xc0\n      dup4\n      add\n      mstore\n      0x07\n      dup2\n      add\n      sload\n      0xe0\n      dup4\n      add\n      mstore\n      0x0a\n      0x08\n      swap2\n      dup3\n      dup2\n      add\n      sload\n      0x0100\n      dup6\n      add\n      mstore\n      0x09\n      dup2\n      add\n      sload\n      0x0120\n      dup6\n      add\n      mstore\n      add\n      sload\n      0xff\n      swap2\n      tag_219\n      dup4\n      dup4\n      and\n      0x0140\n      dup7\n      add\n      tag_14\n      jump\t// in\n    tag_219:\n      shr\n      and\n      iszero\n      iszero\n      0x0160\n      dup3\n      add\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":5200:5245  details[i] = poolDetails[lenderPoolsArray[i]] */\n      tag_220\n      dup3\n      dup10\n      tag_24\n      jump\t// in\n    tag_220:\n      mstore\n      tag_221\n      dup2\n      dup9\n      tag_24\n      jump\t// in\n    tag_221:\n      pop\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":5181:5184  i++ */\n      tag_23\n      jump\t// in\n    tag_217:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":5137:5150  uint256 i = 0 */\n      jump(tag_213)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":5152:5179  i < lenderPoolsArray.length */\n    tag_214:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x40\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      dup8\n      mload\n      dup2\n      dup8\n      add\n      dup2\n      swap1\n      mstore\n      dup9\n      dup8\n      add\n      swap3\n      dup3\n      add\n      swap1\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":5152:5179  i < lenderPoolsArray.length */\n      dup8\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x00\n    tag_222:\n      dup3\n      dup2\n      lt\n      tag_223\n      jumpi\n      dup5\n      dup5\n      sub\n      dup6\n      return\n    tag_223:\n      swap1\n      swap2\n      swap3\n      dup3\n      0x0180\n      dup3\n      tag_225\n      0x01\n      swap5\n      dup11\n      mload\n      tag_5\n      jump\t// in\n    tag_225:\n      add\n      swap7\n      add\n      swap2\n      add\n      swap5\n      swap3\n      swap2\n      swap1\n      swap5\n      jump(tag_222)\n    tag_211:\n      tag_226\n      tag_22\n      jump\t// in\n    tag_226:\n      dup3\n      dup3\n      dup11\n      add\n      add\n      mstore\n      add\n      dup5\n      swap1\n      jump(tag_210)\n    tag_204:\n      dup6\n      sload\n      dup11\n      and\n      dup5\n      mstore\n      0x01\n      swap6\n      dup7\n      add\n      swap6\n      dup10\n      swap6\n      pop\n      swap4\n      add\n      swap3\n      add\n      jump(tag_203)\n    tag_50:\n      jumpi(tag_84, callvalue)\n      jumpi(tag_84, slt(add(not(0x03), calldatasize), 0x0160))\n      tag_231\n      tag_1\n      jump\t// in\n    tag_231:\n      tag_232\n      tag_2\n      jump\t// in\n    tag_232:\n      swap1\n      calldataload(0x44)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_84\n      jumpi\n      calldataload(0x64)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_84\n      jumpi\n      calldataload(0x84)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_84\n      jumpi\n      calldataload(0xa4)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_84\n      jumpi\n      calldataload(0xc4)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_84\n      jumpi\n      jumpi(tag_84, iszero(lt(calldataload(0x0144), 0x02)))\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3418:3436  pool != address(0) */\n      iszero\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      tag_245\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0x04)\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n      tag_247\n      jumpi\n      mload(0x40)\n      swap3\n      tag_249\n      dup5\n      tag_12\n      jump\t// in\n    tag_249:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      dup2\n      and\n      dup6\n      mstore\n      dup6\n      dup2\n      and\n      0x20\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      dup7\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3732:3747  block.timestamp */\n      timestamp\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x40\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      dup7\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n      dup7\n      dup2\n      and\n      0x60\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      dup7\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n      swap1\n      dup2\n      and\n      0x80\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      dup6\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n      swap1\n      dup2\n      and\n      0xa0\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      dup5\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n      and\n      0xc0\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      dup3\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n      calldataload(0xe4)\n      0xe0\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      dup3\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n      calldataload(0x0104)\n      0x0100\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      dup3\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n      calldataload(0x0124)\n      0x0120\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      dup3\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      tag_250\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      calldataload(0x0144)\n      0x0140\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      dup4\n      add\n      tag_14\n      jump\t// in\n    tag_250:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x00\n      0x0160\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      dup3\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup5\n      and\n      0x00\n      mstore\n      mstore(0x20, 0x04)\n      0x0a\n      keccak256(0x00, 0x40)\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup4\n      mload\n      and\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n      swap1\n      dup2\n      dup4\n      sload\n      and\n      or\n      dup3\n      sstore\n      0x01\n      dup3\n      add\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x20\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      dup7\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload\n      and\n      dup3\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n      0x40\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      dup5\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload\n      0x02\n      dup4\n      add\n      sstore\n      0x03\n      dup3\n      add\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x60\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      dup7\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload\n      and\n      dup3\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n      0x04\n      dup3\n      add\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0x80\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      dup7\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload\n      and\n      dup3\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n      0x05\n      dup3\n      add\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0xa0\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      dup7\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload\n      and\n      dup3\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n      0x06\n      dup3\n      add\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      0xc0\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      dup7\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload\n      and\n      swap1\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n      0xe0\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      dup4\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload\n      0x07\n      dup3\n      add\n      sstore\n      0x0100\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      dup4\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload\n      0x08\n      dup3\n      add\n      sstore\n      0x0120\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      dup4\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload\n      0x09\n      dup3\n      add\n      sstore\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      swap1\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x0140\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      dup2\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload\n      swap1\n      0x02\n      dup3\n      lt\n      iszero\n      tag_251\n      jumpi\n      0xff\n      0xff00\n      0x0160\n      dup6\n      sload\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":3617:4079  IPoolOrganizer.PoolDetails({... */\n      swap4\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload\n      iszero\n      iszero\n      0x08\n      shl\n      and\n      swap3\n      and\n      swap1\n      not(0xffff)\n      and\n      or\n      or\n      swap1\n      sstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup5\n      and\n      0x00\n      mstore\n      mstore(0x20, 0x05)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":4089:4119  lenderPools[lender].push(pool) */\n      tag_253\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup4\n      keccak256(0x00, 0x40)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":4089:4119  lenderPools[lender].push(pool) */\n      tag_19\n      jump\t// in\n    tag_253:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      sload(0x03)\n      shl(0x40, 0x01)\n      dup2\n      lt\n      iszero\n      tag_254\n      jumpi\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":4160:4215  PoolRegistered(pool, lender, borrower, vault, poolType) */\n      0x8f723e49dc038e67c41b41307a1e0c65653d50125a0c474a21ac32d9a0b24d2b\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap2\n      tag_256\n      dup6\n      tag_171\n      dup5\n      0x01\n      0x40\n      swap7\n      add\n      0x03\n      sstore\n      tag_15\n      jump\t// in\n    tag_256:\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap5\n      and\n      dup5\n      mstore\n      tag_258\n      0x20\n      dup6\n      add\n      calldataload(0x0144)\n      tag_4\n      jump\t// in\n    tag_258:\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap6\n      dup2\n      and\n      swap5\n      and\n      swap3\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":4160:4215  PoolRegistered(pool, lender, borrower, vault, poolType) */\n      log4\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      stop\n    tag_254:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_251:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_247:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x506f6f6c20616c72656164792072656769737465726564000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_245:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x506f6f6c20616464726573732063616e6e6f74206265207a65726f0000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_48:\n      jumpi(tag_84, callvalue)\n      jumpi(tag_84, slt(add(not(0x03), calldatasize), 0x40))\n      tag_263\n      tag_1\n      jump\t// in\n    tag_263:\n      tag_264\n      tag_2\n      jump\t// in\n    tag_264:\n      swap1\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap2\n      dup3\n      dup3\n      and\n      dup1\n      0x00\n      mstore\n      dup4\n      0x20\n      swap3\n      0x04\n      dup5\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":6441:6511  require(poolDetails[pool].lender != address(0), \"Pool not registered\") */\n      tag_265\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup3\n      sload(keccak256(0x00, 0x40))\n      and\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":6449:6487  poolDetails[pool].lender != address(0) */\n      iszero\n      iszero\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":6441:6511  require(poolDetails[pool].lender != address(0), \"Pool not registered\") */\n      tag_20\n      jump\t// in\n    tag_265:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      and\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":6542:6567  newBorrower != address(0) */\n      swap4\n      dup5\n      iszero\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      tag_266\n      jumpi\n      dup2\n      0x00\n      mstore\n      0x04\n      dup4\n      mstore\n      dup1\n      0x01\n      keccak256(0x00, 0x40)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":6665:6691  poolDetails[pool].borrower */\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      sload\n      and\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":6705:6735  currentBorrower != newBorrower */\n      dup6\n      dup2\n      sub\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":6701:6985  if (currentBorrower != newBorrower) {... */\n      tag_268\n      jumpi\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      stop\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":6701:6985  if (currentBorrower != newBorrower) {... */\n    tag_268:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":6755:6784  currentBorrower != address(0) */\n      dup1\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":6751:6870  if (currentBorrower != address(0)) {... */\n      tag_270\n      jumpi\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":6701:6985  if (currentBorrower != newBorrower) {... */\n    tag_271:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      pop\n      pop\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":6883:6920  borrowerPools[newBorrower].push(pool) */\n      tag_272\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x04\n      swap4\n      dup6\n      0x00\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":6883:6896  borrowerPools */\n      0x07\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup5\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":6883:6920  borrowerPools[newBorrower].push(pool) */\n      tag_19\n      jump\t// in\n    tag_272:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x00\n      mstore\n      mstore\n      0x01\n      keccak256(0x00, 0x40)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":6934:6960  poolDetails[pool].borrower */\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap1\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n      0x00\n      dup1\n      return\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":6751:6870  if (currentBorrower != address(0)) {... */\n    tag_270:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup1\n      0x00\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12511:12524  borrowerPools */\n      0x07\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup5\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12494:12541  findIndexInArray(borrowerPools[borrower], pool) */\n      tag_273\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup6\n      keccak256(0x00, 0x40)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12494:12541  findIndexInArray(borrowerPools[borrower], pool) */\n      tag_27\n      jump\t// in\n    tag_273:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap1\n      dup1\n      0x00\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12511:12524  borrowerPools */\n      0x07\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup6\n      mstore\n      sload(keccak256(0x00, 0x40))\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12555:12593  index < borrowerPools[borrower].length */\n      swap3\n      dup4\n      dup4\n      lt\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12551:12798  if (index < borrowerPools[borrower].length) {... */\n      tag_274\n      jumpi\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":6751:6870  if (currentBorrower != address(0)) {... */\n    tag_275:\n      pop\n      pop\n      jump(tag_271)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12551:12798  if (index < borrowerPools[borrower].length) {... */\n    tag_274:\n      not(0x00)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup5\n      add\n      swap7\n      swap3\n      swap4\n      dup8\n      gt\n      tag_167\n      jumpi\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12677:12707  borrowerPools[borrower][index] */\n      tag_278\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":6883:6920  borrowerPools[newBorrower].push(pool) */\n      tag_272\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap5\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12677:12744  borrowerPools[borrower][index] = borrowerPools[borrower][lastIndex] */\n      tag_279\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap3\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12710:12744  borrowerPools[borrower][lastIndex] */\n      tag_280\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x04\n      swap11\n      dup7\n      0x00\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12511:12524  borrowerPools */\n      0x07\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup12\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12710:12744  borrowerPools[borrower][lastIndex] */\n      tag_16\n      jump\t// in\n    tag_280:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap4\n      swap1\n      sload\n      swap3\n      dup7\n      0x00\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12511:12524  borrowerPools */\n      0x07\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup12\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12677:12707  borrowerPools[borrower][index] */\n      tag_16\n      jump\t// in\n    tag_278:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap3\n      swap1\n      swap4\n      0x03\n      shl\n      shr\n      and\n      swap1\n      dup3\n      sload\n      swap1\n      0x03\n      shl\n      swap2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup1\n      swap2\n      and\n      dup4\n      shl\n      swap3\n      shl\n      not\n      and\n      or\n      swap1\n      sstore\n      jump\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12677:12744  borrowerPools[borrower][index] = borrowerPools[borrower][lastIndex] */\n    tag_279:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x00\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12511:12524  borrowerPools */\n      0x07\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup5\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12758:12785  borrowerPools[borrower].pop */\n      tag_281\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      keccak256(0x00, 0x40)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12758:12785  borrowerPools[borrower].pop */\n      tag_25\n      jump\t// in\n    tag_281:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12551:12798  if (index < borrowerPools[borrower].length) {... */\n      swap4\n      dup7\n      dup1\n      jump(tag_275)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n    tag_266:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      0x23\n      0x24\n      dup3\n      add\n      mstore\n      0x426f72726f7765722063616e6e6f7420626520746865207a65726f2061646472\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xe8, 0x657373)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_46:\n      jumpi(tag_84, callvalue)\n      jumpi(tag_84, slt(add(not(0x03), calldatasize), 0x40))\n      tag_286\n      tag_2\n      jump\t// in\n    tag_286:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_96\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap1\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_11\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_287:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mload(0x40)\n      shl(0xe1, 0x334bd919)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      dup2\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x04\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      revert\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n    tag_44:\n      jumpi(tag_84, callvalue)\n      jumpi(tag_84, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_96\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      calldataload(0x04)\n      tag_295\n      tag_2\n      jump\t// in\n    tag_295:\n      swap1\n      dup1\n      0x00\n      mstore\n      mstore(0x20, 0x00)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_296\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x01\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      tag_7\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_10\n      jump\t// in\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n    tag_42:\n      jumpi(tag_84, callvalue)\n      0x20\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_84\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      tag_301\n      tag_1\n      jump\t// in\n    tag_301:\n      and\n      0x00\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":8625:8636  lenderPools */\n      0x05\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup3\n      mstore\n      keccak256(0x00, 0x40)\n      swap2\n      mload(0x40)\n      dup1\n      swap3\n      dup3\n      dup6\n      sload\n      swap3\n      dup4\n      dup2\n      mstore\n      add\n      swap5\n      0x00\n      mstore\n      dup3\n      0x00\n      keccak256\n      swap3\n      0x00\n      swap2\n    tag_302:\n      dup4\n      dup4\n      lt\n      tag_303\n      jumpi\n      tag_90\n      dup7\n      tag_91\n      dup2\n      dup11\n      sub\n      dup3\n      tag_13\n      jump\t// in\n    tag_303:\n      dup5\n      sload\n      dup2\n      and\n      dup8\n      mstore\n      swap6\n      dup2\n      add\n      swap6\n      0x01\n      swap5\n      dup6\n      add\n      swap5\n      swap1\n      swap3\n      add\n      swap2\n      jump(tag_302)\n    tag_40:\n      jumpi(tag_84, callvalue)\n      jumpi(tag_84, slt(add(not(0x03), calldatasize), 0x20))\n      mstore(0x00, calldataload(0x04))\n      mstore(0x20, 0x00)\n      0x20\n      0x01\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_38:\n      jumpi(tag_84, callvalue)\n      jumpi(tag_84, slt(add(not(0x03), calldatasize), 0x20))\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":4464:4534  require(poolDetails[pool].lender != address(0), \"Pool not registered\") */\n      tag_315\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup2\n      tag_316\n      tag_1\n      jump\t// in\n    tag_316:\n      and\n      swap2\n      dup3\n      0x00\n      mstore\n      mstore(0x20, 0x04)\n      sload(keccak256(0x00, 0x40))\n      and\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":4472:4510  poolDetails[pool].lender != address(0) */\n      iszero\n      iszero\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":4464:4534  require(poolDetails[pool].lender != address(0), \"Pool not registered\") */\n      tag_20\n      jump\t// in\n    tag_315:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x00\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0x04)\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":4544:4568  poolDetails[pool].funded */\n      0x0a\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n      stop\n    tag_36:\n      jumpi(tag_84, callvalue)\n      jumpi(tag_84, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      tag_321\n      tag_1\n      jump\t// in\n    tag_321:\n      and\n      0x00\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":808:853  mapping(address => address) public poolVaults */\n      0x06\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup3\n      mstore\n      sload(keccak256(0x00, 0x40))\n      and\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_34:\n      jumpi(tag_84, callvalue)\n      jumpi(tag_84, slt(add(not(0x03), calldatasize), 0x00))\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":610:645  IRewardManager public rewardManager */\n      0x02\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_32:\n      jumpi(tag_84, callvalue)\n      jumpi(tag_84, slt(add(not(0x03), calldatasize), 0x40))\n      tag_330\n      tag_1\n      jump\t// in\n    tag_330:\n      tag_331\n      tag_2\n      jump\t// in\n    tag_331:\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap1\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":10461:10479  pool != address(0) */\n      dup2\n      iszero\n      iszero\n      dup1\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":10461:10502  pool != address(0) && vault != address(0) */\n      tag_332\n      jumpi\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n    tag_333:\n      iszero\n      tag_334\n      jumpi\n      dup2\n      0x00\n      mstore\n      mstore(0x20, 0x04)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":10534:10604  require(poolDetails[pool].lender != address(0), \"Pool not registered\") */\n      tag_336\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup2\n      sload(keccak256(0x00, 0x40))\n      and\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":10542:10580  poolDetails[pool].lender != address(0) */\n      iszero\n      iszero\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":10534:10604  require(poolDetails[pool].lender != address(0), \"Pool not registered\") */\n      tag_20\n      jump\t// in\n    tag_336:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup2\n      0x00\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":10635:10645  poolVaults */\n      0x06\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x20\n      mstore\n      dup1\n      sload(keccak256(0x00, 0x40))\n      and\n      tag_337\n      jumpi\n      dup2\n      0x00\n      mstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":10635:10645  poolVaults */\n      0x06\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap3\n      and\n      swap2\n      dup3\n      shl(0xa0, sub(shl(0x60, 0x01), 0x01))\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":10779:10807  VaultRegistered(pool, vault) */\n      0xf8ee9039d8e4d43426638703c71517008894fdea742bb2d2dbff5a46fb07abdb\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x00\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":10779:10807  VaultRegistered(pool, vault) */\n      dup1\n      log3\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      stop\n    tag_337:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x26\n      0x24\n      dup3\n      add\n      mstore\n      0x5661756c7420616c7265616479207265676973746572656420666f7220746869\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xd2, 0x1cc81c1bdbdb)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_334:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x78, 0x496e76616c696420616464726573736573)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":10461:10502  pool != address(0) && vault != address(0) */\n    tag_332:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      pop\n      dup1\n      dup4\n      and\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":10483:10502  vault != address(0) */\n      iszero\n      iszero\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":10461:10502  pool != address(0) && vault != address(0) */\n      jump(tag_333)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n    tag_30:\n      jumpi(tag_84, callvalue)\n      jumpi(tag_84, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      swap1\n      shl(0xe0, 0xffffffff)\n      dup3\n      and\n      dup1\n      swap3\n      sub\n      tag_84\n      jumpi\n      0x20\n      swap2\n      shl(0xe0, 0x7965db0b)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      dup2\n      eq\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup2\n      iszero\n      tag_345\n      jumpi\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n    tag_346:\n      pop\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_345:\n      shl(0xe0, 0x01ffc9a7)\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup4\n      jump(tag_346)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n    tag_1:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_84\n      jumpi\n      jump\t// out\n    tag_2:\n      calldataload(0x24)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_84\n      jumpi\n      jump\t// out\n    tag_3:\n      0x20\n      swap1\n      dup2\n      0x40\n      dup2\n      dup4\n      add\n      swap3\n      dup3\n      dup2\n      mstore\n      dup6\n      mload\n      dup1\n      swap5\n      mstore\n      add\n      swap4\n      add\n      swap2\n      0x00\n    tag_351:\n      dup3\n      dup2\n      lt\n      tag_352\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_352:\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup6\n      mstore\n      swap4\n      dup2\n      add\n      swap4\n      swap3\n      dup2\n      add\n      swap3\n      0x01\n      add\n      jump(tag_351)\n    tag_4:\n      swap1\n      0x02\n      dup3\n      lt\n      iszero\n      tag_251\n      jumpi\n      mstore\n      jump\t// out\n    tag_5:\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup1\n      dup3\n      mload\n      and\n      dup4\n      mstore\n      dup1\n      0x20\n      dup4\n      add\n      mload\n      and\n      0x20\n      dup5\n      add\n      mstore\n      0x40\n      dup3\n      add\n      mload\n      0x40\n      dup5\n      add\n      mstore\n      dup1\n      0x60\n      dup4\n      add\n      mload\n      and\n      0x60\n      dup5\n      add\n      mstore\n      dup1\n      0x80\n      dup4\n      add\n      mload\n      and\n      0x80\n      dup5\n      add\n      mstore\n      dup1\n      0xa0\n      dup4\n      add\n      mload\n      and\n      0xa0\n      dup5\n      add\n      mstore\n      0xc0\n      dup3\n      add\n      mload\n      and\n      0xc0\n      dup4\n      add\n      mstore\n      0xe0\n      dup2\n      add\n      mload\n      0xe0\n      dup4\n      add\n      mstore\n      0x0100\n      dup1\n      dup3\n      add\n      mload\n      swap1\n      dup4\n      add\n      mstore\n      0x0120\n      dup1\n      dup3\n      add\n      mload\n      swap1\n      dup4\n      add\n      mstore\n      tag_356\n      0x0140\n      dup1\n      dup4\n      add\n      mload\n      swap1\n      dup5\n      add\n      swap1\n      tag_4\n      jump\t// in\n    tag_356:\n      0x0160\n      dup1\n      swap2\n      add\n      mload\n      iszero\n      iszero\n      swap2\n      add\n      mstore\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_7:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x20\n      mstore\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n      0x20\n      mstore\n      0xff\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      keccak256\n      sload\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3519:3542  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_357\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_357:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x44\n      swap1\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      swap1\n      shl(0xe0, 0xe2517d3f)\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup4\n      add\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_8:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup2\n      dup2\n      mstore\n      mstore(0x20, 0x729ef9451dd492832bd2a98139702ced95dfa0cec7e99526dbbcb957abcbc476)\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      swap1\n      swap2\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap1\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":534:564  keccak256(\"POOL_MANAGER_ROLE\") */\n      0x6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff\n      swap1\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0xff\n      and\n      tag_359\n      jumpi\n      dup1\n      dup4\n      mstore\n      dup3\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      dup3\n      dup5\n      mstore\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      0x01\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      swap4\n      dup1\n      log4\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_359:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_9:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n      mstore(0x20, 0xad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5)\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n      swap2\n      swap1\n      0xff\n      and\n      tag_361\n      jumpi\n      dup2\n      dup1\n      mstore\n      dup2\n      0x20\n      mstore\n      0x40\n      dup3\n      keccak256\n      dup2\n      dup4\n      mstore\n      0x20\n      mstore\n      0x40\n      dup3\n      keccak256\n      0x01\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      swap2\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      dup2\n      dup1\n      log4\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_361:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      pop\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_10:\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap2\n      dup1\n      dup4\n      mstore\n      dup3\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      swap2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      swap2\n      dup3\n      dup5\n      mstore\n      0x20\n      mstore\n      0xff\n      0x40\n      dup5\n      keccak256\n      sload\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6276:6299  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      0x00\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      eq\n      tag_359\n      jumpi\n      dup1\n      dup4\n      mstore\n      dup3\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      dup3\n      dup5\n      mstore\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      0x01\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      swap4\n      dup1\n      log4\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_11:\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x00\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap2\n      dup1\n      dup4\n      mstore\n      dup3\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      swap2\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      swap2\n      dup3\n      dup5\n      mstore\n      0x20\n      mstore\n      0xff\n      0x40\n      dup5\n      keccak256\n      sload\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      0x00\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      eq\n      tag_359\n      jumpi\n      dup1\n      dup4\n      mstore\n      dup3\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      dup3\n      dup5\n      mstore\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      not(0xff)\n      dup2\n      sload\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      swap4\n      dup1\n      log4\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n    tag_12:\n      0x0180\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_254\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_13:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_254\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_14:\n      0x02\n      dup3\n      lt\n      iszero\n      tag_251\n      jumpi\n      mstore\n      jump\t// out\n    tag_15:\n      sload(0x03)\n      dup2\n      lt\n      iszero\n      tag_373\n      jumpi\n      mstore(0x00, 0x03)\n      0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b\n      add\n      swap1\n      0x00\n      swap1\n      jump\t// out\n    tag_373:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_16:\n      dup1\n      sload\n      dup3\n      lt\n      iszero\n      tag_373\n      jumpi\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      swap1\n      0x00\n      swap1\n      jump\t// out\n    tag_19:\n      swap1\n      dup2\n      sload\n      swap2\n      shl(0x40, 0x01)\n      dup4\n      lt\n      iszero\n      tag_254\n      jumpi\n      dup3\n      tag_171\n      swap2\n      0x01\n      tag_380\n      swap6\n      add\n      dup2\n      sstore\n      tag_16\n      jump\t// in\n    tag_380:\n      jump\t// out\n    tag_20:\n      iszero\n      tag_381\n      jumpi\n      jump\t// out\n    tag_381:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x6a, 0x141bdbdb081b9bdd081c9959da5cdd195c9959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_21:\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_254\n      jumpi\n      0x05\n      shl\n      0x20\n      add\n      swap1\n      jump\t// out\n    tag_22:\n      mload(0x40)\n      swap1\n      tag_385\n      dup3\n      tag_12\n      jump\t// in\n    tag_385:\n      dup2\n      0x0160\n      0x00\n      swap2\n      dup3\n      dup2\n      mstore\n      dup3\n      0x20\n      dup3\n      add\n      mstore\n      dup3\n      0x40\n      dup3\n      add\n      mstore\n      dup3\n      0x60\n      dup3\n      add\n      mstore\n      dup3\n      0x80\n      dup3\n      add\n      mstore\n      dup3\n      0xa0\n      dup3\n      add\n      mstore\n      dup3\n      0xc0\n      dup3\n      add\n      mstore\n      dup3\n      0xe0\n      dup3\n      add\n      mstore\n      dup3\n      0x0100\n      dup3\n      add\n      mstore\n      dup3\n      0x0120\n      dup3\n      add\n      mstore\n      dup3\n      0x0140\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\t// out\n    tag_23:\n      not(0x00)\n      dup2\n      eq\n      tag_167\n      jumpi\n      0x01\n      add\n      swap1\n      jump\t// out\n    tag_24:\n      dup1\n      mload\n      dup3\n      lt\n      iszero\n      tag_373\n      jumpi\n      0x20\n      swap2\n      0x05\n      shl\n      add\n      add\n      swap1\n      jump\t// out\n    tag_25:\n      dup1\n      sload\n      dup1\n      iszero\n      tag_172\n      jumpi\n      not(0x00)\n      add\n      swap1\n      tag_392\n      tag_175\n      dup4\n      dup4\n      tag_16\n      jump\t// in\n    tag_392:\n      sstore\n      jump\t// out\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11898:12197  function findIndexInArray(address[] storage array, address target)... */\n    tag_26:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12051:12052  0 */\n      0x00\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap1\n      0x03\n      dup1\n      sload\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12034:12134  for (uint256 i = 0; i < array.length; i++) {... */\n      swap3\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12054:12070  i < array.length */\n    tag_394:\n      dup4\n      dup2\n      lt\n      tag_395\n      jumpi\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      pop\n      pop\n      pop\n      pop\n      not(0x00)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11898:12197  function findIndexInArray(address[] storage array, address target)... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12072:12075  i++ */\n    tag_395:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12095:12103  array[i] */\n      tag_397\n      dup2\n      tag_15\n      jump\t// in\n    tag_397:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap1\n      sload\n      swap1\n      dup4\n      shl\n      shr\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap1\n      dup5\n      and\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12095:12113  array[i] == target */\n      eq\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12091:12123  if (array[i] == target) return i */\n      tag_398\n      jumpi\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12072:12075  i++ */\n      tag_400\n      swap1\n      tag_23\n      jump\t// in\n    tag_400:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12039:12052  uint256 i = 0 */\n      jump(tag_394)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12091:12123  if (array[i] == target) return i */\n    tag_398:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12115:12123  return i */\n      swap3\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11898:12197  function findIndexInArray(address[] storage array, address target)... */\n    tag_27:\n      swap1\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12051:12052  0 */\n      0x00\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12072:12075  i++ */\n    tag_401:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      dup3\n      sload\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12054:12070  i < array.length */\n      dup2\n      lt\n      iszero\n      tag_402\n      jumpi\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12095:12103  array[i] */\n      tag_404\n      dup2\n      dup5\n      tag_16\n      jump\t// in\n    tag_404:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      swap1\n      sload\n      0x03\n      swap2\n      swap1\n      swap2\n      shl\n      shr\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap1\n      dup4\n      and\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12095:12113  array[i] == target */\n      eq\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12091:12123  if (array[i] == target) return i */\n      tag_405\n      jumpi\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12072:12075  i++ */\n      tag_407\n      swap1\n      tag_23\n      jump\t// in\n    tag_407:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12039:12052  uint256 i = 0 */\n      jump(tag_401)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12091:12123  if (array[i] == target) return i */\n    tag_405:\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12115:12123  return i */\n      swap2\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":12054:12070  i < array.length */\n    tag_402:\n      pop\n      pop\n      pop\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":428:12806  contract PoolOrganizer is AccessControl, IPoolOrganizer {... */\n      not(0x00)\n        /* \"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":11898:12197  function findIndexInArray(address[] storage array, address target)... */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220814acd6ac0d497257e068ac4d1e9ef7378d5be0d6bf4c27049bc9794af450cd664736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"fun_grantRole": {
									"entryPoint": 180,
									"id": 256,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole_276": {
									"entryPoint": 54,
									"id": 256,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052346200003257620000153362000036565b506200002133620000b4565b50604051611a389081620001558239f35b5f80fd5b6001600160a01b03165f8181527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205490919060ff16620000b057818052816020526040822081835260205260408220600160ff1982541617905533915f8051602062001b8d8339815191528180a4600190565b5090565b6001600160a01b03165f8181527f729ef9451dd492832bd2a98139702ced95dfa0cec7e99526dbbcb957abcbc47660205260408120549091907f6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff9060ff166200014f57808352826020526040832082845260205260408320600160ff198254161790555f8051602062001b8d833981519152339380a4600190565b50509056fe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a7146113db5750806305c4fdf9146112945780630f4ef8a61461126c5780631e4966ab146112335780631f2f2e14146111d8578063248a9ca3146111ac57806324a44efb146111365780632f2ff15d146110fa57806336568abe146110b357806337e238c514610f075780634375602014610b8057806352fc9b0e1461099157806356d73568146109575780635d102df7146108855780637570e389146107e55780637e72c7d7146105ef5780638a4adf24146105c757806391d148541461057f578063a217fddf14610565578063a8d088bb14610532578063c489579d1461039f578063c56f1b441461031e578063d3e90fa01461021f578063d3ffe67a14610202578063d547741f146101c45763e7ef32f71461013a575f80fd5b346101c0576020806003193601126101c0576001600160a01b038061015d61142e565b165f526007825260405f209160405180928285549283815201945f52825f20925f915b8383106101a7576101a386610197818a03826117c3565b6040519182918261145a565b0390f35b8454811687529581019560019485019490920191610180565b5f80fd5b346101c05760403660031901126101c0576102006004356101e3611444565b90805f525f6020526101fb600160405f20015461153d565b611733565b005b346101c0575f3660031901126101c0576020600354604051908152f35b346101c05760203660031901126101c05761018061023b61142e565b6102436118ce565b506001600160a01b039081165f8181526004602052604090205461026a9083161515611874565b5f52600460205260ff600a60405f2060405193610286856117a6565b808254168552806001830154166020860152600282015460408601528060038301541660608601528060048301541660808601528060058301541660a086015260068201541660c0850152600781015460e085015260088101546101008501526009810154610120850152015461030382821661014085016117e5565b60081c16151561016082015261031c60405180926114aa565bf35b346101c0575f3660031901126101c057604051806003549182815260208091019260035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b915f905b82821061037f576101a385610197818903826117c3565b83546001600160a01b031686529485019460019384019390910190610368565b346101c05760403660031901126101c0576103b861142e565b6103c0611444565b335f9081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff1615610514576001600160a01b03828116929083156104c3578216801561047257600180546001600160a01b03199081169590951790556002805490941617909255604080516001600160a01b0393841681529190921660208201527f8fc18cc172f74c81235145b7927190d2bd0e351fc45bfb17bb572593273cef219190a1005b60405162461bcd60e51b8152602060048201526024808201527f5265776172644d616e616765722063616e6e6f74206265207a65726f206164646044820152637265737360e01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f5661756c744d616e616765722063616e6e6f74206265207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405163e2517d3f60e01b81523360048201525f6024820152604490fd5b346101c0575f3660031901126101c057600154600254604080516001600160a01b03938416815292909116602083015290f35b346101c0575f3660031901126101c05760206040515f8152f35b346101c05760403660031901126101c057610598611444565b6004355f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b346101c0575f3660031901126101c0576001546040516001600160a01b039091168152602090f35b346101c0576020806003193601126101c05761060961142e565b9060018060a01b039081831692835f526004825261062e8360405f2054161515611874565b835f52600482528260405f205416805f526005938484526106528360405f206119b4565b825f5285855260405f2054935f19938486019586116107d1576106c36106d9938561068961069c99855f528c8c5260405f2061183a565b99905492855f528c8c5260405f2061183a565b91909260039a8b1b1c169082549060031b9160018060a01b03809116831b921b1916179055565b5f528686526106d460405f20611949565b611965565b83548381019081116107d157610721926106f5610702926117f1565b905490871b1c16916117f1565b90919082549060031b9160018060a01b03809116831b921b1916179055565b81549384156107bd576004600a945f9693879401610756610741826117f1565b81549060018060a01b039060031b1b19169055565b85558784525281604081209381855581600186015581600286015584015581600484015582015582600682015582600782015582600882015582600982015501557f334d0b2111287dfddebe4b4c1c5af3ae644909d7fcd024377bf601e236ed5abb5f80a2005b634e487b7160e01b5f52603160045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b346101c05760203660031901126101c0576001600160a01b038061080761142e565b1690815f5260066020528060405f20541615610834576020915f526006825260405f205416604051908152f35b60405162461bcd60e51b815260206004820152602360248201527f506f6f6c206e6f742072656769737465726564206f7220686173206e6f2076616044820152621d5b1d60ea1b6064820152608490fd5b346101c0576020806003193601126101c05761089f61142e565b5f80525f825260405f20335f52825260ff60405f20541615610919575f610200927f6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff82528181526108f6600160408420015461153d565b6108ff8361157c565b5081805252610914600160405f20015461153d565b61162d565b60405162461bcd60e51b815260048101839052601660248201527521b0b63632b91034b9903737ba1030b71030b236b4b760511b6044820152606490fd5b346101c0575f3660031901126101c05760206040517f6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff8152f35b346101c0576020806003193601126101c0576001600160a01b0390816109b561142e565b165f5260059081815260405f20916040518084848296549384815201905f52845f20925f5b86828210610b68575050506109f1925003846117c3565b8251936109fd856118b6565b94610a0b60405196876117c3565b808652610a1a601f19916118b6565b01835f5b828110610b52575050505f5b8451811015610b08578082610a42610b039388611935565b51165f526004855260405f2060405190610a5b826117a6565b84815416825284600182015416878301526002810154604083015284600382015416606083015284600482015416608083015284868201541660a08301528460068201541660c0830152600781015460e0830152600a600891828101546101008501526009810154610120850152015460ff91610ade83831661014086016117e5565b1c161515610160820152610af28289611935565b52610afd8188611935565b50611927565b610a2a565b60408051858152875181870181905288870192820190875f5b828110610b2e5784840385f35b9091928261018082610b436001948a516114aa565b01960191019492919094610b21565b610b5a6118ce565b82828a010152018490610a1e565b85548a168452600195860195899550930192016109da565b346101c0576101603660031901126101c057610b9a61142e565b610ba2611444565b906044356001600160a01b03811681036101c057606435906001600160a01b03821682036101c0576084356001600160a01b03811681036101c05760a4356001600160a01b03811681036101c05760c435906001600160a01b03821682036101c05760026101443510156101c0576001600160a01b03861615610ec2576001600160a01b038681165f9081526004602052604090205416610e7d5760405192610c4a846117a6565b6001600160a01b03888116855285811660208601524260408601528681166060860152908116608085015290811660a08401521660c082015260e43560e08201526101043561010082015261012435610120820152610cb06101443561014083016117e5565b5f61016082015260018060a01b0384165f526004602052600a60405f2060018060a01b038351166001600160601b0360a01b90818354161782556001820160018060a01b0360208601511682825416179055604084015160028301556003820160018060a01b03606086015116828254161790556004820160018060a01b03608086015116828254161790556005820160018060a01b0360a08601511682825416179055600682019060018060a01b0360c0860151169082541617905560e08301516007820155610100830151600882015561012083015160098201550190610140810151906002821015610e695760ff61ff006101608554930151151560081b1692169061ffff19161717905560018060a01b0384165f526005602052610ddb8360405f2061184f565b600354600160401b811015610e55577f8f723e49dc038e67c41b41307a1e0c65653d50125a0c474a21ac32d9a0b24d2b91610e2285610702846001604096016003556117f1565b81516001600160a01b039094168452610e41602085016101443561149d565b6001600160a01b03908116958116941692a4005b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b60405162461bcd60e51b815260206004820152601760248201527f506f6f6c20616c726561647920726567697374657265640000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f506f6f6c20616464726573732063616e6e6f74206265207a65726f00000000006044820152606490fd5b346101c05760403660031901126101c057610f2061142e565b610f28611444565b9060018060a01b0391828216805f528360209260048452610f508260405f2054161515611874565b1693841561106257815f526004835280600160405f20015416858103610f7257005b80610fb0575b5050610f90600493855f526007845260405f2061184f565b5f5252600160405f2001906001600160601b0360a01b8254161790555f80f35b805f5260078452610fc48560405f206119b4565b90805f526007855260405f205492838310610fe1575b5050610f78565b5f19840196929387116107d157611023610f90946110489261100f60049a865f5260078b5260405f2061183a565b93905492865f5260078b5260405f2061183a565b92909360031b1c169082549060031b9160018060a01b03809116831b921b1916179055565b5f526007845261105a60405f20611949565b938680610fda565b60405162461bcd60e51b815260048101849052602360248201527f426f72726f7765722063616e6e6f7420626520746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b346101c05760403660031901126101c0576110cc611444565b336001600160a01b038216036110e85761020090600435611733565b60405163334bd91960e11b8152600490fd5b346101c05760403660031901126101c057610200600435611119611444565b90805f525f602052611131600160405f20015461153d565b6116bc565b346101c0576020806003193601126101c0576001600160a01b038061115961142e565b165f526005825260405f209160405180928285549283815201945f52825f20925f915b838310611193576101a386610197818a03826117c3565b845481168752958101956001948501949092019161117c565b346101c05760203660031901126101c0576004355f525f6020526020600160405f200154604051908152f35b346101c05760203660031901126101c0576001600160a01b03611214816111fd61142e565b1691825f52600460205260405f2054161515611874565b5f908152600460205260409020600a01805461ff001916610100179055005b346101c05760203660031901126101c05760206001600160a01b038061125761142e565b165f526006825260405f205416604051908152f35b346101c0575f3660031901126101c0576002546040516001600160a01b039091168152602090f35b346101c05760403660031901126101c0576112ad61142e565b6112b5611444565b906001600160a01b0390811690811515806113d0575b1561139757815f5260046020526112e98160405f2054161515611874565b815f5260066020528060405f20541661134357815f52600660205260405f20921691826001600160601b0360a01b8254161790557ff8ee9039d8e4d43426638703c71517008894fdea742bb2d2dbff5a46fb07abdb5f80a3005b60405162461bcd60e51b815260206004820152602660248201527f5661756c7420616c7265616479207265676973746572656420666f72207468696044820152651cc81c1bdbdb60d21b6064820152608490fd5b60405162461bcd60e51b8152602060048201526011602482015270496e76616c69642061646472657373657360781b6044820152606490fd5b5080831615156112cb565b346101c05760203660031901126101c0576004359063ffffffff60e01b82168092036101c057602091637965db0b60e01b811490811561141d575b5015158152f35b6301ffc9a760e01b14905083611416565b600435906001600160a01b03821682036101c057565b602435906001600160a01b03821682036101c057565b602090816040818301928281528551809452019301915f5b828110611480575050505090565b83516001600160a01b031685529381019392810192600101611472565b906002821015610e695752565b60018060a01b03808251168352806020830151166020840152604082015160408401528060608301511660608401528060808301511660808401528060a08301511660a084015260c08201511660c083015260e081015160e08301526101008082015190830152610120808201519083015261152f610140808301519084019061149d565b610160809101511515910152565b805f525f60205260405f20335f5260205260ff60405f2054161561155e5750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b6001600160a01b03165f8181527f729ef9451dd492832bd2a98139702ced95dfa0cec7e99526dbbcb957abcbc47660205260408120549091907f6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff9060ff1661162857808352826020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b6001600160a01b03165f8181527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205490919060ff166116b857818052816020526040822081835260205260408220600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b5090565b905f9180835282602052604083209160018060a01b03169182845260205260ff604084205416155f1461162857808352826020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b905f9180835282602052604083209160018060a01b03169182845260205260ff6040842054165f146116285780835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b610180810190811067ffffffffffffffff821117610e5557604052565b90601f8019910116810190811067ffffffffffffffff821117610e5557604052565b6002821015610e695752565b6003548110156118265760035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01905f90565b634e487b7160e01b5f52603260045260245ffd5b8054821015611826575f5260205f2001905f90565b90815491600160401b831015610e5557826107029160016118729501815561183a565b565b1561187b57565b60405162461bcd60e51b8152602060048201526013602482015272141bdbdb081b9bdd081c9959da5cdd195c9959606a1b6044820152606490fd5b67ffffffffffffffff8111610e555760051b60200190565b604051906118db826117a6565b816101605f918281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152826101408201520152565b5f1981146107d15760010190565b80518210156118265760209160051b010190565b805480156107bd575f190190611962610741838361183a565b55565b5f9060038054925b83811061197d57505050505f1990565b611986816117f1565b905490831b1c6001600160a01b03908116908416146119ad576119a890611927565b61196d565b9250505090565b905f5b82548110156119fa576119ca818461183a565b905460039190911b1c6001600160a01b03908116908316146119f4576119ef90611927565b6119b7565b91505090565b5050505f199056fea2646970667358221220814acd6ac0d497257e068ac4d1e9ef7378d5be0d6bf4c27049bc9794af450cd664736f6c634300081400332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x32 JUMPI PUSH3 0x15 CALLER PUSH3 0x36 JUMP JUMPDEST POP PUSH3 0x21 CALLER PUSH3 0xB4 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1A38 SWAP1 DUP2 PUSH3 0x155 DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0xB0 JUMPI DUP2 DUP1 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1B8D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH32 0x729EF9451DD492832BD2A98139702CED95DFA0CEC7E99526DBBCB957ABCBC476 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x6077685936C8169D09204A1D97DB12E41713588C38E1D29A61867D3DCEE98AFF SWAP1 PUSH1 0xFF AND PUSH3 0x14F JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x1B8D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x13DB JUMPI POP DUP1 PUSH4 0x5C4FDF9 EQ PUSH2 0x1294 JUMPI DUP1 PUSH4 0xF4EF8A6 EQ PUSH2 0x126C JUMPI DUP1 PUSH4 0x1E4966AB EQ PUSH2 0x1233 JUMPI DUP1 PUSH4 0x1F2F2E14 EQ PUSH2 0x11D8 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x11AC JUMPI DUP1 PUSH4 0x24A44EFB EQ PUSH2 0x1136 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x10FA JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x10B3 JUMPI DUP1 PUSH4 0x37E238C5 EQ PUSH2 0xF07 JUMPI DUP1 PUSH4 0x43756020 EQ PUSH2 0xB80 JUMPI DUP1 PUSH4 0x52FC9B0E EQ PUSH2 0x991 JUMPI DUP1 PUSH4 0x56D73568 EQ PUSH2 0x957 JUMPI DUP1 PUSH4 0x5D102DF7 EQ PUSH2 0x885 JUMPI DUP1 PUSH4 0x7570E389 EQ PUSH2 0x7E5 JUMPI DUP1 PUSH4 0x7E72C7D7 EQ PUSH2 0x5EF JUMPI DUP1 PUSH4 0x8A4ADF24 EQ PUSH2 0x5C7 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0xA8D088BB EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xC489579D EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xC56F1B44 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xD3E90FA0 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xD3FFE67A EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x1C4 JUMPI PUSH4 0xE7EF32F7 EQ PUSH2 0x13A JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x15D PUSH2 0x142E JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP3 DUP3 DUP6 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP5 PUSH0 MSTORE DUP3 PUSH0 KECCAK256 SWAP3 PUSH0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1A7 JUMPI PUSH2 0x1A3 DUP7 PUSH2 0x197 DUP2 DUP11 SUB DUP3 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x145A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP5 SLOAD DUP2 AND DUP8 MSTORE SWAP6 DUP2 ADD SWAP6 PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x180 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x200 PUSH1 0x4 CALLDATALOAD PUSH2 0x1E3 PUSH2 0x1444 JUMP JUMPDEST SWAP1 DUP1 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0x1FB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH2 0x153D JUMP JUMPDEST PUSH2 0x1733 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x180 PUSH2 0x23B PUSH2 0x142E JUMP JUMPDEST PUSH2 0x243 PUSH2 0x18CE JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x26A SWAP1 DUP4 AND ISZERO ISZERO PUSH2 0x1874 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0xA PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x286 DUP6 PUSH2 0x17A6 JUMP JUMPDEST DUP1 DUP3 SLOAD AND DUP6 MSTORE DUP1 PUSH1 0x1 DUP4 ADD SLOAD AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE DUP1 PUSH1 0x3 DUP4 ADD SLOAD AND PUSH1 0x60 DUP7 ADD MSTORE DUP1 PUSH1 0x4 DUP4 ADD SLOAD AND PUSH1 0x80 DUP7 ADD MSTORE DUP1 PUSH1 0x5 DUP4 ADD SLOAD AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP6 ADD MSTORE ADD SLOAD PUSH2 0x303 DUP3 DUP3 AND PUSH2 0x140 DUP6 ADD PUSH2 0x17E5 JUMP JUMPDEST PUSH1 0x8 SHR AND ISZERO ISZERO PUSH2 0x160 DUP3 ADD MSTORE PUSH2 0x31C PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x14AA JUMP JUMPDEST RETURN JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x3 SLOAD SWAP2 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 PUSH1 0x3 PUSH0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x37F JUMPI PUSH2 0x1A3 DUP6 PUSH2 0x197 DUP2 DUP10 SUB DUP3 PUSH2 0x17C3 JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x368 JUMP JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x3B8 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x3C0 PUSH2 0x1444 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x514 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP3 SWAP1 DUP4 ISZERO PUSH2 0x4C3 JUMPI DUP3 AND DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP5 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x8FC18CC172F74C81235145B7927190D2BD0E351FC45BFB17BB572593273CEF21 SWAP2 SWAP1 LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5265776172644D616E616765722063616E6E6F74206265207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C744D616E616765722063616E6E6F74206265207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x598 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x609 PUSH2 0x142E JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP4 AND SWAP3 DUP4 PUSH0 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH2 0x62E DUP4 PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x1874 JUMP JUMPDEST DUP4 PUSH0 MSTORE PUSH1 0x4 DUP3 MSTORE DUP3 PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND DUP1 PUSH0 MSTORE PUSH1 0x5 SWAP4 DUP5 DUP5 MSTORE PUSH2 0x652 DUP4 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x19B4 JUMP JUMPDEST DUP3 PUSH0 MSTORE DUP6 DUP6 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP4 PUSH0 NOT SWAP4 DUP5 DUP7 ADD SWAP6 DUP7 GT PUSH2 0x7D1 JUMPI PUSH2 0x6C3 PUSH2 0x6D9 SWAP4 DUP6 PUSH2 0x689 PUSH2 0x69C SWAP10 DUP6 PUSH0 MSTORE DUP13 DUP13 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x183A JUMP JUMPDEST SWAP10 SWAP1 SLOAD SWAP3 DUP6 PUSH0 MSTORE DUP13 DUP13 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x183A JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH1 0x3 SWAP11 DUP12 SHL SHR AND SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 MSTORE DUP7 DUP7 MSTORE PUSH2 0x6D4 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1949 JUMP JUMPDEST PUSH2 0x1965 JUMP JUMPDEST DUP4 SLOAD DUP4 DUP2 ADD SWAP1 DUP2 GT PUSH2 0x7D1 JUMPI PUSH2 0x721 SWAP3 PUSH2 0x6F5 PUSH2 0x702 SWAP3 PUSH2 0x17F1 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP8 SHL SHR AND SWAP2 PUSH2 0x17F1 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 SLOAD SWAP4 DUP5 ISZERO PUSH2 0x7BD JUMPI PUSH1 0x4 PUSH1 0xA SWAP5 PUSH0 SWAP7 SWAP4 DUP8 SWAP5 ADD PUSH2 0x756 PUSH2 0x741 DUP3 PUSH2 0x17F1 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP6 SSTORE DUP8 DUP5 MSTORE MSTORE DUP2 PUSH1 0x40 DUP2 KECCAK256 SWAP4 DUP2 DUP6 SSTORE DUP2 PUSH1 0x1 DUP7 ADD SSTORE DUP2 PUSH1 0x2 DUP7 ADD SSTORE DUP5 ADD SSTORE DUP2 PUSH1 0x4 DUP5 ADD SSTORE DUP3 ADD SSTORE DUP3 PUSH1 0x6 DUP3 ADD SSTORE DUP3 PUSH1 0x7 DUP3 ADD SSTORE DUP3 PUSH1 0x8 DUP3 ADD SSTORE DUP3 PUSH1 0x9 DUP3 ADD SSTORE ADD SSTORE PUSH32 0x334D0B2111287DFDDEBE4B4C1C5AF3AE644909D7FCD024377BF601E236ED5ABB PUSH0 DUP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x807 PUSH2 0x142E JUMP JUMPDEST AND SWAP1 DUP2 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x834 JUMPI PUSH1 0x20 SWAP2 PUSH0 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C206E6F742072656769737465726564206F7220686173206E6F207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1D5B1D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x89F PUSH2 0x142E JUMP JUMPDEST PUSH0 DUP1 MSTORE PUSH0 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 CALLER PUSH0 MSTORE DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x919 JUMPI PUSH0 PUSH2 0x200 SWAP3 PUSH32 0x6077685936C8169D09204A1D97DB12E41713588C38E1D29A61867D3DCEE98AFF DUP3 MSTORE DUP2 DUP2 MSTORE PUSH2 0x8F6 PUSH1 0x1 PUSH1 0x40 DUP5 KECCAK256 ADD SLOAD PUSH2 0x153D JUMP JUMPDEST PUSH2 0x8FF DUP4 PUSH2 0x157C JUMP JUMPDEST POP DUP2 DUP1 MSTORE MSTORE PUSH2 0x914 PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH2 0x153D JUMP JUMPDEST PUSH2 0x162D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B0B63632B91034B9903737BA1030B71030B236B4B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x6077685936C8169D09204A1D97DB12E41713588C38E1D29A61867D3DCEE98AFF DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH2 0x9B5 PUSH2 0x142E JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x5 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD DUP1 DUP5 DUP5 DUP3 SWAP7 SLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP1 PUSH0 MSTORE DUP5 PUSH0 KECCAK256 SWAP3 PUSH0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0xB68 JUMPI POP POP POP PUSH2 0x9F1 SWAP3 POP SUB DUP5 PUSH2 0x17C3 JUMP JUMPDEST DUP3 MLOAD SWAP4 PUSH2 0x9FD DUP6 PUSH2 0x18B6 JUMP JUMPDEST SWAP5 PUSH2 0xA0B PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x17C3 JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH2 0xA1A PUSH1 0x1F NOT SWAP2 PUSH2 0x18B6 JUMP JUMPDEST ADD DUP4 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0xB52 JUMPI POP POP POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xB08 JUMPI DUP1 DUP3 PUSH2 0xA42 PUSH2 0xB03 SWAP4 DUP9 PUSH2 0x1935 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE PUSH1 0x4 DUP6 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xA5B DUP3 PUSH2 0x17A6 JUMP JUMPDEST DUP5 DUP2 SLOAD AND DUP3 MSTORE DUP5 PUSH1 0x1 DUP3 ADD SLOAD AND DUP8 DUP4 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE DUP5 PUSH1 0x3 DUP3 ADD SLOAD AND PUSH1 0x60 DUP4 ADD MSTORE DUP5 PUSH1 0x4 DUP3 ADD SLOAD AND PUSH1 0x80 DUP4 ADD MSTORE DUP5 DUP7 DUP3 ADD SLOAD AND PUSH1 0xA0 DUP4 ADD MSTORE DUP5 PUSH1 0x6 DUP3 ADD SLOAD AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0xA PUSH1 0x8 SWAP2 DUP3 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP6 ADD MSTORE ADD SLOAD PUSH1 0xFF SWAP2 PUSH2 0xADE DUP4 DUP4 AND PUSH2 0x140 DUP7 ADD PUSH2 0x17E5 JUMP JUMPDEST SHR AND ISZERO ISZERO PUSH2 0x160 DUP3 ADD MSTORE PUSH2 0xAF2 DUP3 DUP10 PUSH2 0x1935 JUMP JUMPDEST MSTORE PUSH2 0xAFD DUP2 DUP9 PUSH2 0x1935 JUMP JUMPDEST POP PUSH2 0x1927 JUMP JUMPDEST PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE DUP8 MLOAD DUP2 DUP8 ADD DUP2 SWAP1 MSTORE DUP9 DUP8 ADD SWAP3 DUP3 ADD SWAP1 DUP8 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0xB2E JUMPI DUP5 DUP5 SUB DUP6 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 DUP3 PUSH2 0x180 DUP3 PUSH2 0xB43 PUSH1 0x1 SWAP5 DUP11 MLOAD PUSH2 0x14AA JUMP JUMPDEST ADD SWAP7 ADD SWAP2 ADD SWAP5 SWAP3 SWAP2 SWAP1 SWAP5 PUSH2 0xB21 JUMP JUMPDEST PUSH2 0xB5A PUSH2 0x18CE JUMP JUMPDEST DUP3 DUP3 DUP11 ADD ADD MSTORE ADD DUP5 SWAP1 PUSH2 0xA1E JUMP JUMPDEST DUP6 SLOAD DUP11 AND DUP5 MSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 DUP10 SWAP6 POP SWAP4 ADD SWAP3 ADD PUSH2 0x9DA JUMP JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH2 0x160 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0xB9A PUSH2 0x142E JUMP JUMPDEST PUSH2 0xBA2 PUSH2 0x1444 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1C0 JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1C0 JUMPI PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1C0 JUMPI PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1C0 JUMPI PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1C0 JUMPI PUSH1 0x2 PUSH2 0x144 CALLDATALOAD LT ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO PUSH2 0xEC2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xE7D JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xC4A DUP5 PUSH2 0x17A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP6 MSTORE DUP6 DUP2 AND PUSH1 0x20 DUP7 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP7 ADD MSTORE DUP7 DUP2 AND PUSH1 0x60 DUP7 ADD MSTORE SWAP1 DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE SWAP1 DUP2 AND PUSH1 0xA0 DUP5 ADD MSTORE AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x104 CALLDATALOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x124 CALLDATALOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0xCB0 PUSH2 0x144 CALLDATALOAD PUSH2 0x140 DUP4 ADD PUSH2 0x17E5 JUMP JUMPDEST PUSH0 PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0xA PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP1 DUP2 DUP4 SLOAD AND OR DUP3 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP7 ADD MLOAD AND DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP7 ADD MLOAD AND DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP7 ADD MLOAD AND DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP7 ADD MLOAD AND DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x6 DUP3 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC0 DUP7 ADD MLOAD AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x100 DUP4 ADD MLOAD PUSH1 0x8 DUP3 ADD SSTORE PUSH2 0x120 DUP4 ADD MLOAD PUSH1 0x9 DUP3 ADD SSTORE ADD SWAP1 PUSH2 0x140 DUP2 ADD MLOAD SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0xE69 JUMPI PUSH1 0xFF PUSH2 0xFF00 PUSH2 0x160 DUP6 SLOAD SWAP4 ADD MLOAD ISZERO ISZERO PUSH1 0x8 SHL AND SWAP3 AND SWAP1 PUSH2 0xFFFF NOT AND OR OR SWAP1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0xDDB DUP4 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x184F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xE55 JUMPI PUSH32 0x8F723E49DC038E67C41B41307A1E0C65653D50125A0C474A21AC32D9A0B24D2B SWAP2 PUSH2 0xE22 DUP6 PUSH2 0x702 DUP5 PUSH1 0x1 PUSH1 0x40 SWAP7 ADD PUSH1 0x3 SSTORE PUSH2 0x17F1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH2 0xE41 PUSH1 0x20 DUP6 ADD PUSH2 0x144 CALLDATALOAD PUSH2 0x149D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP6 DUP2 AND SWAP5 AND SWAP3 LOG4 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20616C72656164792072656769737465726564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20616464726573732063616E6E6F74206265207A65726F0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0xF20 PUSH2 0x142E JUMP JUMPDEST PUSH2 0xF28 PUSH2 0x1444 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP3 AND DUP1 PUSH0 MSTORE DUP4 PUSH1 0x20 SWAP3 PUSH1 0x4 DUP5 MSTORE PUSH2 0xF50 DUP3 PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x1874 JUMP JUMPDEST AND SWAP4 DUP5 ISZERO PUSH2 0x1062 JUMPI DUP2 PUSH0 MSTORE PUSH1 0x4 DUP4 MSTORE DUP1 PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND DUP6 DUP2 SUB PUSH2 0xF72 JUMPI STOP JUMPDEST DUP1 PUSH2 0xFB0 JUMPI JUMPDEST POP POP PUSH2 0xF90 PUSH1 0x4 SWAP4 DUP6 PUSH0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x184F JUMP JUMPDEST PUSH0 MSTORE MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH0 DUP1 RETURN JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH2 0xFC4 DUP6 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x19B4 JUMP JUMPDEST SWAP1 DUP1 PUSH0 MSTORE PUSH1 0x7 DUP6 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP3 DUP4 DUP4 LT PUSH2 0xFE1 JUMPI JUMPDEST POP POP PUSH2 0xF78 JUMP JUMPDEST PUSH0 NOT DUP5 ADD SWAP7 SWAP3 SWAP4 DUP8 GT PUSH2 0x7D1 JUMPI PUSH2 0x1023 PUSH2 0xF90 SWAP5 PUSH2 0x1048 SWAP3 PUSH2 0x100F PUSH1 0x4 SWAP11 DUP7 PUSH0 MSTORE PUSH1 0x7 DUP12 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x183A JUMP JUMPDEST SWAP4 SWAP1 SLOAD SWAP3 DUP7 PUSH0 MSTORE PUSH1 0x7 DUP12 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x183A JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH1 0x3 SHL SHR AND SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH2 0x105A PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1949 JUMP JUMPDEST SWAP4 DUP7 DUP1 PUSH2 0xFDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F72726F7765722063616E6E6F7420626520746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x10CC PUSH2 0x1444 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x10E8 JUMPI PUSH2 0x200 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x1733 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x200 PUSH1 0x4 CALLDATALOAD PUSH2 0x1119 PUSH2 0x1444 JUMP JUMPDEST SWAP1 DUP1 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0x1131 PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH2 0x153D JUMP JUMPDEST PUSH2 0x16BC JUMP JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x1159 PUSH2 0x142E JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP3 DUP3 DUP6 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP5 PUSH0 MSTORE DUP3 PUSH0 KECCAK256 SWAP3 PUSH0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1193 JUMPI PUSH2 0x1A3 DUP7 PUSH2 0x197 DUP2 DUP11 SUB DUP3 PUSH2 0x17C3 JUMP JUMPDEST DUP5 SLOAD DUP2 AND DUP8 MSTORE SWAP6 DUP2 ADD SWAP6 PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x117C JUMP JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1214 DUP2 PUSH2 0x11FD PUSH2 0x142E JUMP JUMPDEST AND SWAP2 DUP3 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x1874 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x1257 PUSH2 0x142E JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x12AD PUSH2 0x142E JUMP JUMPDEST PUSH2 0x12B5 PUSH2 0x1444 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0x13D0 JUMPI JUMPDEST ISZERO PUSH2 0x1397 JUMPI DUP2 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x12E9 DUP2 PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x1874 JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH2 0x1343 JUMPI DUP2 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP3 AND SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0xF8EE9039D8E4D43426638703C71517008894FDEA742BB2D2DBFF5A46FB07ABDB PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C7420616C7265616479207265676973746572656420666F7220746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1CC81C1BDBDB PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420616464726573736573 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 DUP4 AND ISZERO ISZERO PUSH2 0x12CB JUMP JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1C0 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x141D JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1C0 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1C0 JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1480 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1472 JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0xE69 JUMPI MSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 MLOAD AND DUP4 MSTORE DUP1 PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP1 PUSH1 0x60 DUP4 ADD MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x80 DUP4 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE DUP1 PUSH1 0xA0 DUP4 ADD MLOAD AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP3 ADD MLOAD AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH2 0x120 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH2 0x152F PUSH2 0x140 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD SWAP1 PUSH2 0x149D JUMP JUMPDEST PUSH2 0x160 DUP1 SWAP2 ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x155E JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH32 0x729EF9451DD492832BD2A98139702CED95DFA0CEC7E99526DBBCB957ABCBC476 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x6077685936C8169D09204A1D97DB12E41713588C38E1D29A61867D3DCEE98AFF SWAP1 PUSH1 0xFF AND PUSH2 0x1628 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH2 0x16B8 JUMPI DUP2 DUP1 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 PUSH0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH0 EQ PUSH2 0x1628 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH0 EQ PUSH2 0x1628 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x180 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE55 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE55 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x2 DUP3 LT ISZERO PUSH2 0xE69 JUMPI MSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x1826 JUMPI PUSH1 0x3 PUSH0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1826 JUMPI PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0xE55 JUMPI DUP3 PUSH2 0x702 SWAP2 PUSH1 0x1 PUSH2 0x1872 SWAP6 ADD DUP2 SSTORE PUSH2 0x183A JUMP JUMPDEST JUMP JUMPDEST ISZERO PUSH2 0x187B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x141BDBDB081B9BDD081C9959DA5CDD195C9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE55 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x18DB DUP3 PUSH2 0x17A6 JUMP JUMPDEST DUP2 PUSH2 0x160 PUSH0 SWAP2 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH0 NOT DUP2 EQ PUSH2 0x7D1 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1826 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP1 ISZERO PUSH2 0x7BD JUMPI PUSH0 NOT ADD SWAP1 PUSH2 0x1962 PUSH2 0x741 DUP4 DUP4 PUSH2 0x183A JUMP JUMPDEST SSTORE JUMP JUMPDEST PUSH0 SWAP1 PUSH1 0x3 DUP1 SLOAD SWAP3 JUMPDEST DUP4 DUP2 LT PUSH2 0x197D JUMPI POP POP POP POP PUSH0 NOT SWAP1 JUMP JUMPDEST PUSH2 0x1986 DUP2 PUSH2 0x17F1 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP4 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND EQ PUSH2 0x19AD JUMPI PUSH2 0x19A8 SWAP1 PUSH2 0x1927 JUMP JUMPDEST PUSH2 0x196D JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x19FA JUMPI PUSH2 0x19CA DUP2 DUP5 PUSH2 0x183A JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND EQ PUSH2 0x19F4 JUMPI PUSH2 0x19EF SWAP1 PUSH2 0x1927 JUMP JUMPDEST PUSH2 0x19B7 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST POP POP POP PUSH0 NOT SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0x4A 0xCD PUSH11 0xC0D497257E068AC4D1E9EF PUSH20 0x78D5BE0D6BF4C27049BC9794AF450CD664736F6C PUSH4 0x43000814 STOP CALLER 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D00000000 ",
							"sourceMap": "428:12378:9:-:0;;;;;;2233:42;2264:10;2233:42;:::i;:::-;;2285:41;2264:10;2285:41;:::i;:::-;;428:12378;;;;;;;;;;;;;6179:316:0;-1:-1:-1;;;;;428:12378:9;2232:4:0;428:12378:9;;;;;;;;;;2232:4:0;;428:12378:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;735:10:3;6370:40:0;-1:-1:-1;;;;;;;;;;;6370:40:0;;;428:12378:9;6424:11:0;:::o;6272:217::-;6466:12;;:::o;6179:316::-;-1:-1:-1;;;;;428:12378:9;2954:6:0;428:12378:9;;;;;;;;;;2954:6:0;;428:12378:9;534:30;;428:12378;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:3;6370:40:0;;;428:12378:9;6424:11:0;:::o;6272:217::-;6466:12;;;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 5188,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_18602": {
									"entryPoint": 5166,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_address_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_array_address_dyn": {
									"entryPoint": 5210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_enum_PoolType": {
									"entryPoint": 5277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_struct_PoolDetails": {
									"entryPoint": 5290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"allocate_and_zero_memory_struct_struct_PoolDetails": {
									"entryPoint": 6350,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_array_struct_PoolDetails_dyn": {
									"entryPoint": 6326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_pop_array_address_dyn_storage_ptr": {
									"entryPoint": 6473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"array_push_from_address_to_array_address_dyn_storage_ptr": {
									"entryPoint": 6223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 6083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_18618": {
									"entryPoint": 6054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkRole": {
									"entryPoint": 5437,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_findIndexInArray": {
									"entryPoint": 6580,
									"id": 1510,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_findIndexInArray_18627": {
									"entryPoint": 6501,
									"id": 1510,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole": {
									"entryPoint": 5820,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_grantRole_18623": {
									"entryPoint": 5500,
									"id": 256,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole_18624": {
									"entryPoint": 5677,
									"id": 256,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_revokeRole": {
									"entryPoint": 5939,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_uint256": {
									"entryPoint": 6439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"memory_array_index_access_address_dyn": {
									"entryPoint": 6453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"require_helper_stringliteral_d422": {
									"entryPoint": 6260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"storage_array_index_access_address_dyn_ptr": {
									"entryPoint": 6202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"storage_array_index_access_address_dyn_ptr_18628": {
									"entryPoint": 6129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"update_storage_value_address_to_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"update_storage_value_address_to_address_18691": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"write_to_memory_enum_PoolType": {
									"entryPoint": 6117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a7146113db5750806305c4fdf9146112945780630f4ef8a61461126c5780631e4966ab146112335780631f2f2e14146111d8578063248a9ca3146111ac57806324a44efb146111365780632f2ff15d146110fa57806336568abe146110b357806337e238c514610f075780634375602014610b8057806352fc9b0e1461099157806356d73568146109575780635d102df7146108855780637570e389146107e55780637e72c7d7146105ef5780638a4adf24146105c757806391d148541461057f578063a217fddf14610565578063a8d088bb14610532578063c489579d1461039f578063c56f1b441461031e578063d3e90fa01461021f578063d3ffe67a14610202578063d547741f146101c45763e7ef32f71461013a575f80fd5b346101c0576020806003193601126101c0576001600160a01b038061015d61142e565b165f526007825260405f209160405180928285549283815201945f52825f20925f915b8383106101a7576101a386610197818a03826117c3565b6040519182918261145a565b0390f35b8454811687529581019560019485019490920191610180565b5f80fd5b346101c05760403660031901126101c0576102006004356101e3611444565b90805f525f6020526101fb600160405f20015461153d565b611733565b005b346101c0575f3660031901126101c0576020600354604051908152f35b346101c05760203660031901126101c05761018061023b61142e565b6102436118ce565b506001600160a01b039081165f8181526004602052604090205461026a9083161515611874565b5f52600460205260ff600a60405f2060405193610286856117a6565b808254168552806001830154166020860152600282015460408601528060038301541660608601528060048301541660808601528060058301541660a086015260068201541660c0850152600781015460e085015260088101546101008501526009810154610120850152015461030382821661014085016117e5565b60081c16151561016082015261031c60405180926114aa565bf35b346101c0575f3660031901126101c057604051806003549182815260208091019260035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b915f905b82821061037f576101a385610197818903826117c3565b83546001600160a01b031686529485019460019384019390910190610368565b346101c05760403660031901126101c0576103b861142e565b6103c0611444565b335f9081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff1615610514576001600160a01b03828116929083156104c3578216801561047257600180546001600160a01b03199081169590951790556002805490941617909255604080516001600160a01b0393841681529190921660208201527f8fc18cc172f74c81235145b7927190d2bd0e351fc45bfb17bb572593273cef219190a1005b60405162461bcd60e51b8152602060048201526024808201527f5265776172644d616e616765722063616e6e6f74206265207a65726f206164646044820152637265737360e01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f5661756c744d616e616765722063616e6e6f74206265207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405163e2517d3f60e01b81523360048201525f6024820152604490fd5b346101c0575f3660031901126101c057600154600254604080516001600160a01b03938416815292909116602083015290f35b346101c0575f3660031901126101c05760206040515f8152f35b346101c05760403660031901126101c057610598611444565b6004355f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b346101c0575f3660031901126101c0576001546040516001600160a01b039091168152602090f35b346101c0576020806003193601126101c05761060961142e565b9060018060a01b039081831692835f526004825261062e8360405f2054161515611874565b835f52600482528260405f205416805f526005938484526106528360405f206119b4565b825f5285855260405f2054935f19938486019586116107d1576106c36106d9938561068961069c99855f528c8c5260405f2061183a565b99905492855f528c8c5260405f2061183a565b91909260039a8b1b1c169082549060031b9160018060a01b03809116831b921b1916179055565b5f528686526106d460405f20611949565b611965565b83548381019081116107d157610721926106f5610702926117f1565b905490871b1c16916117f1565b90919082549060031b9160018060a01b03809116831b921b1916179055565b81549384156107bd576004600a945f9693879401610756610741826117f1565b81549060018060a01b039060031b1b19169055565b85558784525281604081209381855581600186015581600286015584015581600484015582015582600682015582600782015582600882015582600982015501557f334d0b2111287dfddebe4b4c1c5af3ae644909d7fcd024377bf601e236ed5abb5f80a2005b634e487b7160e01b5f52603160045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b346101c05760203660031901126101c0576001600160a01b038061080761142e565b1690815f5260066020528060405f20541615610834576020915f526006825260405f205416604051908152f35b60405162461bcd60e51b815260206004820152602360248201527f506f6f6c206e6f742072656769737465726564206f7220686173206e6f2076616044820152621d5b1d60ea1b6064820152608490fd5b346101c0576020806003193601126101c05761089f61142e565b5f80525f825260405f20335f52825260ff60405f20541615610919575f610200927f6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff82528181526108f6600160408420015461153d565b6108ff8361157c565b5081805252610914600160405f20015461153d565b61162d565b60405162461bcd60e51b815260048101839052601660248201527521b0b63632b91034b9903737ba1030b71030b236b4b760511b6044820152606490fd5b346101c0575f3660031901126101c05760206040517f6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff8152f35b346101c0576020806003193601126101c0576001600160a01b0390816109b561142e565b165f5260059081815260405f20916040518084848296549384815201905f52845f20925f5b86828210610b68575050506109f1925003846117c3565b8251936109fd856118b6565b94610a0b60405196876117c3565b808652610a1a601f19916118b6565b01835f5b828110610b52575050505f5b8451811015610b08578082610a42610b039388611935565b51165f526004855260405f2060405190610a5b826117a6565b84815416825284600182015416878301526002810154604083015284600382015416606083015284600482015416608083015284868201541660a08301528460068201541660c0830152600781015460e0830152600a600891828101546101008501526009810154610120850152015460ff91610ade83831661014086016117e5565b1c161515610160820152610af28289611935565b52610afd8188611935565b50611927565b610a2a565b60408051858152875181870181905288870192820190875f5b828110610b2e5784840385f35b9091928261018082610b436001948a516114aa565b01960191019492919094610b21565b610b5a6118ce565b82828a010152018490610a1e565b85548a168452600195860195899550930192016109da565b346101c0576101603660031901126101c057610b9a61142e565b610ba2611444565b906044356001600160a01b03811681036101c057606435906001600160a01b03821682036101c0576084356001600160a01b03811681036101c05760a4356001600160a01b03811681036101c05760c435906001600160a01b03821682036101c05760026101443510156101c0576001600160a01b03861615610ec2576001600160a01b038681165f9081526004602052604090205416610e7d5760405192610c4a846117a6565b6001600160a01b03888116855285811660208601524260408601528681166060860152908116608085015290811660a08401521660c082015260e43560e08201526101043561010082015261012435610120820152610cb06101443561014083016117e5565b5f61016082015260018060a01b0384165f526004602052600a60405f2060018060a01b038351166001600160601b0360a01b90818354161782556001820160018060a01b0360208601511682825416179055604084015160028301556003820160018060a01b03606086015116828254161790556004820160018060a01b03608086015116828254161790556005820160018060a01b0360a08601511682825416179055600682019060018060a01b0360c0860151169082541617905560e08301516007820155610100830151600882015561012083015160098201550190610140810151906002821015610e695760ff61ff006101608554930151151560081b1692169061ffff19161717905560018060a01b0384165f526005602052610ddb8360405f2061184f565b600354600160401b811015610e55577f8f723e49dc038e67c41b41307a1e0c65653d50125a0c474a21ac32d9a0b24d2b91610e2285610702846001604096016003556117f1565b81516001600160a01b039094168452610e41602085016101443561149d565b6001600160a01b03908116958116941692a4005b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b60405162461bcd60e51b815260206004820152601760248201527f506f6f6c20616c726561647920726567697374657265640000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f506f6f6c20616464726573732063616e6e6f74206265207a65726f00000000006044820152606490fd5b346101c05760403660031901126101c057610f2061142e565b610f28611444565b9060018060a01b0391828216805f528360209260048452610f508260405f2054161515611874565b1693841561106257815f526004835280600160405f20015416858103610f7257005b80610fb0575b5050610f90600493855f526007845260405f2061184f565b5f5252600160405f2001906001600160601b0360a01b8254161790555f80f35b805f5260078452610fc48560405f206119b4565b90805f526007855260405f205492838310610fe1575b5050610f78565b5f19840196929387116107d157611023610f90946110489261100f60049a865f5260078b5260405f2061183a565b93905492865f5260078b5260405f2061183a565b92909360031b1c169082549060031b9160018060a01b03809116831b921b1916179055565b5f526007845261105a60405f20611949565b938680610fda565b60405162461bcd60e51b815260048101849052602360248201527f426f72726f7765722063616e6e6f7420626520746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b346101c05760403660031901126101c0576110cc611444565b336001600160a01b038216036110e85761020090600435611733565b60405163334bd91960e11b8152600490fd5b346101c05760403660031901126101c057610200600435611119611444565b90805f525f602052611131600160405f20015461153d565b6116bc565b346101c0576020806003193601126101c0576001600160a01b038061115961142e565b165f526005825260405f209160405180928285549283815201945f52825f20925f915b838310611193576101a386610197818a03826117c3565b845481168752958101956001948501949092019161117c565b346101c05760203660031901126101c0576004355f525f6020526020600160405f200154604051908152f35b346101c05760203660031901126101c0576001600160a01b03611214816111fd61142e565b1691825f52600460205260405f2054161515611874565b5f908152600460205260409020600a01805461ff001916610100179055005b346101c05760203660031901126101c05760206001600160a01b038061125761142e565b165f526006825260405f205416604051908152f35b346101c0575f3660031901126101c0576002546040516001600160a01b039091168152602090f35b346101c05760403660031901126101c0576112ad61142e565b6112b5611444565b906001600160a01b0390811690811515806113d0575b1561139757815f5260046020526112e98160405f2054161515611874565b815f5260066020528060405f20541661134357815f52600660205260405f20921691826001600160601b0360a01b8254161790557ff8ee9039d8e4d43426638703c71517008894fdea742bb2d2dbff5a46fb07abdb5f80a3005b60405162461bcd60e51b815260206004820152602660248201527f5661756c7420616c7265616479207265676973746572656420666f72207468696044820152651cc81c1bdbdb60d21b6064820152608490fd5b60405162461bcd60e51b8152602060048201526011602482015270496e76616c69642061646472657373657360781b6044820152606490fd5b5080831615156112cb565b346101c05760203660031901126101c0576004359063ffffffff60e01b82168092036101c057602091637965db0b60e01b811490811561141d575b5015158152f35b6301ffc9a760e01b14905083611416565b600435906001600160a01b03821682036101c057565b602435906001600160a01b03821682036101c057565b602090816040818301928281528551809452019301915f5b828110611480575050505090565b83516001600160a01b031685529381019392810192600101611472565b906002821015610e695752565b60018060a01b03808251168352806020830151166020840152604082015160408401528060608301511660608401528060808301511660808401528060a08301511660a084015260c08201511660c083015260e081015160e08301526101008082015190830152610120808201519083015261152f610140808301519084019061149d565b610160809101511515910152565b805f525f60205260405f20335f5260205260ff60405f2054161561155e5750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b6001600160a01b03165f8181527f729ef9451dd492832bd2a98139702ced95dfa0cec7e99526dbbcb957abcbc47660205260408120549091907f6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff9060ff1661162857808352826020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b6001600160a01b03165f8181527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205490919060ff166116b857818052816020526040822081835260205260408220600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b5090565b905f9180835282602052604083209160018060a01b03169182845260205260ff604084205416155f1461162857808352826020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b905f9180835282602052604083209160018060a01b03169182845260205260ff6040842054165f146116285780835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b610180810190811067ffffffffffffffff821117610e5557604052565b90601f8019910116810190811067ffffffffffffffff821117610e5557604052565b6002821015610e695752565b6003548110156118265760035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01905f90565b634e487b7160e01b5f52603260045260245ffd5b8054821015611826575f5260205f2001905f90565b90815491600160401b831015610e5557826107029160016118729501815561183a565b565b1561187b57565b60405162461bcd60e51b8152602060048201526013602482015272141bdbdb081b9bdd081c9959da5cdd195c9959606a1b6044820152606490fd5b67ffffffffffffffff8111610e555760051b60200190565b604051906118db826117a6565b816101605f918281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152826101408201520152565b5f1981146107d15760010190565b80518210156118265760209160051b010190565b805480156107bd575f190190611962610741838361183a565b55565b5f9060038054925b83811061197d57505050505f1990565b611986816117f1565b905490831b1c6001600160a01b03908116908416146119ad576119a890611927565b61196d565b9250505090565b905f5b82548110156119fa576119ca818461183a565b905460039190911b1c6001600160a01b03908116908316146119f4576119ef90611927565b6119b7565b91505090565b5050505f199056fea2646970667358221220814acd6ac0d497257e068ac4d1e9ef7378d5be0d6bf4c27049bc9794af450cd664736f6c63430008140033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x13DB JUMPI POP DUP1 PUSH4 0x5C4FDF9 EQ PUSH2 0x1294 JUMPI DUP1 PUSH4 0xF4EF8A6 EQ PUSH2 0x126C JUMPI DUP1 PUSH4 0x1E4966AB EQ PUSH2 0x1233 JUMPI DUP1 PUSH4 0x1F2F2E14 EQ PUSH2 0x11D8 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x11AC JUMPI DUP1 PUSH4 0x24A44EFB EQ PUSH2 0x1136 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x10FA JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x10B3 JUMPI DUP1 PUSH4 0x37E238C5 EQ PUSH2 0xF07 JUMPI DUP1 PUSH4 0x43756020 EQ PUSH2 0xB80 JUMPI DUP1 PUSH4 0x52FC9B0E EQ PUSH2 0x991 JUMPI DUP1 PUSH4 0x56D73568 EQ PUSH2 0x957 JUMPI DUP1 PUSH4 0x5D102DF7 EQ PUSH2 0x885 JUMPI DUP1 PUSH4 0x7570E389 EQ PUSH2 0x7E5 JUMPI DUP1 PUSH4 0x7E72C7D7 EQ PUSH2 0x5EF JUMPI DUP1 PUSH4 0x8A4ADF24 EQ PUSH2 0x5C7 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0xA8D088BB EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xC489579D EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0xC56F1B44 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xD3E90FA0 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xD3FFE67A EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x1C4 JUMPI PUSH4 0xE7EF32F7 EQ PUSH2 0x13A JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x15D PUSH2 0x142E JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP3 DUP3 DUP6 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP5 PUSH0 MSTORE DUP3 PUSH0 KECCAK256 SWAP3 PUSH0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1A7 JUMPI PUSH2 0x1A3 DUP7 PUSH2 0x197 DUP2 DUP11 SUB DUP3 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x145A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP5 SLOAD DUP2 AND DUP8 MSTORE SWAP6 DUP2 ADD SWAP6 PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x180 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x200 PUSH1 0x4 CALLDATALOAD PUSH2 0x1E3 PUSH2 0x1444 JUMP JUMPDEST SWAP1 DUP1 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0x1FB PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH2 0x153D JUMP JUMPDEST PUSH2 0x1733 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x180 PUSH2 0x23B PUSH2 0x142E JUMP JUMPDEST PUSH2 0x243 PUSH2 0x18CE JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x26A SWAP1 DUP4 AND ISZERO ISZERO PUSH2 0x1874 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0xA PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x286 DUP6 PUSH2 0x17A6 JUMP JUMPDEST DUP1 DUP3 SLOAD AND DUP6 MSTORE DUP1 PUSH1 0x1 DUP4 ADD SLOAD AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE DUP1 PUSH1 0x3 DUP4 ADD SLOAD AND PUSH1 0x60 DUP7 ADD MSTORE DUP1 PUSH1 0x4 DUP4 ADD SLOAD AND PUSH1 0x80 DUP7 ADD MSTORE DUP1 PUSH1 0x5 DUP4 ADD SLOAD AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP6 ADD MSTORE ADD SLOAD PUSH2 0x303 DUP3 DUP3 AND PUSH2 0x140 DUP6 ADD PUSH2 0x17E5 JUMP JUMPDEST PUSH1 0x8 SHR AND ISZERO ISZERO PUSH2 0x160 DUP3 ADD MSTORE PUSH2 0x31C PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x14AA JUMP JUMPDEST RETURN JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x3 SLOAD SWAP2 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 PUSH1 0x3 PUSH0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x37F JUMPI PUSH2 0x1A3 DUP6 PUSH2 0x197 DUP2 DUP10 SUB DUP3 PUSH2 0x17C3 JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x368 JUMP JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x3B8 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x3C0 PUSH2 0x1444 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x514 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP3 SWAP1 DUP4 ISZERO PUSH2 0x4C3 JUMPI DUP3 AND DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP5 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x8FC18CC172F74C81235145B7927190D2BD0E351FC45BFB17BB572593273CEF21 SWAP2 SWAP1 LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5265776172644D616E616765722063616E6E6F74206265207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C744D616E616765722063616E6E6F74206265207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH0 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x598 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x609 PUSH2 0x142E JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP4 AND SWAP3 DUP4 PUSH0 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH2 0x62E DUP4 PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x1874 JUMP JUMPDEST DUP4 PUSH0 MSTORE PUSH1 0x4 DUP3 MSTORE DUP3 PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND DUP1 PUSH0 MSTORE PUSH1 0x5 SWAP4 DUP5 DUP5 MSTORE PUSH2 0x652 DUP4 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x19B4 JUMP JUMPDEST DUP3 PUSH0 MSTORE DUP6 DUP6 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP4 PUSH0 NOT SWAP4 DUP5 DUP7 ADD SWAP6 DUP7 GT PUSH2 0x7D1 JUMPI PUSH2 0x6C3 PUSH2 0x6D9 SWAP4 DUP6 PUSH2 0x689 PUSH2 0x69C SWAP10 DUP6 PUSH0 MSTORE DUP13 DUP13 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x183A JUMP JUMPDEST SWAP10 SWAP1 SLOAD SWAP3 DUP6 PUSH0 MSTORE DUP13 DUP13 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x183A JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH1 0x3 SWAP11 DUP12 SHL SHR AND SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 MSTORE DUP7 DUP7 MSTORE PUSH2 0x6D4 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1949 JUMP JUMPDEST PUSH2 0x1965 JUMP JUMPDEST DUP4 SLOAD DUP4 DUP2 ADD SWAP1 DUP2 GT PUSH2 0x7D1 JUMPI PUSH2 0x721 SWAP3 PUSH2 0x6F5 PUSH2 0x702 SWAP3 PUSH2 0x17F1 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP8 SHL SHR AND SWAP2 PUSH2 0x17F1 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 SLOAD SWAP4 DUP5 ISZERO PUSH2 0x7BD JUMPI PUSH1 0x4 PUSH1 0xA SWAP5 PUSH0 SWAP7 SWAP4 DUP8 SWAP5 ADD PUSH2 0x756 PUSH2 0x741 DUP3 PUSH2 0x17F1 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP6 SSTORE DUP8 DUP5 MSTORE MSTORE DUP2 PUSH1 0x40 DUP2 KECCAK256 SWAP4 DUP2 DUP6 SSTORE DUP2 PUSH1 0x1 DUP7 ADD SSTORE DUP2 PUSH1 0x2 DUP7 ADD SSTORE DUP5 ADD SSTORE DUP2 PUSH1 0x4 DUP5 ADD SSTORE DUP3 ADD SSTORE DUP3 PUSH1 0x6 DUP3 ADD SSTORE DUP3 PUSH1 0x7 DUP3 ADD SSTORE DUP3 PUSH1 0x8 DUP3 ADD SSTORE DUP3 PUSH1 0x9 DUP3 ADD SSTORE ADD SSTORE PUSH32 0x334D0B2111287DFDDEBE4B4C1C5AF3AE644909D7FCD024377BF601E236ED5ABB PUSH0 DUP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x807 PUSH2 0x142E JUMP JUMPDEST AND SWAP1 DUP2 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x834 JUMPI PUSH1 0x20 SWAP2 PUSH0 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C206E6F742072656769737465726564206F7220686173206E6F207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1D5B1D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x89F PUSH2 0x142E JUMP JUMPDEST PUSH0 DUP1 MSTORE PUSH0 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 CALLER PUSH0 MSTORE DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x919 JUMPI PUSH0 PUSH2 0x200 SWAP3 PUSH32 0x6077685936C8169D09204A1D97DB12E41713588C38E1D29A61867D3DCEE98AFF DUP3 MSTORE DUP2 DUP2 MSTORE PUSH2 0x8F6 PUSH1 0x1 PUSH1 0x40 DUP5 KECCAK256 ADD SLOAD PUSH2 0x153D JUMP JUMPDEST PUSH2 0x8FF DUP4 PUSH2 0x157C JUMP JUMPDEST POP DUP2 DUP1 MSTORE MSTORE PUSH2 0x914 PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH2 0x153D JUMP JUMPDEST PUSH2 0x162D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x21B0B63632B91034B9903737BA1030B71030B236B4B7 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x6077685936C8169D09204A1D97DB12E41713588C38E1D29A61867D3DCEE98AFF DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH2 0x9B5 PUSH2 0x142E JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x5 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD DUP1 DUP5 DUP5 DUP3 SWAP7 SLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP1 PUSH0 MSTORE DUP5 PUSH0 KECCAK256 SWAP3 PUSH0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0xB68 JUMPI POP POP POP PUSH2 0x9F1 SWAP3 POP SUB DUP5 PUSH2 0x17C3 JUMP JUMPDEST DUP3 MLOAD SWAP4 PUSH2 0x9FD DUP6 PUSH2 0x18B6 JUMP JUMPDEST SWAP5 PUSH2 0xA0B PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x17C3 JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH2 0xA1A PUSH1 0x1F NOT SWAP2 PUSH2 0x18B6 JUMP JUMPDEST ADD DUP4 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0xB52 JUMPI POP POP POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xB08 JUMPI DUP1 DUP3 PUSH2 0xA42 PUSH2 0xB03 SWAP4 DUP9 PUSH2 0x1935 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE PUSH1 0x4 DUP6 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xA5B DUP3 PUSH2 0x17A6 JUMP JUMPDEST DUP5 DUP2 SLOAD AND DUP3 MSTORE DUP5 PUSH1 0x1 DUP3 ADD SLOAD AND DUP8 DUP4 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE DUP5 PUSH1 0x3 DUP3 ADD SLOAD AND PUSH1 0x60 DUP4 ADD MSTORE DUP5 PUSH1 0x4 DUP3 ADD SLOAD AND PUSH1 0x80 DUP4 ADD MSTORE DUP5 DUP7 DUP3 ADD SLOAD AND PUSH1 0xA0 DUP4 ADD MSTORE DUP5 PUSH1 0x6 DUP3 ADD SLOAD AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0xA PUSH1 0x8 SWAP2 DUP3 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0x120 DUP6 ADD MSTORE ADD SLOAD PUSH1 0xFF SWAP2 PUSH2 0xADE DUP4 DUP4 AND PUSH2 0x140 DUP7 ADD PUSH2 0x17E5 JUMP JUMPDEST SHR AND ISZERO ISZERO PUSH2 0x160 DUP3 ADD MSTORE PUSH2 0xAF2 DUP3 DUP10 PUSH2 0x1935 JUMP JUMPDEST MSTORE PUSH2 0xAFD DUP2 DUP9 PUSH2 0x1935 JUMP JUMPDEST POP PUSH2 0x1927 JUMP JUMPDEST PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE DUP8 MLOAD DUP2 DUP8 ADD DUP2 SWAP1 MSTORE DUP9 DUP8 ADD SWAP3 DUP3 ADD SWAP1 DUP8 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0xB2E JUMPI DUP5 DUP5 SUB DUP6 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 DUP3 PUSH2 0x180 DUP3 PUSH2 0xB43 PUSH1 0x1 SWAP5 DUP11 MLOAD PUSH2 0x14AA JUMP JUMPDEST ADD SWAP7 ADD SWAP2 ADD SWAP5 SWAP3 SWAP2 SWAP1 SWAP5 PUSH2 0xB21 JUMP JUMPDEST PUSH2 0xB5A PUSH2 0x18CE JUMP JUMPDEST DUP3 DUP3 DUP11 ADD ADD MSTORE ADD DUP5 SWAP1 PUSH2 0xA1E JUMP JUMPDEST DUP6 SLOAD DUP11 AND DUP5 MSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 DUP10 SWAP6 POP SWAP4 ADD SWAP3 ADD PUSH2 0x9DA JUMP JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH2 0x160 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0xB9A PUSH2 0x142E JUMP JUMPDEST PUSH2 0xBA2 PUSH2 0x1444 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1C0 JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1C0 JUMPI PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1C0 JUMPI PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1C0 JUMPI PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1C0 JUMPI PUSH1 0x2 PUSH2 0x144 CALLDATALOAD LT ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO PUSH2 0xEC2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xE7D JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xC4A DUP5 PUSH2 0x17A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP6 MSTORE DUP6 DUP2 AND PUSH1 0x20 DUP7 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP7 ADD MSTORE DUP7 DUP2 AND PUSH1 0x60 DUP7 ADD MSTORE SWAP1 DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE SWAP1 DUP2 AND PUSH1 0xA0 DUP5 ADD MSTORE AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x104 CALLDATALOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x124 CALLDATALOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0xCB0 PUSH2 0x144 CALLDATALOAD PUSH2 0x140 DUP4 ADD PUSH2 0x17E5 JUMP JUMPDEST PUSH0 PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0xA PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP1 DUP2 DUP4 SLOAD AND OR DUP3 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP7 ADD MLOAD AND DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP7 ADD MLOAD AND DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP7 ADD MLOAD AND DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP7 ADD MLOAD AND DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x6 DUP3 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC0 DUP7 ADD MLOAD AND SWAP1 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x100 DUP4 ADD MLOAD PUSH1 0x8 DUP3 ADD SSTORE PUSH2 0x120 DUP4 ADD MLOAD PUSH1 0x9 DUP3 ADD SSTORE ADD SWAP1 PUSH2 0x140 DUP2 ADD MLOAD SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0xE69 JUMPI PUSH1 0xFF PUSH2 0xFF00 PUSH2 0x160 DUP6 SLOAD SWAP4 ADD MLOAD ISZERO ISZERO PUSH1 0x8 SHL AND SWAP3 AND SWAP1 PUSH2 0xFFFF NOT AND OR OR SWAP1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0xDDB DUP4 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x184F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xE55 JUMPI PUSH32 0x8F723E49DC038E67C41B41307A1E0C65653D50125A0C474A21AC32D9A0B24D2B SWAP2 PUSH2 0xE22 DUP6 PUSH2 0x702 DUP5 PUSH1 0x1 PUSH1 0x40 SWAP7 ADD PUSH1 0x3 SSTORE PUSH2 0x17F1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH2 0xE41 PUSH1 0x20 DUP6 ADD PUSH2 0x144 CALLDATALOAD PUSH2 0x149D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP6 DUP2 AND SWAP5 AND SWAP3 LOG4 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20616C72656164792072656769737465726564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20616464726573732063616E6E6F74206265207A65726F0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0xF20 PUSH2 0x142E JUMP JUMPDEST PUSH2 0xF28 PUSH2 0x1444 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP3 AND DUP1 PUSH0 MSTORE DUP4 PUSH1 0x20 SWAP3 PUSH1 0x4 DUP5 MSTORE PUSH2 0xF50 DUP3 PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x1874 JUMP JUMPDEST AND SWAP4 DUP5 ISZERO PUSH2 0x1062 JUMPI DUP2 PUSH0 MSTORE PUSH1 0x4 DUP4 MSTORE DUP1 PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD AND DUP6 DUP2 SUB PUSH2 0xF72 JUMPI STOP JUMPDEST DUP1 PUSH2 0xFB0 JUMPI JUMPDEST POP POP PUSH2 0xF90 PUSH1 0x4 SWAP4 DUP6 PUSH0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x184F JUMP JUMPDEST PUSH0 MSTORE MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH0 DUP1 RETURN JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH2 0xFC4 DUP6 PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x19B4 JUMP JUMPDEST SWAP1 DUP1 PUSH0 MSTORE PUSH1 0x7 DUP6 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP3 DUP4 DUP4 LT PUSH2 0xFE1 JUMPI JUMPDEST POP POP PUSH2 0xF78 JUMP JUMPDEST PUSH0 NOT DUP5 ADD SWAP7 SWAP3 SWAP4 DUP8 GT PUSH2 0x7D1 JUMPI PUSH2 0x1023 PUSH2 0xF90 SWAP5 PUSH2 0x1048 SWAP3 PUSH2 0x100F PUSH1 0x4 SWAP11 DUP7 PUSH0 MSTORE PUSH1 0x7 DUP12 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x183A JUMP JUMPDEST SWAP4 SWAP1 SLOAD SWAP3 DUP7 PUSH0 MSTORE PUSH1 0x7 DUP12 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x183A JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH1 0x3 SHL SHR AND SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH2 0x105A PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1949 JUMP JUMPDEST SWAP4 DUP7 DUP1 PUSH2 0xFDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F72726F7765722063616E6E6F7420626520746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x10CC PUSH2 0x1444 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x10E8 JUMPI PUSH2 0x200 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x1733 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x200 PUSH1 0x4 CALLDATALOAD PUSH2 0x1119 PUSH2 0x1444 JUMP JUMPDEST SWAP1 DUP1 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH2 0x1131 PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH2 0x153D JUMP JUMPDEST PUSH2 0x16BC JUMP JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x1159 PUSH2 0x142E JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP3 DUP3 DUP6 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP5 PUSH0 MSTORE DUP3 PUSH0 KECCAK256 SWAP3 PUSH0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1193 JUMPI PUSH2 0x1A3 DUP7 PUSH2 0x197 DUP2 DUP11 SUB DUP3 PUSH2 0x17C3 JUMP JUMPDEST DUP5 SLOAD DUP2 AND DUP8 MSTORE SWAP6 DUP2 ADD SWAP6 PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x117C JUMP JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1214 DUP2 PUSH2 0x11FD PUSH2 0x142E JUMP JUMPDEST AND SWAP2 DUP3 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x1874 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x1257 PUSH2 0x142E JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH2 0x12AD PUSH2 0x142E JUMP JUMPDEST PUSH2 0x12B5 PUSH2 0x1444 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0x13D0 JUMPI JUMPDEST ISZERO PUSH2 0x1397 JUMPI DUP2 PUSH0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x12E9 DUP2 PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO ISZERO PUSH2 0x1874 JUMP JUMPDEST DUP2 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH2 0x1343 JUMPI DUP2 PUSH0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP3 AND SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0xF8EE9039D8E4D43426638703C71517008894FDEA742BB2D2DBFF5A46FB07ABDB PUSH0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5661756C7420616C7265616479207265676973746572656420666F7220746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1CC81C1BDBDB PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696420616464726573736573 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP1 DUP4 AND ISZERO ISZERO PUSH2 0x12CB JUMP JUMPDEST CALLVALUE PUSH2 0x1C0 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C0 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1C0 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x141D JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1C0 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1C0 JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1480 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1472 JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0xE69 JUMPI MSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 MLOAD AND DUP4 MSTORE DUP1 PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE DUP1 PUSH1 0x60 DUP4 ADD MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x80 DUP4 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE DUP1 PUSH1 0xA0 DUP4 ADD MLOAD AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP3 ADD MLOAD AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH2 0x120 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH2 0x152F PUSH2 0x140 DUP1 DUP4 ADD MLOAD SWAP1 DUP5 ADD SWAP1 PUSH2 0x149D JUMP JUMPDEST PUSH2 0x160 DUP1 SWAP2 ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND ISZERO PUSH2 0x155E JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH32 0x729EF9451DD492832BD2A98139702CED95DFA0CEC7E99526DBBCB957ABCBC476 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x6077685936C8169D09204A1D97DB12E41713588C38E1D29A61867D3DCEE98AFF SWAP1 PUSH1 0xFF AND PUSH2 0x1628 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH2 0x16B8 JUMPI DUP2 DUP1 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 PUSH0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH0 EQ PUSH2 0x1628 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH0 EQ PUSH2 0x1628 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x180 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE55 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE55 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x2 DUP3 LT ISZERO PUSH2 0xE69 JUMPI MSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x1826 JUMPI PUSH1 0x3 PUSH0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1826 JUMPI PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0xE55 JUMPI DUP3 PUSH2 0x702 SWAP2 PUSH1 0x1 PUSH2 0x1872 SWAP6 ADD DUP2 SSTORE PUSH2 0x183A JUMP JUMPDEST JUMP JUMPDEST ISZERO PUSH2 0x187B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x141BDBDB081B9BDD081C9959DA5CDD195C9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE55 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x18DB DUP3 PUSH2 0x17A6 JUMP JUMPDEST DUP2 PUSH2 0x160 PUSH0 SWAP2 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH0 NOT DUP2 EQ PUSH2 0x7D1 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1826 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP1 ISZERO PUSH2 0x7BD JUMPI PUSH0 NOT ADD SWAP1 PUSH2 0x1962 PUSH2 0x741 DUP4 DUP4 PUSH2 0x183A JUMP JUMPDEST SSTORE JUMP JUMPDEST PUSH0 SWAP1 PUSH1 0x3 DUP1 SLOAD SWAP3 JUMPDEST DUP4 DUP2 LT PUSH2 0x197D JUMPI POP POP POP POP PUSH0 NOT SWAP1 JUMP JUMPDEST PUSH2 0x1986 DUP2 PUSH2 0x17F1 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP4 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND EQ PUSH2 0x19AD JUMPI PUSH2 0x19A8 SWAP1 PUSH2 0x1927 JUMP JUMPDEST PUSH2 0x196D JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x19FA JUMPI PUSH2 0x19CA DUP2 DUP5 PUSH2 0x183A JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND EQ PUSH2 0x19F4 JUMPI PUSH2 0x19EF SWAP1 PUSH2 0x1927 JUMP JUMPDEST PUSH2 0x19B7 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST POP POP POP PUSH0 NOT SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0x4A 0xCD PUSH11 0xC0D497257E068AC4D1E9EF PUSH20 0x78D5BE0D6BF4C27049BC9794AF450CD664736F6C PUSH4 0x43000814 STOP CALLER ",
							"sourceMap": "428:12378:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;428:12378:9;;;:::i;:::-;;;;5593:13;428:12378;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;428:12378:9;;;;4747:26:0;428:12378:9;;;;:::i;:::-;;;;;;;;2475:4:0;428:12378:9;;;;3901:22:0;428:12378:9;2475:4:0;:::i;:::-;4747:26;:::i;:::-;428:12378:9;;;;;;;-1:-1:-1;;428:12378:9;;;;;;;;;;;;;;;;;;;-1:-1:-1;;428:12378:9;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;;428:12378:9;;;;;;;;;;;;;;8944:70;;428:12378;;8952:38;;8944:70;:::i;:::-;428:12378;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;428:12378:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;428:12378:9;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;428:12378:9;;;;;;:::i;:::-;;;:::i;:::-;735:10:3;428:12378:9;;;;;;;;;;;;;3519:23:0;3515:108;;-1:-1:-1;;;;;428:12378:9;;;;;7441:27;;428:12378;;;;7560:28;;428:12378;;;;;-1:-1:-1;;;;;;428:12378:9;;;;;;;;;7714:46;428:12378;;;;;;;;;;;;-1:-1:-1;;;;;428:12378:9;;;;;;;;;;;;;7776:48;;428:12378;7776:48;428:12378;;;;-1:-1:-1;;;428:12378:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;428:12378:9;;;;;;;;;;-1:-1:-1;;;428:12378:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;428:12378:9;;;;;;;3515:108:0;428:12378:9;;-1:-1:-1;;;3565:47:0;;735:10:3;428:12378:9;3565:47:0;;428:12378:9;-1:-1:-1;428:12378:9;;;;;;3565:47:0;428:12378:9;;;;;;-1:-1:-1;;428:12378:9;;;;;;8091:13;428:12378;;;;-1:-1:-1;;;;;428:12378:9;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;428:12378:9;;;;;;;;;;;;;;;;;-1:-1:-1;;428:12378:9;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;428:12378:9;;;;;;;;-1:-1:-1;;;;;428:12378:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;5876:70;428:12378;;;;;;5884:38;;5876:70;:::i;:::-;428:12378;;;;;;;;;;;;;;;11139:11;428:12378;;;;11122:43;428:12378;;;;11122:43;:::i;:::-;428:12378;;;;;;;;;;;;;;;;;;;;;;11235:59;11541:29;428:12378;;11264:30;11235:26;428:12378;;;;;;;;;;11264:30;:::i;:::-;428:12378;;;;;;;;;;;;;11235:26;:::i;:::-;428:12378;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11235:59;428:12378;;;;;11304:23;428:12378;;;11304:23;:::i;:::-;11541:29;:::i;:::-;428:12378;;;;;;;;;;11626:31;11641:16;;11626:12;11641:16;;:::i;:::-;428:12378;;;;;;;11626:12;;:::i;:::-;:31;428:12378;;;;;;;;;;;;;;;;;;;;;;;;;;11626:31;428:12378;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6138:22;428:12378;6138:22;;428:12378;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;428:12378:9;;;;-1:-1:-1;;;;;428:12378:9;;;:::i;:::-;;;;;;9326:10;428:12378;;;;;;;;9326:30;428:12378;;;;;;9326:10;428:12378;;;;;;;;;;;;;;;;-1:-1:-1;;;428:12378:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;428:12378:9;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;9936:10;428:12378;;;;;;;;;;;;;;4330:25:0;428:12378:9;534:30;428:12378;;;;;2475:4:0;3901:22;428:12378:9;;;3901:22:0;428:12378:9;2475:4:0;:::i;:::-;4330:25;;;:::i;:::-;;428:12378:9;;;;2475:4:0;3901:22;428:12378:9;;;3901:22:0;428:12378:9;2475:4:0;:::i;:::-;4330:25;:::i;428:12378:9:-;;;-1:-1:-1;;;428:12378:9;;;;;;;;;;;;;-1:-1:-1;;;428:12378:9;;;;;;;;;;;;;-1:-1:-1;;428:12378:9;;;;;;;534:30;428:12378;;;;;;;;;;;;;;;;-1:-1:-1;;;;;428:12378:9;;;;:::i;:::-;;;;4947:11;428:12378;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;5137:13;;;428:12378;5181:3;428:12378;;5152:27;;;;;5225:19;;;5181:3;5225:19;;;:::i;:::-;428:12378;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;5200:45;;;;:::i;:::-;;;;;;:::i;:::-;;5181:3;:::i;:::-;5137:13;;5152:27;428:12378;;;;;;;;;;;;;;;;;;;;;5152:27;428:12378;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;428:12378:9;;;;;;;;;;;;-1:-1:-1;;428:12378:9;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;428:12378:9;;;;;;;;;-1:-1:-1;;;;;428:12378:9;;;;;;;;-1:-1:-1;;;;;428:12378:9;;;;;;;;-1:-1:-1;;;;;428:12378:9;;;;;;;;;-1:-1:-1;;;;;428:12378:9;;;;;;;;;;;;;-1:-1:-1;;;;;428:12378:9;;3418:18;428:12378;;-1:-1:-1;;;;;428:12378:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;428:12378:9;;;;;;;;;3617:462;;428:12378;3732:15;428:12378;3617:462;;428:12378;;;;;3617:462;;428:12378;;;;;3617:462;;428:12378;;;;;3617:462;;428:12378;;;3617:462;;428:12378;;;;3617:462;;428:12378;;;;3617:462;;428:12378;;;;3617:462;;428:12378;3617:462;428:12378;;;3617:462;;;:::i;:::-;428:12378;;3617:462;;428:12378;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;428:12378:9;;;;;;;;;;;;;;;;;;;3617:462;;428:12378;;;;;;;;;;3617:462;;428:12378;;;;;;;;;;;;;;3617:462;;428:12378;;;;;;;;;;;;;;;;;;3617:462;;428:12378;;;;;;;;;;;;;;;;;;3617:462;;428:12378;;;;;;;;;;;;;;;;;;;3617:462;;428:12378;;;;;;;;;;3617:462;;428:12378;;;;;;3617:462;;428:12378;;;;;;3617:462;;428:12378;;;;;;3617:462;428:12378;3617:462;;428:12378;;;;;;;;;;;;;3617:462;;428:12378;;;;;;;;;;;;;;;;;;;;;;;;;;;;4089:30;428:12378;;;;4089:30;:::i;:::-;428:12378;;-1:-1:-1;;;428:12378:9;;;;;4160:55;428:12378;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;428:12378:9;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;428:12378:9;;;;;;;;;4160:55;428:12378;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;428:12378:9;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;428:12378:9;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;428:12378:9;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;6441:70;428:12378;;;;;;6449:38;;6441:70;:::i;:::-;428:12378;6542:25;;;428:12378;;;;;;;;;;;;;6665:26;428:12378;;6705:30;;;6701:284;;428:12378;6701:284;6755:29;6751:119;;6701:284;428:12378;;6883:37;428:12378;;;;;6883:13;428:12378;;;;;6883:37;:::i;:::-;428:12378;;;;;;;6934:26;428:12378;-1:-1:-1;;;;;428:12378:9;;;;;;;;;;;6751:119;428:12378;;;12511:13;428:12378;;12494:47;428:12378;;;;12494:47;:::i;:::-;428:12378;;;;12511:13;428:12378;;;;;;12555:38;;;;12551:247;;6751:119;;;;;12551:247;-1:-1:-1;;428:12378:9;;;;;;;;;12677:30;6883:37;428:12378;12677:67;428:12378;12710:34;428:12378;;;;;12511:13;428:12378;;;;;12710:34;:::i;:::-;428:12378;;;;;;;12511:13;428:12378;;;;;12677:30;:::i;:::-;428:12378;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12677:67;428:12378;;12511:13;428:12378;;12758:27;428:12378;;;12758:27;:::i;:::-;12551:247;;;;;428:12378;;;-1:-1:-1;;;428:12378:9;;;;;;;;;;;;;;;;;;-1:-1:-1;;;428:12378:9;;;;;;;;;;;;;-1:-1:-1;;428:12378:9;;;;;;:::i;:::-;735:10:3;-1:-1:-1;;;;;428:12378:9;;5421:34:0;5417:102;;5529:37;428:12378:9;;;5529:37:0;:::i;5417:102::-;428:12378:9;;-1:-1:-1;;;5478:30:0;;428:12378:9;;5478:30:0;428:12378:9;;;;;;-1:-1:-1;;428:12378:9;;;;4330:25:0;428:12378:9;;;;:::i;:::-;;;;;;;;2475:4:0;428:12378:9;;;;3901:22:0;428:12378:9;2475:4:0;:::i;:::-;4330:25;:::i;428:12378:9:-;;;;;;;;;;;;;-1:-1:-1;;;;;428:12378:9;;;:::i;:::-;;;;8625:11;428:12378;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;428:12378:9;;;;;;;;;;;;;;;;3901:22:0;428:12378:9;;;;;;;;;;;;;-1:-1:-1;;428:12378:9;;;;-1:-1:-1;;;;;4464:70:9;428:12378;;;:::i;:::-;;;;;;;;;;;;;;4472:38;;4464:70;:::i;:::-;428:12378;;;;;;;;;;4544:24;;428:12378;;-1:-1:-1;;428:12378:9;;;;;;;;;;;;-1:-1:-1;;428:12378:9;;;;;-1:-1:-1;;;;;428:12378:9;;;:::i;:::-;;;;808:45;428:12378;;;;;;;;;;;;;;;;;;;-1:-1:-1;;428:12378:9;;;;610:35;428:12378;;;-1:-1:-1;;;;;428:12378:9;;;;;;;;;;;;;;-1:-1:-1;;428:12378:9;;;;;;:::i;:::-;;;:::i;:::-;;-1:-1:-1;;;;;428:12378:9;;;;10461:18;;;;:41;;428:12378;;;;;;;;;;10534:70;428:12378;;;;;;10542:38;;10534:70;:::i;:::-;428:12378;;;10635:10;428:12378;;;;;;;;;;;;;10635:10;428:12378;;;;;;;;;-1:-1:-1;;;;;428:12378:9;;;;;;;;10779:28;428:12378;10779:28;;428:12378;;;;-1:-1:-1;;;428:12378:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;428:12378:9;;;;;;;;;;-1:-1:-1;;;428:12378:9;;;;;;;;;;;;-1:-1:-1;;;428:12378:9;;;;;;;10461:41;428:12378;;;;10483:19;;10461:41;;428:12378;;;;;;-1:-1:-1;;428:12378:9;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2673:47:0;;;:87;;;;428:12378:9;;;;;;;2673:87:0;-1:-1:-1;;;861:40:4;;-1:-1:-1;2673:87:0;;;428:12378:9;;;;-1:-1:-1;;;;;428:12378:9;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;428:12378:9;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;428:12378:9;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;3199:103:0:-;428:12378:9;2954:6:0;428:12378:9;2954:6:0;428:12378:9;;;2954:6:0;428:12378:9;735:10:3;2954:6:0;428:12378:9;;;;;2954:6:0;428:12378:9;;;3519:23:0;3515:108;;3199:103;:::o;3515:108::-;428:12378:9;;;;3565:47:0;;;;;;735:10:3;3565:47:0;;;428:12378:9;;;;;3565:47:0;6179:316;-1:-1:-1;;;;;428:12378:9;2954:6:0;428:12378:9;;;;;;;;;;2954:6:0;;428:12378:9;534:30;;428:12378;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6370:40:0;735:10:3;6370:40:0;;;428:12378:9;6424:11:0;:::o;6272:217::-;6466:12;;;:::o;6179:316::-;-1:-1:-1;;;;;428:12378:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;735:10:3;6370:40:0;;;;;428:12378:9;6424:11:0;:::o;6272:217::-;6466:12;;:::o;6179:316::-;;2954:6;428:12378:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6276:23:0;6272:217;428:12378:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6370:40:0;735:10:3;6370:40:0;;;428:12378:9;6424:11:0;:::o;6730:317::-;;2954:6;428:12378:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6824:217:0;428:12378:9;;;;;;;;;;;;;;;;;;;;;;;;;;;6922:40:0;735:10:3;6922:40:0;;;428:12378:9;6976:11:0;:::o;428:12378:9:-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;428:12378:9;;;;-1:-1:-1;428:12378:9;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;428:12378:9;;-1:-1:-1;428:12378:9;;;-1:-1:-1;428:12378:9;:::o;:::-;;;;;-1:-1:-1;;;428:12378:9;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;428:12378:9;;;;;;;;;;;;-1:-1:-1;;;428:12378:9;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;428:12378:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;428:12378:9;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;428:12378:9;;;;;;;:::i;:::-;;:::o;11898:299::-;12051:1;428:12378;;;;12034:100;12054:16;;;;;;428:12378;;;;;;11898:299;:::o;12072:3::-;12095:8;;;:::i;:::-;428:12378;;;;;;-1:-1:-1;;;;;428:12378:9;;;;;;12095:18;12091:32;;12072:3;;;:::i;:::-;12039:13;;12091:32;12115:8;;;;;:::o;11898:299::-;;12051:1;12072:3;428:12378;;12054:16;;;;;12095:8;;;;:::i;:::-;428:12378;;;;;;;;-1:-1:-1;;;;;428:12378:9;;;;;;12095:18;12091:32;;12072:3;;;:::i;:::-;12039:13;;12091:32;12115:8;;;;:::o;12054:16::-;;;;428:12378;;11898:299;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1342400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "548",
								"POOL_MANAGER_ROLE()": "417",
								"deregisterPool(address)": "infinite",
								"getAllLenderPoolDetails(address)": "infinite",
								"getAllPoolAddresses()": "infinite",
								"getManagers()": "4828",
								"getPoolDetails(address)": "infinite",
								"getPoolsByBorrower(address)": "infinite",
								"getPoolsByLender(address)": "infinite",
								"getRoleAdmin(bytes32)": "2436",
								"getTotalPools()": "2762",
								"getVaultForPool(address)": "4912",
								"grantFactoryAccess(address)": "infinite",
								"grantRole(bytes32,address)": "33360",
								"hasRole(bytes32,address)": "2858",
								"markPoolAsFunded(address)": "26823",
								"poolVaults(address)": "2478",
								"registerManagers(address,address)": "52797",
								"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)": "infinite",
								"registerVault(address,address)": "30615",
								"renounceRole(bytes32,address)": "28972",
								"revokeRole(bytes32,address)": "33725",
								"rewardManager()": "2324",
								"setBorrowerForPool(address,address)": "84564",
								"supportsInterface(bytes4)": "270",
								"vaultManager()": "2632"
							},
							"internal": {
								"_removePoolFromBorrowerArray(address,address)": "infinite",
								"_removePoolFromLenderArray(address,address)": "infinite",
								"_removePoolFromMainArray(address)": "infinite",
								"findIndexInArray(address[] storage pointer,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2233,
									"end": 2275,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2264,
									"end": 2274,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 2233,
									"end": 2275,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2233,
									"end": 2275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2233,
									"end": 2275,
									"name": "tag",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2233,
									"end": 2275,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2233,
									"end": 2275,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2326,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2264,
									"end": 2274,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2326,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2285,
									"end": 2326,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2326,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2285,
									"end": 2326,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2285,
									"end": 2326,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "RETURN",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "AD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "1400FE2F234CF888B5E4C66700C7903F33F31BFC9675E51CB0119F915EB534D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "729EF9451DD492832BD2A98139702CED95DFA0CEC7E99526DBBCB957ABCBC476"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 534,
									"end": 564,
									"name": "PUSH",
									"source": 9,
									"value": "6077685936C8169D09204A1D97DB12E41713588C38E1D29A61867D3DCEE98AFF"
								},
								{
									"begin": 534,
									"end": 564,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "1400FE2F234CF888B5E4C66700C7903F33F31BFC9675E51CB0119F915EB534D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 428,
									"end": 12806,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220814acd6ac0d497257e068ac4d1e9ef7378d5be0d6bf4c27049bc9794af450cd664736f6c63430008140033",
									".code": [
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A7"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "5C4FDF9"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "F4EF8A6"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1E4966AB"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1F2F2E14"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "248A9CA3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "24A44EFB"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "2F2FF15D"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "36568ABE"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "37E238C5"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "43756020"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "52FC9B0E"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "56D73568"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "5D102DF7"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "7570E389"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "7E72C7D7"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "8A4ADF24"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "91D14854"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A217FDDF"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A8D088BB"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "C489579D"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "C56F1B44"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "D3E90FA0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "D3FFE67A"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "D547741F"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "E7EF32F7"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5593,
											"end": 5606,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4747,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8944,
											"end": 9014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 8944,
											"end": 9014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8952,
											"end": 8990,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8952,
											"end": 8990,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8944,
											"end": 9014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8944,
											"end": 9014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8944,
											"end": 9014,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 8944,
											"end": 9014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "C2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "AD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7441,
											"end": 7468,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7441,
											"end": 7468,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7588,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7588,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7714,
											"end": 7760,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7824,
											"name": "PUSH",
											"source": 9,
											"value": "8FC18CC172F74C81235145B7927190D2BD0E351FC45BFB17BB572593273CEF21"
										},
										{
											"begin": 7776,
											"end": 7824,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7824,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "5265776172644D616E616765722063616E6E6F74206265207A65726F20616464"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "5661756C744D616E616765722063616E6E6F74206265207A65726F2061646472"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2517D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8104,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5876,
											"end": 5946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5884,
											"end": 5922,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5884,
											"end": 5922,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5876,
											"end": 5946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5876,
											"end": 5946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5876,
											"end": 5946,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 5876,
											"end": 5946,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11139,
											"end": 11150,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11122,
											"end": 11165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11122,
											"end": 11165,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 11122,
											"end": 11165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11122,
											"end": 11165,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 11122,
											"end": 11165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 11541,
											"end": 11570,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11264,
											"end": 11294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 11235,
											"end": 11261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11264,
											"end": 11294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 11264,
											"end": 11294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11264,
											"end": 11294,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 11264,
											"end": 11294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 11235,
											"end": 11261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11261,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 11235,
											"end": 11261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP11",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11235,
											"end": 11294,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 11235,
											"end": 11294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11304,
											"end": 11327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11304,
											"end": 11327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 11304,
											"end": 11327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11304,
											"end": 11327,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 11304,
											"end": 11327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11541,
											"end": 11570,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 11541,
											"end": 11570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11541,
											"end": 11570,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 11541,
											"end": 11570,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11626,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 11626,
											"end": 11638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 11641,
											"end": 11657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11626,
											"end": 11638,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11626,
											"end": 11638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 11626,
											"end": 11638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11626,
											"end": 11638,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 11626,
											"end": 11638,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11626,
											"end": 11657,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11626,
											"end": 11657,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 11626,
											"end": 11657,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6138,
											"end": 6160,
											"name": "PUSH",
											"source": 9,
											"value": "334D0B2111287DFDDEBE4B4C1C5AF3AE644909D7FCD024377BF601E236ED5ABB"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6138,
											"end": 6160,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6138,
											"end": 6160,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9326,
											"end": 9336,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9326,
											"end": 9356,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9326,
											"end": 9336,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "506F6F6C206E6F742072656769737465726564206F7220686173206E6F207661"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D5B1D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9936,
											"end": 9946,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 534,
											"end": 564,
											"name": "PUSH",
											"source": 9,
											"value": "6077685936C8169D09204A1D97DB12E41713588C38E1D29A61867D3DCEE98AFF"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21B0B63632B91034B9903737BA1030B71030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 534,
											"end": 564,
											"name": "PUSH",
											"source": 9,
											"value": "6077685936C8169D09204A1D97DB12E41713588C38E1D29A61867D3DCEE98AFF"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 4958,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5137,
											"end": 5150,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5137,
											"end": 5150,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5137,
											"end": 5150,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5181,
											"end": 5184,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 5181,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5179,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5179,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5179,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 5152,
											"end": 5179,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5225,
											"end": 5244,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5225,
											"end": 5244,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5225,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 5181,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 5225,
											"end": 5244,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5225,
											"end": 5244,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5225,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5225,
											"end": 5244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5225,
											"end": 5244,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 5225,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 5200,
											"end": 5245,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5245,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5200,
											"end": 5245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5245,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 5200,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5245,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 5200,
											"end": 5245,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5245,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5200,
											"end": 5245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5245,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 5200,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5200,
											"end": 5245,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5181,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 5181,
											"end": 5184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5181,
											"end": 5184,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 5181,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5137,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 5137,
											"end": 5150,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5179,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 5152,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5179,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "C4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3418,
											"end": 3436,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3732,
											"end": 3747,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "E4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 3617,
											"end": 4079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "FF00"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 4079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 4089,
											"end": 4119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4119,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 4089,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4215,
											"name": "PUSH",
											"source": 9,
											"value": "8F723E49DC038E67C41B41307A1E0C65653D50125A0C474A21AC32D9A0B24D2B"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4160,
											"end": 4215,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "506F6F6C20616C72656164792072656769737465726564000000000000000000"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "506F6F6C20616464726573732063616E6E6F74206265207A65726F0000000000"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6441,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6449,
											"end": 6487,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6449,
											"end": 6487,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6441,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6441,
											"end": 6511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6441,
											"end": 6511,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 6441,
											"end": 6511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6542,
											"end": 6567,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6542,
											"end": 6567,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6542,
											"end": 6567,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6665,
											"end": 6691,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6705,
											"end": 6735,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6705,
											"end": 6735,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6705,
											"end": 6735,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6701,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 6701,
											"end": 6985,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 6701,
											"end": 6985,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 6701,
											"end": 6985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6755,
											"end": 6784,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6751,
											"end": 6870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 6751,
											"end": 6870,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6701,
											"end": 6985,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 6701,
											"end": 6985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6883,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6883,
											"end": 6896,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6883,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 6883,
											"end": 6920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6883,
											"end": 6920,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 6883,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6934,
											"end": 6960,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6751,
											"end": 6870,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 6751,
											"end": 6870,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12511,
											"end": 12524,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12494,
											"end": 12541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12494,
											"end": 12541,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 12494,
											"end": 12541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12494,
											"end": 12541,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 12494,
											"end": 12541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12511,
											"end": 12524,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12555,
											"end": 12593,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12555,
											"end": 12593,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12555,
											"end": 12593,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12555,
											"end": 12593,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12551,
											"end": 12798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 12551,
											"end": 12798,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6751,
											"end": 6870,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 6751,
											"end": 6870,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6751,
											"end": 6870,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6751,
											"end": 6870,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6751,
											"end": 6870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 6751,
											"end": 6870,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12551,
											"end": 12798,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 12551,
											"end": 12798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12677,
											"end": 12707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 6883,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 12677,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12710,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP11",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12511,
											"end": 12524,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12710,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 12710,
											"end": 12744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12710,
											"end": 12744,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 12710,
											"end": 12744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12511,
											"end": 12524,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12677,
											"end": 12707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 12677,
											"end": 12707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12677,
											"end": 12707,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 12677,
											"end": 12707,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12677,
											"end": 12744,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 12677,
											"end": 12744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12511,
											"end": 12524,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12758,
											"end": 12785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12758,
											"end": 12785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 12758,
											"end": 12785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12758,
											"end": 12785,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 12758,
											"end": 12785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12551,
											"end": 12798,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12551,
											"end": 12798,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12551,
											"end": 12798,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12551,
											"end": 12798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 12551,
											"end": 12798,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "426F72726F7765722063616E6E6F7420626520746865207A65726F2061646472"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2475,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8625,
											"end": 8636,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4464,
											"end": 4534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4510,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4510,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4464,
											"end": 4534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4464,
											"end": 4534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4464,
											"end": 4534,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 4464,
											"end": 4534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4544,
											"end": 4568,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 4544,
											"end": 4568,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 808,
											"end": 853,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 610,
											"end": 645,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10461,
											"end": 10479,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10461,
											"end": 10479,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10461,
											"end": 10479,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10461,
											"end": 10479,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10461,
											"end": 10502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 10461,
											"end": 10502,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10534,
											"end": 10604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10542,
											"end": 10580,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10542,
											"end": 10580,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10534,
											"end": 10604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10534,
											"end": 10604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10534,
											"end": 10604,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 10534,
											"end": 10604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10635,
											"end": 10645,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 10779,
											"end": 10807,
											"name": "PUSH",
											"source": 9,
											"value": "F8EE9039D8E4D43426638703C71517008894FDEA742BB2D2DBFF5A46FB07ABDB"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10779,
											"end": 10807,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10779,
											"end": 10807,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "5661756C7420616C7265616479207265676973746572656420666F7220746869"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CC81C1BDBDB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420616464726573736573"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10461,
											"end": 10502,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 10461,
											"end": 10502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10483,
											"end": 10502,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10483,
											"end": 10502,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10461,
											"end": 10502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 10461,
											"end": 10502,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 861,
											"end": 901,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "729EF9451DD492832BD2A98139702CED95DFA0CEC7E99526DBBCB957ABCBC476"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 534,
											"end": 564,
											"name": "PUSH",
											"source": 9,
											"value": "6077685936C8169D09204A1D97DB12E41713588C38E1D29A61867D3DCEE98AFF"
										},
										{
											"begin": 534,
											"end": 564,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "AD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6276,
											"end": 6299,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "C2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "141BDBDB081B9BDD081C9959DA5CDD195C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "160"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11898,
											"end": 12197,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 11898,
											"end": 12197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12051,
											"end": 12052,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12034,
											"end": 12134,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12054,
											"end": 12070,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 12054,
											"end": 12070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12054,
											"end": 12070,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12054,
											"end": 12070,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12054,
											"end": 12070,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12054,
											"end": 12070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 12054,
											"end": 12070,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11898,
											"end": 12197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11898,
											"end": 12197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12072,
											"end": 12075,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 12072,
											"end": 12075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12095,
											"end": 12103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 12095,
											"end": 12103,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12095,
											"end": 12103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 12095,
											"end": 12103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12095,
											"end": 12103,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 12095,
											"end": 12103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12095,
											"end": 12113,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12091,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 12091,
											"end": 12123,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12072,
											"end": 12075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 12072,
											"end": 12075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12072,
											"end": 12075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 12072,
											"end": 12075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12072,
											"end": 12075,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 12072,
											"end": 12075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12039,
											"end": 12052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 12039,
											"end": 12052,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12091,
											"end": 12123,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 12091,
											"end": 12123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12123,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12123,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11898,
											"end": 12197,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 11898,
											"end": 12197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11898,
											"end": 12197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12051,
											"end": 12052,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12072,
											"end": 12075,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 12072,
											"end": 12075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12054,
											"end": 12070,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12054,
											"end": 12070,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12054,
											"end": 12070,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12054,
											"end": 12070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 12054,
											"end": 12070,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12095,
											"end": 12103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 12095,
											"end": 12103,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12095,
											"end": 12103,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12095,
											"end": 12103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 12095,
											"end": 12103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12095,
											"end": 12103,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 12095,
											"end": 12103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12095,
											"end": 12113,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12091,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 12091,
											"end": 12123,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12072,
											"end": 12075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 12072,
											"end": 12075,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12072,
											"end": 12075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 12072,
											"end": 12075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12072,
											"end": 12075,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 12072,
											"end": 12075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12039,
											"end": 12052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 12039,
											"end": 12052,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12091,
											"end": 12123,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 12091,
											"end": 12123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12123,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12123,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12054,
											"end": 12070,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 12054,
											"end": 12070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12054,
											"end": 12070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12054,
											"end": 12070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12054,
											"end": 12070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 12806,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11898,
											"end": 12197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11898,
											"end": 12197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								},
								"01400FE2F234CF888B5E4C66700C7903F33F31BFC9675E51CB0119F915EB534D": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/contracts/contracts/interfaces/IPoolOrganizer.sol",
								"contracts/contracts/contracts/interfaces/IRewardManager.sol",
								"contracts/contracts/contracts/interfaces/IVaultManager.sol",
								"contracts/contracts/contracts/protocol/PoolOrganizer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"POOL_MANAGER_ROLE()": "56d73568",
							"deregisterPool(address)": "7e72c7d7",
							"getAllLenderPoolDetails(address)": "52fc9b0e",
							"getAllPoolAddresses()": "c56f1b44",
							"getManagers()": "a8d088bb",
							"getPoolDetails(address)": "d3e90fa0",
							"getPoolsByBorrower(address)": "e7ef32f7",
							"getPoolsByLender(address)": "24a44efb",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getTotalPools()": "d3ffe67a",
							"getVaultForPool(address)": "7570e389",
							"grantFactoryAccess(address)": "5d102df7",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"markPoolAsFunded(address)": "1f2f2e14",
							"poolVaults(address)": "1e4966ab",
							"registerManagers(address,address)": "c489579d",
							"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)": "43756020",
							"registerVault(address,address)": "05c4fdf9",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"rewardManager()": "0f4ef8a6",
							"setBorrowerForPool(address,address)": "37e238c5",
							"supportsInterface(bytes4)": "01ffc9a7",
							"vaultManager()": "8a4adf24"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vaultManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardManager\",\"type\":\"address\"}],\"name\":\"ManagerRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IPoolOrganizer.PoolType\",\"name\":\"poolType\",\"type\":\"uint8\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"VaultRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOL_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"deregisterPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"}],\"name\":\"getAllLenderPoolDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"loanToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"repaymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"enum IPoolOrganizer.PoolType\",\"name\":\"poolType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"funded\",\"type\":\"bool\"}],\"internalType\":\"struct IPoolOrganizer.PoolDetails[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPoolAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getManagers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getPoolDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"loanToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"repaymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"enum IPoolOrganizer.PoolType\",\"name\":\"poolType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"funded\",\"type\":\"bool\"}],\"internalType\":\"struct IPoolOrganizer.PoolDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"getPoolsByBorrower\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"}],\"name\":\"getPoolsByLender\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getVaultForPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"}],\"name\":\"grantFactoryAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"markPoolAsFunded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolVaults\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardManager\",\"type\":\"address\"}],\"name\":\"registerManagers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"loanToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"repaymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaymentPeriod\",\"type\":\"uint256\"},{\"internalType\":\"enum IPoolOrganizer.PoolType\",\"name\":\"poolType\",\"type\":\"uint8\"}],\"name\":\"registerPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"registerVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardManager\",\"outputs\":[{\"internalType\":\"contract IRewardManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newBorrower\",\"type\":\"address\"}],\"name\":\"setBorrowerForPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultManager\",\"outputs\":[{\"internalType\":\"contract IVaultManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements access control and management for pool lifecycle and integration with external managers.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"ManagerRegistered(address,address)\":{\"details\":\"Emitted when managers are registered.\",\"params\":{\"rewardManager\":\"The address of the reward manager.\",\"vaultManager\":\"The address of the vault manager.\"}},\"PoolDeregistered(address)\":{\"details\":\"Emitted when a pool is deregistered.\",\"params\":{\"pool\":\"The address of the deregistered pool.\"}},\"PoolRegistered(address,address,address,address,uint8)\":{\"details\":\"Emitted when a new pool is registered.\",\"params\":{\"borrower\":\"The address of the borrower.\",\"lender\":\"The address of the lender.\",\"pool\":\"The address of the pool.\",\"poolType\":\"The type of the pool.\",\"vault\":\"The address of the vault associated with the pool.\"}},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"VaultRegistered(address,address)\":{\"details\":\"Emitted when a vault is registered for a pool.\",\"params\":{\"pool\":\"The address of the pool.\",\"vault\":\"The address of the registered vault.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor that grants the deployer the admin and pool manager roles.\"},\"deregisterPool(address)\":{\"details\":\"Deregisters the specified pool and emits a `PoolDeregistered` event.\",\"params\":{\"pool\":\"The address of the pool to deregister.\"}},\"getAllLenderPoolDetails(address)\":{\"params\":{\"lender\":\"The address of the lender.\"},\"returns\":{\"_0\":\"An array of pool details.\"}},\"getAllPoolAddresses()\":{\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getManagers()\":{\"returns\":{\"_0\":\"The addresses of the vault and reward managers.\"}},\"getPoolDetails(address)\":{\"params\":{\"pool\":\"The address of the pool.\"},\"returns\":{\"_0\":\"The details of the pool.\"}},\"getPoolsByBorrower(address)\":{\"params\":{\"borrower\":\"The address of the borrower.\"},\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getPoolsByLender(address)\":{\"params\":{\"lender\":\"The address of the lender.\"},\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getTotalPools()\":{\"returns\":{\"_0\":\"The total number of pools.\"}},\"getVaultForPool(address)\":{\"params\":{\"pool\":\"The address of the pool.\"},\"returns\":{\"_0\":\"The address of the vault.\"}},\"grantFactoryAccess(address)\":{\"params\":{\"factoryAddress\":\"The address of the factory.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"markPoolAsFunded(address)\":{\"details\":\"Marks the specified pool as funded.\",\"params\":{\"pool\":\"The address of the pool to mark as funded.\"}},\"registerManagers(address,address)\":{\"details\":\"Registers the specified managers and emits a `ManagerRegistered` event.\",\"params\":{\"_rewardManager\":\"The address of the reward manager.\",\"_vaultManager\":\"The address of the vault manager.\"}},\"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)\":{\"details\":\"Registers a pool and emits a `PoolRegistered` event.\",\"params\":{\"assetToken\":\"The ERC20 token for the asset.\",\"borrower\":\"The address of the borrower.\",\"interestRate\":\"The interest rate for the loan.\",\"lender\":\"The address of the lender.\",\"loanAmount\":\"The amount of the loan.\",\"loanToken\":\"The ERC20 token for the loan.\",\"pool\":\"The address of the pool.\",\"poolType\":\"The type of the pool.\",\"repaymentPeriod\":\"The repayment period for the loan.\",\"repaymentToken\":\"The ERC20 token for the repayment.\",\"vault\":\"The address of the vault.\"}},\"registerVault(address,address)\":{\"details\":\"Registers the specified vault for the pool and emits a `VaultRegistered` event.\",\"params\":{\"pool\":\"The address of the pool.\",\"vault\":\"The address of the vault.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setBorrowerForPool(address,address)\":{\"params\":{\"newBorrower\":\"The address of the new borrower.\",\"pool\":\"The address of the pool.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"Pool Organizer for managing pools, vaults, and rewards.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deregisterPool(address)\":{\"notice\":\"Deregisters a pool.\"},\"getAllLenderPoolDetails(address)\":{\"notice\":\"Gets the details of all pools associated with a lender.\"},\"getAllPoolAddresses()\":{\"notice\":\"Gets all registered pool addresses.\"},\"getManagers()\":{\"notice\":\"Gets the addresses of the registered managers.\"},\"getPoolDetails(address)\":{\"notice\":\"Gets the details of a specified pool.\"},\"getPoolsByBorrower(address)\":{\"notice\":\"Gets all pools associated with a borrower.\"},\"getPoolsByLender(address)\":{\"notice\":\"Gets all pools associated with a lender.\"},\"getTotalPools()\":{\"notice\":\"Gets the total number of registered pools.\"},\"getVaultForPool(address)\":{\"notice\":\"Gets the vault address associated with a pool.\"},\"grantFactoryAccess(address)\":{\"notice\":\"Grants factory access to the specified address.\"},\"markPoolAsFunded(address)\":{\"notice\":\"Marks a pool as funded.\"},\"registerManagers(address,address)\":{\"notice\":\"Registers the vault and reward managers.\"},\"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)\":{\"notice\":\"Registers a new pool with the specified details.\"},\"registerVault(address,address)\":{\"notice\":\"Registers a vault for a specified pool.\"},\"setBorrowerForPool(address,address)\":{\"notice\":\"Sets the borrower for a specified pool.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":\"PoolOrganizer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/contracts/contracts/interfaces/IPoolOrganizer.sol\":{\"keccak256\":\"0xe6cb532077a4d0f82d154a08e30ca766643c902e959e4519e1c78bac567a02d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3277ee67833de684424740208b2a6c823ebd5a2deff2d1c404c60903bf27432e\",\"dweb:/ipfs/QmZaQyFB5veNsF4hAoRW1xLWYDHZyV6SeZuoxCRozXAMWx\"]},\"contracts/contracts/contracts/interfaces/IRewardManager.sol\":{\"keccak256\":\"0x692870b248c0b71185a5c030f853306d6a4c3a25180a3f57ff56dfb2da59a9d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27ba33e21e32b7bfff41db71f93f4ba9a427659a2c04fdf8510087963dbcb62\",\"dweb:/ipfs/QmcnnmcjEc7gkPNHKLECceA9FdVryvK9qKppnakhXGgNMh\"]},\"contracts/contracts/contracts/interfaces/IVaultManager.sol\":{\"keccak256\":\"0xdd866073f1029189ab6d2f04f7cdf481fb48e9e12ef4f9cd2376778674ce1f1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d1aef045b26166c370937ef37a8917a00d63021343795f47c30516745e3786d\",\"dweb:/ipfs/QmbAuF7Ufd78MYjnYKUybDtGDVFcn7e6wSNN8hEg6fGFg5\"]},\"contracts/contracts/contracts/protocol/PoolOrganizer.sol\":{\"keccak256\":\"0x2ed5ef2c516d1e83a8394e723a3f0e0cd900c25ec72597c12d91d250aadb933c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94bd2cb96bb372704c9cfcfed676391a86a7c6d3e817c43f73fdcd240884a66f\",\"dweb:/ipfs/QmUcFJqRefe8ZsNsKbGk6it37yDFL2TcwYQYxPWFXBy8ij\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "contracts/contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 763,
								"contract": "contracts/contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "vaultManager",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IVaultManager)744"
							},
							{
								"astId": 766,
								"contract": "contracts/contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "rewardManager",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IRewardManager)696"
							},
							{
								"astId": 769,
								"contract": "contracts/contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "pools",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 774,
								"contract": "contracts/contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "poolDetails",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(PoolDetails)558_storage)"
							},
							{
								"astId": 779,
								"contract": "contracts/contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "lenderPools",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
							},
							{
								"astId": 783,
								"contract": "contracts/contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "poolVaults",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 788,
								"contract": "contracts/contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
								"label": "borrowerPools",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)456": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IRewardManager)696": {
								"encoding": "inplace",
								"label": "contract IRewardManager",
								"numberOfBytes": "20"
							},
							"t_contract(IVaultManager)744": {
								"encoding": "inplace",
								"label": "contract IVaultManager",
								"numberOfBytes": "20"
							},
							"t_enum(PoolType)529": {
								"encoding": "inplace",
								"label": "enum IPoolOrganizer.PoolType",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_array(t_address)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address[])",
								"numberOfBytes": "32",
								"value": "t_array(t_address)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(PoolDetails)558_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct IPoolOrganizer.PoolDetails)",
								"numberOfBytes": "32",
								"value": "t_struct(PoolDetails)558_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(PoolDetails)558_storage": {
								"encoding": "inplace",
								"label": "struct IPoolOrganizer.PoolDetails",
								"members": [
									{
										"astId": 531,
										"contract": "contracts/contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "lender",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 533,
										"contract": "contracts/contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "borrower",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 535,
										"contract": "contracts/contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "creationTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 537,
										"contract": "contracts/contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "vault",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									},
									{
										"astId": 540,
										"contract": "contracts/contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "loanToken",
										"offset": 0,
										"slot": "4",
										"type": "t_contract(IERC20)456"
									},
									{
										"astId": 543,
										"contract": "contracts/contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "assetToken",
										"offset": 0,
										"slot": "5",
										"type": "t_contract(IERC20)456"
									},
									{
										"astId": 546,
										"contract": "contracts/contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "repaymentToken",
										"offset": 0,
										"slot": "6",
										"type": "t_contract(IERC20)456"
									},
									{
										"astId": 548,
										"contract": "contracts/contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "loanAmount",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 550,
										"contract": "contracts/contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "interestRate",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 552,
										"contract": "contracts/contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "repaymentPeriod",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 555,
										"contract": "contracts/contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "poolType",
										"offset": 0,
										"slot": "10",
										"type": "t_enum(PoolType)529"
									},
									{
										"astId": 557,
										"contract": "contracts/contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "funded",
										"offset": 1,
										"slot": "10",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "352"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/contracts/contracts/protocol/PoolOrganizer.sol:PoolOrganizer",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deregisterPool(address)": {
								"notice": "Deregisters a pool."
							},
							"getAllLenderPoolDetails(address)": {
								"notice": "Gets the details of all pools associated with a lender."
							},
							"getAllPoolAddresses()": {
								"notice": "Gets all registered pool addresses."
							},
							"getManagers()": {
								"notice": "Gets the addresses of the registered managers."
							},
							"getPoolDetails(address)": {
								"notice": "Gets the details of a specified pool."
							},
							"getPoolsByBorrower(address)": {
								"notice": "Gets all pools associated with a borrower."
							},
							"getPoolsByLender(address)": {
								"notice": "Gets all pools associated with a lender."
							},
							"getTotalPools()": {
								"notice": "Gets the total number of registered pools."
							},
							"getVaultForPool(address)": {
								"notice": "Gets the vault address associated with a pool."
							},
							"grantFactoryAccess(address)": {
								"notice": "Grants factory access to the specified address."
							},
							"markPoolAsFunded(address)": {
								"notice": "Marks a pool as funded."
							},
							"registerManagers(address,address)": {
								"notice": "Registers the vault and reward managers."
							},
							"registerPool(address,address,address,address,address,address,address,uint256,uint256,uint256,uint8)": {
								"notice": "Registers a new pool with the specified details."
							},
							"registerVault(address,address)": {
								"notice": "Registers a vault for a specified pool."
							},
							"setBorrowerForPool(address,address)": {
								"notice": "Sets the borrower for a specified pool."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							486
						],
						"ERC165": [
							510
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 487,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 486,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 511,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 510,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 486,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 510,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								510,
								522,
								378,
								486
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										509
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 509,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							456
						]
					},
					"id": 457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 456,
							"linearizedBaseContracts": [
								456
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 390,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 399,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 456,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 456,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 456,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 456,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 456,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 456,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 457,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								390,
								399
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							486
						]
					},
					"id": 487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 459,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 486,
							"linearizedBaseContracts": [
								486
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 464,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 463,
												"id": 466,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 486,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 473,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 472,
												"id": 475,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 486,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 481,
												"id": 483,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 486,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 487,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							510
						],
						"IERC165": [
							522
						]
					},
					"id": 511,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 490,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 511,
							"sourceUnit": 523,
							"src": "140:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 489,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 522,
										"src": "148:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 492,
										"name": "IERC165",
										"nameLocations": [
											"687:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 522,
										"src": "687:7:4"
									},
									"id": 493,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:4"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 491,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:4",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 510,
							"linearizedBaseContracts": [
								510,
								522
							],
							"name": "ERC165",
							"nameLocation": "677:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										521
									],
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "844:64:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 501,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "861:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 503,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "881:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$522_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$522_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 502,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$522",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:4",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 500,
												"id": 507,
												"nodeType": "Return",
												"src": "854:47:4"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "789:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 495,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:4"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "838:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:4"
									},
									"scope": 510,
									"src": "762:146:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 511,
							"src": "659:251:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							522
						]
					},
					"id": 523,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 512,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 513,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:5",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 522,
							"linearizedBaseContracts": [
								522
							],
							"name": "IERC165",
							"nameLocation": "431:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "817:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 515,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:5"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "860:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 518,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:5"
									},
									"scope": 522,
									"src": "790:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 523,
							"src": "421:447:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:5"
				},
				"id": 5
			},
			"contracts/contracts/contracts/interfaces/IPoolOrganizer.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/contracts/interfaces/IPoolOrganizer.sol",
					"exportedSymbols": {
						"IERC20": [
							456
						],
						"IPoolOrganizer": [
							663
						]
					},
					"id": 664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 524,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 664,
							"sourceUnit": 457,
							"src": "61:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPoolOrganizer",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 526,
								"nodeType": "StructuredDocumentation",
								"src": "121:129:6",
								"text": "@title IPoolOrganizer interface\n @notice Interface for the Pool Organizer contract managing pools, vaults, and rewards."
							},
							"fullyImplemented": false,
							"id": 663,
							"linearizedBaseContracts": [
								663
							],
							"name": "IPoolOrganizer",
							"nameLocation": "260:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IPoolOrganizer.PoolType",
									"id": 529,
									"members": [
										{
											"id": 527,
											"name": "STANDARD",
											"nameLocation": "298:8:6",
											"nodeType": "EnumValue",
											"src": "298:8:6"
										},
										{
											"id": 528,
											"name": "FLASH_LOAN",
											"nameLocation": "308:10:6",
											"nodeType": "EnumValue",
											"src": "308:10:6"
										}
									],
									"name": "PoolType",
									"nameLocation": "287:8:6",
									"nodeType": "EnumDefinition",
									"src": "282:38:6"
								},
								{
									"canonicalName": "IPoolOrganizer.PoolDetails",
									"id": 558,
									"members": [
										{
											"constant": false,
											"id": 531,
											"mutability": "mutable",
											"name": "lender",
											"nameLocation": "366:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 558,
											"src": "358:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 530,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "358:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 533,
											"mutability": "mutable",
											"name": "borrower",
											"nameLocation": "391:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 558,
											"src": "383:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 532,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "383:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 535,
											"mutability": "mutable",
											"name": "creationTime",
											"nameLocation": "418:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 558,
											"src": "410:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 534,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "410:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 537,
											"mutability": "mutable",
											"name": "vault",
											"nameLocation": "449:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 558,
											"src": "441:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 536,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "441:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 540,
											"mutability": "mutable",
											"name": "loanToken",
											"nameLocation": "472:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 558,
											"src": "465:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$456",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 539,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 538,
													"name": "IERC20",
													"nameLocations": [
														"465:6:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 456,
													"src": "465:6:6"
												},
												"referencedDeclaration": 456,
												"src": "465:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 543,
											"mutability": "mutable",
											"name": "assetToken",
											"nameLocation": "499:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 558,
											"src": "492:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$456",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 542,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 541,
													"name": "IERC20",
													"nameLocations": [
														"492:6:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 456,
													"src": "492:6:6"
												},
												"referencedDeclaration": 456,
												"src": "492:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 546,
											"mutability": "mutable",
											"name": "repaymentToken",
											"nameLocation": "527:14:6",
											"nodeType": "VariableDeclaration",
											"scope": 558,
											"src": "520:21:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$456",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 545,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 544,
													"name": "IERC20",
													"nameLocations": [
														"520:6:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 456,
													"src": "520:6:6"
												},
												"referencedDeclaration": 456,
												"src": "520:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 548,
											"mutability": "mutable",
											"name": "loanAmount",
											"nameLocation": "560:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 558,
											"src": "552:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 547,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "552:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 550,
											"mutability": "mutable",
											"name": "interestRate",
											"nameLocation": "589:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 558,
											"src": "581:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 549,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "581:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 552,
											"mutability": "mutable",
											"name": "repaymentPeriod",
											"nameLocation": "620:15:6",
											"nodeType": "VariableDeclaration",
											"scope": 558,
											"src": "612:23:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 551,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "612:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 555,
											"mutability": "mutable",
											"name": "poolType",
											"nameLocation": "655:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 558,
											"src": "646:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_PoolType_$529",
												"typeString": "enum IPoolOrganizer.PoolType"
											},
											"typeName": {
												"id": 554,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 553,
													"name": "PoolType",
													"nameLocations": [
														"646:8:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 529,
													"src": "646:8:6"
												},
												"referencedDeclaration": 529,
												"src": "646:8:6",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PoolType_$529",
													"typeString": "enum IPoolOrganizer.PoolType"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 557,
											"mutability": "mutable",
											"name": "funded",
											"nameLocation": "679:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 558,
											"src": "674:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 556,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "674:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolDetails",
									"nameLocation": "335:11:6",
									"nodeType": "StructDefinition",
									"scope": 663,
									"src": "328:365:6",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "701:668:6",
										"text": "@notice Registers a new pool\n @param pool The address of the pool contract\n @param lender The address of the lender\n @param borrower The address of the borrower\n @param vault The address of the vault associated with the pool\n @param loanToken The token to be loaned\n @param assetToken The token used as collateral\n @param repaymentToken The token used for loan repayment\n @param loanAmount The amount of the loan\n @param interestRate The interest rate of the loan\n @param repaymentPeriod The loan repayment period\n @param poolType The type of the pool (standard or flash loan)"
									},
									"functionSelector": "43756020",
									"id": 588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerPool",
									"nameLocation": "1384:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1415:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1407:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1407:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "1438:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1430:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1430:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "1463:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1455:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "1490:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1482:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1482:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "loanToken",
												"nameLocation": "1513:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1506:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 569,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 568,
														"name": "IERC20",
														"nameLocations": [
															"1506:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 456,
														"src": "1506:6:6"
													},
													"referencedDeclaration": 456,
													"src": "1506:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$456",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "assetToken",
												"nameLocation": "1540:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1533:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 572,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 571,
														"name": "IERC20",
														"nameLocations": [
															"1533:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 456,
														"src": "1533:6:6"
													},
													"referencedDeclaration": 456,
													"src": "1533:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$456",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "repaymentToken",
												"nameLocation": "1568:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1561:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 575,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 574,
														"name": "IERC20",
														"nameLocations": [
															"1561:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 456,
														"src": "1561:6:6"
													},
													"referencedDeclaration": 456,
													"src": "1561:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$456",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "loanAmount",
												"nameLocation": "1601:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1593:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "interestRate",
												"nameLocation": "1630:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1622:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "repaymentPeriod",
												"nameLocation": "1661:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1653:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1653:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "poolType",
												"nameLocation": "1696:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "1687:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PoolType_$529",
													"typeString": "enum IPoolOrganizer.PoolType"
												},
												"typeName": {
													"id": 584,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 583,
														"name": "PoolType",
														"nameLocations": [
															"1687:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 529,
														"src": "1687:8:6"
													},
													"referencedDeclaration": 529,
													"src": "1687:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PoolType_$529",
														"typeString": "enum IPoolOrganizer.PoolType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1396:315:6"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1720:0:6"
									},
									"scope": 663,
									"src": "1375:346:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "1729:89:6",
										"text": "@notice Deregisters a pool\n @param pool The address of the pool to deregister"
									},
									"functionSelector": "7e72c7d7",
									"id": 594,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deregisterPool",
									"nameLocation": "1833:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1856:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "1848:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1848:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1847:14:6"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1870:0:6"
									},
									"scope": 663,
									"src": "1824:47:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "1879:107:6",
										"text": "@notice Gets the total number of registered pools\n @return The total number of registered pools"
									},
									"functionSelector": "d3ffe67a",
									"id": 600,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalPools",
									"nameLocation": "2001:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2014:2:6"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "2040:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2040:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2039:9:6"
									},
									"scope": 663,
									"src": "1992:57:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "2057:167:6",
										"text": "@notice Retrieves all pool addresses associated with a specific lender\n @param lender The address of the lender\n @return An array of pool addresses"
									},
									"functionSelector": "24a44efb",
									"id": 609,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolsByLender",
									"nameLocation": "2239:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "2264:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "2256:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2255:16:6"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "2295:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 605,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2295:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 606,
													"nodeType": "ArrayTypeName",
													"src": "2295:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2294:18:6"
									},
									"scope": 663,
									"src": "2230:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "2321:160:6",
										"text": "@notice Retrieves detailed information about a specific pool\n @param pool The address of the pool\n @return The details of the specified pool"
									},
									"functionSelector": "d3e90fa0",
									"id": 618,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolDetails",
									"nameLocation": "2496:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "2519:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "2511:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2511:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2510:14:6"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "2548:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolDetails_$558_memory_ptr",
													"typeString": "struct IPoolOrganizer.PoolDetails"
												},
												"typeName": {
													"id": 615,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 614,
														"name": "PoolDetails",
														"nameLocations": [
															"2548:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 558,
														"src": "2548:11:6"
													},
													"referencedDeclaration": 558,
													"src": "2548:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolDetails_$558_storage_ptr",
														"typeString": "struct IPoolOrganizer.PoolDetails"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2547:20:6"
									},
									"scope": 663,
									"src": "2487:81:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "2576:161:6",
										"text": "@notice Retrieves the associated vault address for a given pool\n @param pool The address of the pool\n @return The address of the linked vault"
									},
									"functionSelector": "7570e389",
									"id": 626,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVaultForPool",
									"nameLocation": "2752:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "2776:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "2768:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:14:6"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "2805:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2804:9:6"
									},
									"scope": 663,
									"src": "2743:71:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 627,
										"nodeType": "StructuredDocumentation",
										"src": "2822:128:6",
										"text": "@notice Grants factory access to manage pools\n @param factoryAddress The address of the factory to be granted access"
									},
									"functionSelector": "5d102df7",
									"id": 632,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantFactoryAccess",
									"nameLocation": "2965:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "factoryAddress",
												"nameLocation": "2992:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2984:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2984:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2983:24:6"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3016:0:6"
									},
									"scope": 663,
									"src": "2956:61:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "3025:141:6",
										"text": "@notice Registers a vault for a specific pool\n @param pool The address of the pool\n @param vault The address of the vault"
									},
									"functionSelector": "05c4fdf9",
									"id": 640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerVault",
									"nameLocation": "3181:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3203:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3195:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "3217:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3209:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3209:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:29:6"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:6"
									},
									"scope": 663,
									"src": "3172:61:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "3241:215:6",
										"text": "@notice Registers manager contracts for managing vaults and rewards\n @param _vaultManager The address of the VaultManager contract\n @param _rewardManager The address of the RewardManager contract"
									},
									"functionSelector": "c489579d",
									"id": 648,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerManagers",
									"nameLocation": "3471:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "_vaultManager",
												"nameLocation": "3496:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3488:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "_rewardManager",
												"nameLocation": "3519:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3511:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3511:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:47:6"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:6"
									},
									"scope": 663,
									"src": "3462:82:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "3552:97:6",
										"text": "@notice Marks a pool as funded\n @param pool The address of the pool to mark as funded"
									},
									"functionSelector": "1f2f2e14",
									"id": 654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "markPoolAsFunded",
									"nameLocation": "3664:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3689:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "3681:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3681:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3680:14:6"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3703:0:6"
									},
									"scope": 663,
									"src": "3655:49:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "3717:33:6",
										"text": "@notice Set borrower for pool"
									},
									"functionSelector": "37e238c5",
									"id": 662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setBorrowerForPool",
									"nameLocation": "3765:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3792:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "3784:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3784:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "newBorrower",
												"nameLocation": "3806:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "3798:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3798:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3783:35:6"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3827:0:6"
									},
									"scope": 663,
									"src": "3756:72:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 664,
							"src": "250:3581:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:3802:6"
				},
				"id": 6
			},
			"contracts/contracts/contracts/interfaces/IRewardManager.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/contracts/interfaces/IRewardManager.sol",
					"exportedSymbols": {
						"IRewardManager": [
							696
						]
					},
					"id": 697,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 665,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRewardManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 696,
							"linearizedBaseContracts": [
								696
							],
							"name": "IRewardManager",
							"nameLocation": "71:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "93:213:7",
										"text": "@notice Registers a pool to be eligible for rewards, initializing its reward token.\n @param pool The address of the pool to register.\n @param rewardToken The ERC20 address for the reward token."
									},
									"functionSelector": "77ff76e7",
									"id": 675,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerPool",
									"nameLocation": "321:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "342:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "334:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "rewardToken",
												"nameLocation": "356:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "348:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "isFlashPool",
												"nameLocation": "374:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "369:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 671,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "369:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:53:7"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "395:0:7"
									},
									"scope": 696,
									"src": "312:84:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "404:94:7",
										"text": "@notice Accrues rewards for a specific pool.\n @param pool The address of the pool."
									},
									"functionSelector": "3d39955c",
									"id": 681,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "accrueRewards",
									"nameLocation": "513:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "535:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "527:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "526:14:7"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "549:0:7"
									},
									"scope": 696,
									"src": "504:46:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "558:187:7",
										"text": "@notice Claims rewards for either the lender or borrower.\n @param pool The address of the pool.\n @param isLender True if the lender is claiming, false if the borrower."
									},
									"functionSelector": "491c011a",
									"id": 689,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nameLocation": "760:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "781:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "773:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "isLender",
												"nameLocation": "792:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "787:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 685,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "787:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:29:7"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "810:0:7"
									},
									"scope": 696,
									"src": "751:60:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "819:91:7",
										"text": "@notice Deregisters a pool.\n @param pool The address of the pool to deregister."
									},
									"functionSelector": "7e72c7d7",
									"id": 695,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deregisterPool",
									"nameLocation": "925:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "948:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "940:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:14:7"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "962:0:7"
									},
									"scope": 696,
									"src": "916:47:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 697,
							"src": "61:905:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:935:7"
				},
				"id": 7
			},
			"contracts/contracts/contracts/interfaces/IVaultManager.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/contracts/interfaces/IVaultManager.sol",
					"exportedSymbols": {
						"IVaultManager": [
							744
						]
					},
					"id": 745,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 698,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVaultManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 699,
								"nodeType": "StructuredDocumentation",
								"src": "63:77:8",
								"text": "@title IVaultManager\n @dev Interface for the VaultManager contract."
							},
							"fullyImplemented": false,
							"id": 744,
							"linearizedBaseContracts": [
								744
							],
							"name": "IVaultManager",
							"nameLocation": "150:13:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "171:93:8",
										"text": "@notice Registers a pool's vault upon creation.\n @param pool Address of the pool."
									},
									"functionSelector": "5228a4da",
									"id": 705,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerPoolVault",
									"nameLocation": "279:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "305:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "297:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "297:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "296:14:8"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "319:0:8"
									},
									"scope": 744,
									"src": "270:50:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "328:99:8",
										"text": "@notice Deregisters a pool's vault upon loan closure.\n @param pool Address of the pool."
									},
									"functionSelector": "38e270ed",
									"id": 711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deregisterVault",
									"nameLocation": "442:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "466:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "458:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "458:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:14:8"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "480:0:8"
									},
									"scope": 744,
									"src": "433:48:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "489:206:8",
										"text": "@notice Distributes accrued interest from a vault to a specified recipient.\n @param pool Address of the pool initiating the interest payout.\n @param to Recipient of the interest payment."
									},
									"functionSelector": "d302bf76",
									"id": 719,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "distributeInterest",
									"nameLocation": "710:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "737:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "729:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "751:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "743:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "728:26:8"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:8"
									},
									"scope": 744,
									"src": "701:63:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "772:226:8",
										"text": "@notice Calculates the claimable interest for a user based on the pool's loan configuration.\n @param pool Address of the pool for which to calculate interest.\n @return amount The calculated interest amount."
									},
									"functionSelector": "51b2d521",
									"id": 727,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateClaimableInterest",
									"nameLocation": "1013:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1048:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "1040:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:14:8"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "1077:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1076:9:8"
									},
									"scope": 744,
									"src": "1004:82:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "1094:175:8",
										"text": "@notice Refunds any remaining interest to the borrower when the loan is repaid.\n @param pool Address of the pool.\n @param borrower Address of the borrower."
									},
									"functionSelector": "56f78a1d",
									"id": 735,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "refundRemainingInterest",
									"nameLocation": "1284:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1316:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1308:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1308:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "1330:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1322:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1322:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1307:32:8"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1348:0:8"
									},
									"scope": 744,
									"src": "1275:74:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "1361:217:8",
										"text": "@notice Handle the default for the lender to get remaining interest.\n @param pool The address of the loan pool associated with this interest payment.\n @param lender The lender address of that pool."
									},
									"functionSelector": "713c00ce",
									"id": 743,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "handleDefault",
									"nameLocation": "1593:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1615:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "1607:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1607:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "1629:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "1621:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1606:30:8"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1645:0:8"
									},
									"scope": 744,
									"src": "1584:62:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 745,
							"src": "140:1509:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1618:8"
				},
				"id": 8
			},
			"contracts/contracts/contracts/protocol/PoolOrganizer.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/contracts/protocol/PoolOrganizer.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							486
						],
						"ERC165": [
							510
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							456
						],
						"IPoolOrganizer": [
							663
						],
						"IRewardManager": [
							696
						],
						"IVaultManager": [
							744
						],
						"PoolOrganizer": [
							1564
						]
					},
					"id": 1565,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 746,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 747,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1565,
							"sourceUnit": 296,
							"src": "58:58:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/contracts/interfaces/IPoolOrganizer.sol",
							"file": "../interfaces/IPoolOrganizer.sol",
							"id": 748,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1565,
							"sourceUnit": 664,
							"src": "117:42:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/contracts/interfaces/IVaultManager.sol",
							"file": "../interfaces/IVaultManager.sol",
							"id": 749,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1565,
							"sourceUnit": 745,
							"src": "160:41:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/contracts/interfaces/IRewardManager.sol",
							"file": "../interfaces/IRewardManager.sol",
							"id": 750,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1565,
							"sourceUnit": 697,
							"src": "202:42:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 752,
										"name": "AccessControl",
										"nameLocations": [
											"454:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "454:13:9"
									},
									"id": 753,
									"nodeType": "InheritanceSpecifier",
									"src": "454:13:9"
								},
								{
									"baseName": {
										"id": 754,
										"name": "IPoolOrganizer",
										"nameLocations": [
											"469:14:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "469:14:9"
									},
									"id": 755,
									"nodeType": "InheritanceSpecifier",
									"src": "469:14:9"
								}
							],
							"canonicalName": "PoolOrganizer",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 751,
								"nodeType": "StructuredDocumentation",
								"src": "246:181:9",
								"text": " @title Pool Organizer for managing pools, vaults, and rewards.\n @dev Implements access control and management for pool lifecycle and integration with external managers."
							},
							"fullyImplemented": true,
							"id": 1564,
							"linearizedBaseContracts": [
								1564,
								663,
								295,
								510,
								522,
								378,
								486
							],
							"name": "PoolOrganizer",
							"nameLocation": "437:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "56d73568",
									"id": 760,
									"mutability": "constant",
									"name": "POOL_MANAGER_ROLE",
									"nameLocation": "514:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 1564,
									"src": "490:74:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 756,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "490:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "504f4f4c5f4d414e414745525f524f4c45",
												"id": 758,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "544:19:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff",
													"typeString": "literal_string \"POOL_MANAGER_ROLE\""
												},
												"value": "POOL_MANAGER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6077685936c8169d09204a1d97db12e41713588c38e1d29a61867d3dcee98aff",
													"typeString": "literal_string \"POOL_MANAGER_ROLE\""
												}
											],
											"id": 757,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "534:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 759,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "534:30:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a4adf24",
									"id": 763,
									"mutability": "mutable",
									"name": "vaultManager",
									"nameLocation": "592:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1564,
									"src": "571:33:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IVaultManager_$744",
										"typeString": "contract IVaultManager"
									},
									"typeName": {
										"id": 762,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 761,
											"name": "IVaultManager",
											"nameLocations": [
												"571:13:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 744,
											"src": "571:13:9"
										},
										"referencedDeclaration": 744,
										"src": "571:13:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IVaultManager_$744",
											"typeString": "contract IVaultManager"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0f4ef8a6",
									"id": 766,
									"mutability": "mutable",
									"name": "rewardManager",
									"nameLocation": "632:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1564,
									"src": "610:35:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IRewardManager_$696",
										"typeString": "contract IRewardManager"
									},
									"typeName": {
										"id": 765,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 764,
											"name": "IRewardManager",
											"nameLocations": [
												"610:14:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 696,
											"src": "610:14:9"
										},
										"referencedDeclaration": 696,
										"src": "610:14:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IRewardManager_$696",
											"typeString": "contract IRewardManager"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 769,
									"mutability": "mutable",
									"name": "pools",
									"nameLocation": "670:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1564,
									"src": "652:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 767,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "652:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 768,
										"nodeType": "ArrayTypeName",
										"src": "652:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 774,
									"mutability": "mutable",
									"name": "poolDetails",
									"nameLocation": "736:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1564,
									"src": "681:66:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$558_storage_$",
										"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails)"
									},
									"typeName": {
										"id": 773,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 770,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "689:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "681:46:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$558_storage_$",
											"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 772,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 771,
												"name": "IPoolOrganizer.PoolDetails",
												"nameLocations": [
													"700:14:9",
													"715:11:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 558,
												"src": "700:26:9"
											},
											"referencedDeclaration": 558,
											"src": "700:26:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolDetails_$558_storage_ptr",
												"typeString": "struct IPoolOrganizer.PoolDetails"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 779,
									"mutability": "mutable",
									"name": "lenderPools",
									"nameLocation": "791:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1564,
									"src": "753:49:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
										"typeString": "mapping(address => address[])"
									},
									"typeName": {
										"id": 778,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 775,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "761:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "753:29:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
											"typeString": "mapping(address => address[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 776,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "772:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 777,
											"nodeType": "ArrayTypeName",
											"src": "772:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "1e4966ab",
									"id": 783,
									"mutability": "mutable",
									"name": "poolVaults",
									"nameLocation": "843:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1564,
									"src": "808:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 782,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 780,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "816:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "808:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 781,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "827:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 788,
									"mutability": "mutable",
									"name": "borrowerPools",
									"nameLocation": "897:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1564,
									"src": "859:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
										"typeString": "mapping(address => address[])"
									},
									"typeName": {
										"id": 787,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 784,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "867:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "859:29:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
											"typeString": "mapping(address => address[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 785,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "878:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 786,
											"nodeType": "ArrayTypeName",
											"src": "878:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "917:322:9",
										"text": " @dev Emitted when a new pool is registered.\n @param pool The address of the pool.\n @param lender The address of the lender.\n @param borrower The address of the borrower.\n @param vault The address of the vault associated with the pool.\n @param poolType The type of the pool."
									},
									"eventSelector": "8f723e49dc038e67c41b41307a1e0c65653d50125a0c474a21ac32d9a0b24d2b",
									"id": 802,
									"name": "PoolRegistered",
									"nameLocation": "1250:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1290:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1274:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"indexed": true,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "1320:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1304:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1304:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"indexed": true,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "1352:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1336:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"indexed": false,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "1378:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1370:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1370:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"indexed": false,
												"mutability": "mutable",
												"name": "poolType",
												"nameLocation": "1402:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1393:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PoolType_$529",
													"typeString": "enum IPoolOrganizer.PoolType"
												},
												"typeName": {
													"id": 799,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 798,
														"name": "PoolType",
														"nameLocations": [
															"1393:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 529,
														"src": "1393:8:9"
													},
													"referencedDeclaration": 529,
													"src": "1393:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PoolType_$529",
														"typeString": "enum IPoolOrganizer.PoolType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1264:152:9"
									},
									"src": "1244:173:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "1423:117:9",
										"text": " @dev Emitted when a pool is deregistered.\n @param pool The address of the deregistered pool."
									},
									"eventSelector": "334d0b2111287dfddebe4b4c1c5af3ae644909d7fcd024377bf601e236ed5abb",
									"id": 807,
									"name": "PoolDeregistered",
									"nameLocation": "1551:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1584:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "1568:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:22:9"
									},
									"src": "1545:45:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "1596:185:9",
										"text": " @dev Emitted when managers are registered.\n @param vaultManager The address of the vault manager.\n @param rewardManager The address of the reward manager."
									},
									"eventSelector": "8fc18cc172f74c81235145b7927190d2bd0e351fc45bfb17bb572593273cef21",
									"id": 814,
									"name": "ManagerRegistered",
									"nameLocation": "1792:17:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"indexed": false,
												"mutability": "mutable",
												"name": "vaultManager",
												"nameLocation": "1818:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "1810:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1810:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardManager",
												"nameLocation": "1840:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "1832:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1809:45:9"
									},
									"src": "1786:69:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "1861:171:9",
										"text": " @dev Emitted when a vault is registered for a pool.\n @param pool The address of the pool.\n @param vault The address of the registered vault."
									},
									"eventSelector": "f8ee9039d8e4d43426638703c71517008894fdea742bb2d2dbff5a46fb07abdb",
									"id": 821,
									"name": "VaultRegistered",
									"nameLocation": "2043:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "2075:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "2059:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"indexed": true,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "2097:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "2081:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2081:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2058:45:9"
									},
									"src": "2037:67:9"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "2223:110:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 826,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "2244:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 827,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2264:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2268:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2264:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 825,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2233:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2233:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "2233:42:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 832,
															"name": "POOL_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "2296:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 833,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2315:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2319:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2315:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 831,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2285:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2285:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "2285:41:9"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "2110:94:9",
										"text": " @dev Constructor that grants the deployer the admin and pool manager roles."
									},
									"id": 838,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2220:2:9"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2223:0:9"
									},
									"scope": 1564,
									"src": "2209:124:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										588
									],
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "3400:822:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 869,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 841,
																"src": "3418:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3434:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3426:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 870,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3426:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3426:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3418:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20616464726573732063616e6e6f74206265207a65726f",
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3438:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87b863ecb9e24e5ca6ed73ab80a99e3ca6cb5645b7108a8418eddd7225dd4578",
																"typeString": "literal_string \"Pool address cannot be zero\""
															},
															"value": "Pool address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87b863ecb9e24e5ca6ed73ab80a99e3ca6cb5645b7108a8418eddd7225dd4578",
																"typeString": "literal_string \"Pool address cannot be zero\""
															}
														],
														"id": 868,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3410:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3410:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "3410:58:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 879,
																		"name": "poolDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "3499:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$558_storage_$",
																			"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																		}
																	},
																	"id": 881,
																	"indexExpression": {
																		"id": 880,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 841,
																		"src": "3511:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3499:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$558_storage",
																		"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																	}
																},
																"id": 882,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3517:6:9",
																"memberName": "lender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 531,
																"src": "3499:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3535:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3527:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 883,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3527:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3527:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3499:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20616c72656164792072656769737465726564",
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3551:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc861dfb3d1e0446599e73c98b2e7d579c1ecdb9e65a09f726c97d864f2bf3dd",
																"typeString": "literal_string \"Pool already registered\""
															},
															"value": "Pool already registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc861dfb3d1e0446599e73c98b2e7d579c1ecdb9e65a09f726c97d864f2bf3dd",
																"typeString": "literal_string \"Pool already registered\""
															}
														],
														"id": 878,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3478:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3478:108:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "3478:108:9"
											},
											{
												"expression": {
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 891,
															"name": "poolDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "3597:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$558_storage_$",
																"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
															}
														},
														"id": 893,
														"indexExpression": {
															"id": 892,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "3609:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3597:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolDetails_$558_storage",
															"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 896,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 843,
																"src": "3666:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 897,
																"name": "borrower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 845,
																"src": "3696:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 898,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3732:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3738:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3732:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 900,
																"name": "vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "3768:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 901,
																"name": "loanToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 850,
																"src": "3798:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$456",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 902,
																"name": "assetToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "3833:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$456",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 903,
																"name": "repaymentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "3873:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$456",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 904,
																"name": "loanAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "3913:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 905,
																"name": "interestRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "3951:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 906,
																"name": "repaymentPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 862,
																"src": "3994:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 907,
																"name": "poolType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 865,
																"src": "4033:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PoolType_$529",
																	"typeString": "enum IPoolOrganizer.PoolType"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4063:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_contract$_IERC20_$456",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_contract$_IERC20_$456",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_contract$_IERC20_$456",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_enum$_PoolType_$529",
																	"typeString": "enum IPoolOrganizer.PoolType"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 894,
																"name": "IPoolOrganizer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "3617:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IPoolOrganizer_$663_$",
																	"typeString": "type(contract IPoolOrganizer)"
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3632:11:9",
															"memberName": "PoolDetails",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 558,
															"src": "3617:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_PoolDetails_$558_storage_ptr_$",
																"typeString": "type(struct IPoolOrganizer.PoolDetails storage pointer)"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"3658:6:9",
															"3686:8:9",
															"3718:12:9",
															"3761:5:9",
															"3787:9:9",
															"3821:10:9",
															"3857:14:9",
															"3901:10:9",
															"3937:12:9",
															"3977:15:9",
															"4023:8:9",
															"4055:6:9"
														],
														"names": [
															"lender",
															"borrower",
															"creationTime",
															"vault",
															"loanToken",
															"assetToken",
															"repaymentToken",
															"loanAmount",
															"interestRate",
															"repaymentPeriod",
															"poolType",
															"funded"
														],
														"nodeType": "FunctionCall",
														"src": "3617:462:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolDetails_$558_memory_ptr",
															"typeString": "struct IPoolOrganizer.PoolDetails memory"
														}
													},
													"src": "3597:482:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolDetails_$558_storage",
														"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "3597:482:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 916,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "4114:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 912,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "4089:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 914,
															"indexExpression": {
																"id": 913,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 843,
																"src": "4101:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4089:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4109:4:9",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4089:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4089:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "4089:30:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 922,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "4140:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 919,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "4129:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4135:4:9",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4129:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4129:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "4129:16:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 926,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "4175:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "lender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "4181:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 928,
															"name": "borrower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "4189:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 929,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "4199:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 930,
															"name": "poolType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "4206:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_PoolType_$529",
																"typeString": "enum IPoolOrganizer.PoolType"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_enum$_PoolType_$529",
																"typeString": "enum IPoolOrganizer.PoolType"
															}
														],
														"id": 925,
														"name": "PoolRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "4160:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_enum$_PoolType_$529_$returns$__$",
															"typeString": "function (address,address,address,address,enum IPoolOrganizer.PoolType)"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4160:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 932,
												"nodeType": "EmitStatement",
												"src": "4155:60:9"
											}
										]
									},
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "2339:722:9",
										"text": " @notice Registers a new pool with the specified details.\n @dev Registers a pool and emits a `PoolRegistered` event.\n @param pool The address of the pool.\n @param lender The address of the lender.\n @param borrower The address of the borrower.\n @param vault The address of the vault.\n @param loanToken The ERC20 token for the loan.\n @param assetToken The ERC20 token for the asset.\n @param repaymentToken The ERC20 token for the repayment.\n @param loanAmount The amount of the loan.\n @param interestRate The interest rate for the loan.\n @param repaymentPeriod The repayment period for the loan.\n @param poolType The type of the pool."
									},
									"functionSelector": "43756020",
									"id": 934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "registerPool",
									"nameLocation": "3075:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3105:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "3097:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "3127:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "3119:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3119:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "3151:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "3143:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3143:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "3177:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "3169:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3169:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "loanToken",
												"nameLocation": "3199:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "3192:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 849,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 848,
														"name": "IERC20",
														"nameLocations": [
															"3192:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 456,
														"src": "3192:6:9"
													},
													"referencedDeclaration": 456,
													"src": "3192:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$456",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "assetToken",
												"nameLocation": "3225:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "3218:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 852,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 851,
														"name": "IERC20",
														"nameLocations": [
															"3218:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 456,
														"src": "3218:6:9"
													},
													"referencedDeclaration": 456,
													"src": "3218:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$456",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "repaymentToken",
												"nameLocation": "3252:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "3245:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 855,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 854,
														"name": "IERC20",
														"nameLocations": [
															"3245:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 456,
														"src": "3245:6:9"
													},
													"referencedDeclaration": 456,
													"src": "3245:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$456",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "loanAmount",
												"nameLocation": "3284:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "3276:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3276:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "interestRate",
												"nameLocation": "3312:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "3304:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3304:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "repaymentPeriod",
												"nameLocation": "3342:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "3334:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3334:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "poolType",
												"nameLocation": "3376:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "3367:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PoolType_$529",
													"typeString": "enum IPoolOrganizer.PoolType"
												},
												"typeName": {
													"id": 864,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 863,
														"name": "PoolType",
														"nameLocations": [
															"3367:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 529,
														"src": "3367:8:9"
													},
													"referencedDeclaration": 529,
													"src": "3367:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PoolType_$529",
														"typeString": "enum IPoolOrganizer.PoolType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3087:303:9"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3400:0:9"
									},
									"scope": 1564,
									"src": "3066:1156:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										654
									],
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "4454:128:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 941,
																		"name": "poolDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "4472:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$558_storage_$",
																			"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																		}
																	},
																	"id": 943,
																	"indexExpression": {
																		"id": 942,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "4484:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4472:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$558_storage",
																		"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																	}
																},
																"id": 944,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4490:6:9",
																"memberName": "lender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 531,
																"src": "4472:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4508:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4500:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 945,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4500:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4500:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4472:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c206e6f742072656769737465726564",
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4512:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															},
															"value": "Pool not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															}
														],
														"id": 940,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4464:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4464:70:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "4464:70:9"
											},
											{
												"expression": {
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 953,
																"name": "poolDetails",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "4544:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$558_storage_$",
																	"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																}
															},
															"id": 955,
															"indexExpression": {
																"id": 954,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 937,
																"src": "4556:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4544:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolDetails_$558_storage",
																"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
															}
														},
														"id": 956,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4562:6:9",
														"memberName": "funded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 557,
														"src": "4544:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4571:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4544:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "4544:31:9"
											}
										]
									},
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "4228:160:9",
										"text": " @notice Marks a pool as funded.\n @dev Marks the specified pool as funded.\n @param pool The address of the pool to mark as funded."
									},
									"functionSelector": "1f2f2e14",
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "markPoolAsFunded",
									"nameLocation": "4402:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "4427:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "4419:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4419:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4418:14:9"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4454:0:9"
									},
									"scope": 1564,
									"src": "4393:189:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "4901:385:9",
										"statements": [
											{
												"assignments": [
													975
												],
												"declarations": [
													{
														"constant": false,
														"id": 975,
														"mutability": "mutable",
														"name": "lenderPoolsArray",
														"nameLocation": "4928:16:9",
														"nodeType": "VariableDeclaration",
														"scope": 1019,
														"src": "4911:33:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 973,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4911:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 974,
															"nodeType": "ArrayTypeName",
															"src": "4911:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 979,
												"initialValue": {
													"baseExpression": {
														"id": 976,
														"name": "lenderPools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "4947:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(address => address[] storage ref)"
														}
													},
													"id": 978,
													"indexExpression": {
														"id": 977,
														"name": "lender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "4959:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4947:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4911:55:9"
											},
											{
												"assignments": [
													985
												],
												"declarations": [
													{
														"constant": false,
														"id": 985,
														"mutability": "mutable",
														"name": "details",
														"nameLocation": "5024:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1019,
														"src": "4976:55:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolDetails_$558_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IPoolOrganizer.PoolDetails[]"
														},
														"typeName": {
															"baseType": {
																"id": 983,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 982,
																	"name": "IPoolOrganizer.PoolDetails",
																	"nameLocations": [
																		"4976:14:9",
																		"4991:11:9"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 558,
																	"src": "4976:26:9"
																},
																"referencedDeclaration": 558,
																"src": "4976:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolDetails_$558_storage_ptr",
																	"typeString": "struct IPoolOrganizer.PoolDetails"
																}
															},
															"id": 984,
															"nodeType": "ArrayTypeName",
															"src": "4976:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolDetails_$558_storage_$dyn_storage_ptr",
																"typeString": "struct IPoolOrganizer.PoolDetails[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 993,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 990,
																"name": "lenderPoolsArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "5084:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5101:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5084:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "5034:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PoolDetails_$558_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IPoolOrganizer.PoolDetails memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 987,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 986,
																	"name": "IPoolOrganizer.PoolDetails",
																	"nameLocations": [
																		"5038:14:9",
																		"5053:11:9"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 558,
																	"src": "5038:26:9"
																},
																"referencedDeclaration": 558,
																"src": "5038:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolDetails_$558_storage_ptr",
																	"typeString": "struct IPoolOrganizer.PoolDetails"
																}
															},
															"id": 988,
															"nodeType": "ArrayTypeName",
															"src": "5038:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolDetails_$558_storage_$dyn_storage_ptr",
																"typeString": "struct IPoolOrganizer.PoolDetails[]"
															}
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5034:87:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PoolDetails_$558_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IPoolOrganizer.PoolDetails memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4976:145:9"
											},
											{
												"body": {
													"id": 1015,
													"nodeType": "Block",
													"src": "5186:70:9",
													"statements": [
														{
															"expression": {
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1005,
																		"name": "details",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "5200:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PoolDetails_$558_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct IPoolOrganizer.PoolDetails memory[] memory"
																		}
																	},
																	"id": 1007,
																	"indexExpression": {
																		"id": 1006,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "5208:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5200:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$558_memory_ptr",
																		"typeString": "struct IPoolOrganizer.PoolDetails memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1008,
																		"name": "poolDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "5213:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$558_storage_$",
																			"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																		}
																	},
																	"id": 1012,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1009,
																			"name": "lenderPoolsArray",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 975,
																			"src": "5225:16:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1011,
																		"indexExpression": {
																			"id": 1010,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 995,
																			"src": "5242:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5225:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5213:32:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$558_storage",
																		"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																	}
																},
																"src": "5200:45:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolDetails_$558_memory_ptr",
																	"typeString": "struct IPoolOrganizer.PoolDetails memory"
																}
															},
															"id": 1014,
															"nodeType": "ExpressionStatement",
															"src": "5200:45:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 998,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "5152:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 999,
															"name": "lenderPoolsArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "5156:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1000,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5173:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5156:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5152:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1016,
												"initializationExpression": {
													"assignments": [
														995
													],
													"declarations": [
														{
															"constant": false,
															"id": 995,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5145:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1016,
															"src": "5137:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 994,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5137:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 997,
													"initialValue": {
														"hexValue": "30",
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5149:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5137:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5181:3:9",
														"subExpression": {
															"id": 1002,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "5181:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1004,
													"nodeType": "ExpressionStatement",
													"src": "5181:3:9"
												},
												"nodeType": "ForStatement",
												"src": "5132:124:9"
											},
											{
												"expression": {
													"id": 1017,
													"name": "details",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 985,
													"src": "5272:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PoolDetails_$558_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IPoolOrganizer.PoolDetails memory[] memory"
													}
												},
												"functionReturnParameters": 970,
												"id": 1018,
												"nodeType": "Return",
												"src": "5265:14:9"
											}
										]
									},
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "4588:171:9",
										"text": " @notice Gets the details of all pools associated with a lender.\n @param lender The address of the lender.\n @return An array of pool details."
									},
									"functionSelector": "52fc9b0e",
									"id": 1020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllLenderPoolDetails",
									"nameLocation": "4773:23:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "4805:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "4797:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4797:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4796:16:9"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "4860:35:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PoolDetails_$558_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IPoolOrganizer.PoolDetails[]"
												},
												"typeName": {
													"baseType": {
														"id": 967,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 966,
															"name": "IPoolOrganizer.PoolDetails",
															"nameLocations": [
																"4860:14:9",
																"4875:11:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 558,
															"src": "4860:26:9"
														},
														"referencedDeclaration": 558,
														"src": "4860:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolDetails_$558_storage_ptr",
															"typeString": "struct IPoolOrganizer.PoolDetails"
														}
													},
													"id": 968,
													"nodeType": "ArrayTypeName",
													"src": "4860:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PoolDetails_$558_storage_$dyn_storage_ptr",
														"typeString": "struct IPoolOrganizer.PoolDetails[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:37:9"
									},
									"scope": 1564,
									"src": "4764:522:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "5576:47:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1029,
														"name": "borrowerPools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "5593:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(address => address[] storage ref)"
														}
													},
													"id": 1031,
													"indexExpression": {
														"id": 1030,
														"name": "borrower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "5607:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5593:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1028,
												"id": 1032,
												"nodeType": "Return",
												"src": "5586:30:9"
											}
										]
									},
									"documentation": {
										"id": 1021,
										"nodeType": "StructuredDocumentation",
										"src": "5292:164:9",
										"text": " @notice Gets all pools associated with a borrower.\n @param borrower The address of the borrower.\n @return An array of pool addresses."
									},
									"functionSelector": "e7ef32f7",
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolsByBorrower",
									"nameLocation": "5470:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "5497:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "5489:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5489:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5488:18:9"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "5554:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1025,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5554:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1026,
													"nodeType": "ArrayTypeName",
													"src": "5554:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5553:18:9"
									},
									"scope": 1564,
									"src": "5461:162:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										594
									],
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "5866:301:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1041,
																		"name": "poolDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "5884:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$558_storage_$",
																			"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																		}
																	},
																	"id": 1043,
																	"indexExpression": {
																		"id": 1042,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "5896:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5884:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$558_storage",
																		"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																	}
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5902:6:9",
																"memberName": "lender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 531,
																"src": "5884:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5920:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5912:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1045,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5912:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5912:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5884:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c206e6f742072656769737465726564",
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5924:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															},
															"value": "Pool not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															}
														],
														"id": 1040,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5876:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5876:70:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "5876:70:9"
											},
											{
												"assignments": [
													1054
												],
												"declarations": [
													{
														"constant": false,
														"id": 1054,
														"mutability": "mutable",
														"name": "lender",
														"nameLocation": "5965:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1078,
														"src": "5957:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1053,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5957:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1059,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1055,
															"name": "poolDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "5974:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$558_storage_$",
																"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
															}
														},
														"id": 1057,
														"indexExpression": {
															"id": 1056,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "5986:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5974:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolDetails_$558_storage",
															"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5992:6:9",
													"memberName": "lender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 531,
													"src": "5974:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5957:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1061,
															"name": "lender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "6035:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1062,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "6043:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1060,
														"name": "_removePoolFromLenderArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "6008:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6008:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "6008:40:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1066,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "6083:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1065,
														"name": "_removePoolFromMainArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "6058:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6058:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "6058:30:9"
											},
											{
												"expression": {
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6099:24:9",
													"subExpression": {
														"baseExpression": {
															"id": 1069,
															"name": "poolDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "6106:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$558_storage_$",
																"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
															}
														},
														"id": 1071,
														"indexExpression": {
															"id": 1070,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "6118:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6106:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolDetails_$558_storage",
															"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "6099:24:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1075,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "6155:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1074,
														"name": "PoolDeregistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "6138:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6138:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "EmitStatement",
												"src": "6133:27:9"
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "5629:185:9",
										"text": " @notice Deregisters a pool.\n @dev Deregisters the specified pool and emits a `PoolDeregistered` event.\n @param pool The address of the pool to deregister."
									},
									"functionSelector": "7e72c7d7",
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deregisterPool",
									"nameLocation": "5828:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "5851:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "5843:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5843:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5842:14:9"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5866:0:9"
									},
									"scope": 1564,
									"src": "5819:348:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										662
									],
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "6431:560:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1088,
																		"name": "poolDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "6449:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$558_storage_$",
																			"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																		}
																	},
																	"id": 1090,
																	"indexExpression": {
																		"id": 1089,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1082,
																		"src": "6461:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6449:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$558_storage",
																		"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																	}
																},
																"id": 1091,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6467:6:9",
																"memberName": "lender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 531,
																"src": "6449:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6485:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6477:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1092,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6477:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6477:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6449:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c206e6f742072656769737465726564",
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6489:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															},
															"value": "Pool not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															}
														],
														"id": 1087,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6441:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6441:70:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "6441:70:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1101,
																"name": "newBorrower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1084,
																"src": "6542:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6565:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6557:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1102,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6557:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6557:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6542:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426f72726f7765722063616e6e6f7420626520746865207a65726f2061646472657373",
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6581:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed40e154fc5947a1352af7918961f491c7b5e4c2c2d9ffe290fde6912136551f",
																"typeString": "literal_string \"Borrower cannot be the zero address\""
															},
															"value": "Borrower cannot be the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed40e154fc5947a1352af7918961f491c7b5e4c2c2d9ffe290fde6912136551f",
																"typeString": "literal_string \"Borrower cannot be the zero address\""
															}
														],
														"id": 1100,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6521:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6521:107:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "6521:107:9"
											},
											{
												"assignments": [
													1111
												],
												"declarations": [
													{
														"constant": false,
														"id": 1111,
														"mutability": "mutable",
														"name": "currentBorrower",
														"nameLocation": "6647:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 1149,
														"src": "6639:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1110,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6639:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1116,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1112,
															"name": "poolDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "6665:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$558_storage_$",
																"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
															}
														},
														"id": 1114,
														"indexExpression": {
															"id": 1113,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "6677:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6665:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolDetails_$558_storage",
															"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6683:8:9",
													"memberName": "borrower",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 533,
													"src": "6665:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6639:52:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1117,
														"name": "currentBorrower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "6705:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1118,
														"name": "newBorrower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "6724:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6705:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1148,
												"nodeType": "IfStatement",
												"src": "6701:284:9",
												"trueBody": {
													"id": 1147,
													"nodeType": "Block",
													"src": "6737:248:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1120,
																	"name": "currentBorrower",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1111,
																	"src": "6755:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6782:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6774:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1121,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6774:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6774:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6755:29:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1132,
															"nodeType": "IfStatement",
															"src": "6751:119:9",
															"trueBody": {
																"id": 1131,
																"nodeType": "Block",
																"src": "6786:84:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1127,
																					"name": "currentBorrower",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1111,
																					"src": "6833:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1128,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1082,
																					"src": "6850:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1126,
																				"name": "_removePoolFromBorrowerArray",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1563,
																				"src": "6804:28:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
																					"typeString": "function (address,address)"
																				}
																			},
																			"id": 1129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6804:51:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1130,
																		"nodeType": "ExpressionStatement",
																		"src": "6804:51:9"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1137,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1082,
																		"src": "6915:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 1133,
																			"name": "borrowerPools",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 788,
																			"src": "6883:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 1135,
																		"indexExpression": {
																			"id": 1134,
																			"name": "newBorrower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1084,
																			"src": "6897:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6883:26:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6910:4:9",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "6883:31:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6883:37:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1139,
															"nodeType": "ExpressionStatement",
															"src": "6883:37:9"
														},
														{
															"expression": {
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1140,
																			"name": "poolDetails",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 774,
																			"src": "6934:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$558_storage_$",
																				"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																			}
																		},
																		"id": 1142,
																		"indexExpression": {
																			"id": 1141,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1082,
																			"src": "6946:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6934:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolDetails_$558_storage",
																			"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																		}
																	},
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6952:8:9",
																	"memberName": "borrower",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 533,
																	"src": "6934:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1144,
																	"name": "newBorrower",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1084,
																	"src": "6963:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6934:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1146,
															"nodeType": "ExpressionStatement",
															"src": "6934:40:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "6173:169:9",
										"text": " @notice Sets the borrower for a specified pool.\n @param pool The address of the pool.\n @param newBorrower The address of the new borrower."
									},
									"functionSelector": "37e238c5",
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBorrowerForPool",
									"nameLocation": "6356:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "6383:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "6375:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6375:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "newBorrower",
												"nameLocation": "6397:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "6389:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6389:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6374:35:9"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6431:0:9"
									},
									"scope": 1564,
									"src": "6347:644:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										648
									],
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "7410:421:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1162,
																"name": "_vaultManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1153,
																"src": "7441:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7466:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7458:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1163,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7458:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7458:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7441:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5661756c744d616e616765722063616e6e6f74206265207a65726f2061646472657373",
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7482:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3300f91172421bdc36f79d184a3d6d7dc2e019f7fb0814aeb4306f4cacbe452e",
																"typeString": "literal_string \"VaultManager cannot be zero address\""
															},
															"value": "VaultManager cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3300f91172421bdc36f79d184a3d6d7dc2e019f7fb0814aeb4306f4cacbe452e",
																"typeString": "literal_string \"VaultManager cannot be zero address\""
															}
														],
														"id": 1161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7420:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7420:109:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "7420:109:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1172,
																"name": "_rewardManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "7560:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7586:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7578:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1173,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7578:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7578:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7560:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265776172644d616e616765722063616e6e6f74206265207a65726f2061646472657373",
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7602:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fd60161d2dbc5f20e9acfa92ab57db75891d1d8ebbf7459220687d0a65d0b331",
																"typeString": "literal_string \"RewardManager cannot be zero address\""
															},
															"value": "RewardManager cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fd60161d2dbc5f20e9acfa92ab57db75891d1d8ebbf7459220687d0a65d0b331",
																"typeString": "literal_string \"RewardManager cannot be zero address\""
															}
														],
														"id": 1171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7539:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7539:111:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1180,
												"nodeType": "ExpressionStatement",
												"src": "7539:111:9"
											},
											{
												"expression": {
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1181,
														"name": "vaultManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "7661:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVaultManager_$744",
															"typeString": "contract IVaultManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1183,
																"name": "_vaultManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1153,
																"src": "7690:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1182,
															"name": "IVaultManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "7676:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IVaultManager_$744_$",
																"typeString": "type(contract IVaultManager)"
															}
														},
														"id": 1184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7676:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVaultManager_$744",
															"typeString": "contract IVaultManager"
														}
													},
													"src": "7661:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVaultManager_$744",
														"typeString": "contract IVaultManager"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "7661:43:9"
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1187,
														"name": "rewardManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "7714:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRewardManager_$696",
															"typeString": "contract IRewardManager"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1189,
																"name": "_rewardManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "7745:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1188,
															"name": "IRewardManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "7730:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IRewardManager_$696_$",
																"typeString": "type(contract IRewardManager)"
															}
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7730:30:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRewardManager_$696",
															"typeString": "contract IRewardManager"
														}
													},
													"src": "7714:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IRewardManager_$696",
														"typeString": "contract IRewardManager"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "7714:46:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1194,
															"name": "_vaultManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "7794:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1195,
															"name": "_rewardManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "7809:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1193,
														"name": "ManagerRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "7776:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7776:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "EmitStatement",
												"src": "7771:53:9"
											}
										]
									},
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "6997:277:9",
										"text": " @notice Registers the vault and reward managers.\n @dev Registers the specified managers and emits a `ManagerRegistered` event.\n @param _vaultManager The address of the vault manager.\n @param _rewardManager The address of the reward manager."
									},
									"functionSelector": "c489579d",
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1158,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "7386:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1157,
												"name": "onlyRole",
												"nameLocations": [
													"7377:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "7377:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7377:28:9"
										}
									],
									"name": "registerManagers",
									"nameLocation": "7288:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "_vaultManager",
												"nameLocation": "7313:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "7305:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7305:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "_rewardManager",
												"nameLocation": "7336:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "7328:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7328:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7304:47:9"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7410:0:9"
									},
									"scope": 1564,
									"src": "7279:552:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1217,
										"nodeType": "Block",
										"src": "8042:71:9",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 1209,
																	"name": "vaultManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "8068:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IVaultManager_$744",
																		"typeString": "contract IVaultManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IVaultManager_$744",
																		"typeString": "contract IVaultManager"
																	}
																],
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8060:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1207,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8060:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8060:21:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1213,
																	"name": "rewardManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "8091:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IRewardManager_$696",
																		"typeString": "contract IRewardManager"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IRewardManager_$696",
																		"typeString": "contract IRewardManager"
																	}
																],
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8083:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1211,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8083:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8083:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 1215,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8059:47:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1216,
												"nodeType": "Return",
												"src": "8052:54:9"
											}
										]
									},
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "7837:136:9",
										"text": " @notice Gets the addresses of the registered managers.\n @return The addresses of the vault and reward managers."
									},
									"functionSelector": "a8d088bb",
									"id": 1218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getManagers",
									"nameLocation": "7987:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7998:2:9"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "8024:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8024:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "8033:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8033:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8023:18:9"
									},
									"scope": 1564,
									"src": "7978:135:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										600
									],
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "8292:36:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1224,
														"name": "pools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "8309:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8315:6:9",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "8309:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1223,
												"id": 1226,
												"nodeType": "Return",
												"src": "8302:19:9"
											}
										]
									},
									"documentation": {
										"id": 1219,
										"nodeType": "StructuredDocumentation",
										"src": "8119:111:9",
										"text": " @notice Gets the total number of registered pools.\n @return The total number of pools."
									},
									"functionSelector": "d3ffe67a",
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalPools",
									"nameLocation": "8244:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8257:2:9"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "8283:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8283:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8282:9:9"
									},
									"scope": 1564,
									"src": "8235:93:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										609
									],
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "8608:43:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1237,
														"name": "lenderPools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "8625:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(address => address[] storage ref)"
														}
													},
													"id": 1239,
													"indexExpression": {
														"id": 1238,
														"name": "lender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "8637:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8625:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1236,
												"id": 1240,
												"nodeType": "Return",
												"src": "8618:26:9"
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "8334:158:9",
										"text": " @notice Gets all pools associated with a lender.\n @param lender The address of the lender.\n @return An array of pool addresses."
									},
									"functionSelector": "24a44efb",
									"id": 1242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolsByLender",
									"nameLocation": "8506:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "8531:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "8523:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8523:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8522:16:9"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "8586:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1233,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8586:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1234,
													"nodeType": "ArrayTypeName",
													"src": "8586:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8585:18:9"
									},
									"scope": 1564,
									"src": "8497:154:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										618
									],
									"body": {
										"id": 1268,
										"nodeType": "Block",
										"src": "8934:121:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1252,
																		"name": "poolDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "8952:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$558_storage_$",
																			"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																		}
																	},
																	"id": 1254,
																	"indexExpression": {
																		"id": 1253,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1245,
																		"src": "8964:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8952:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$558_storage",
																		"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																	}
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8970:6:9",
																"memberName": "lender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 531,
																"src": "8952:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8988:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8980:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1256,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8980:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8980:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8952:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c206e6f742072656769737465726564",
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8992:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															},
															"value": "Pool not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															}
														],
														"id": 1251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8944:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8944:70:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "8944:70:9"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1264,
														"name": "poolDetails",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "9031:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$558_storage_$",
															"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
														}
													},
													"id": 1266,
													"indexExpression": {
														"id": 1265,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "9043:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9031:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolDetails_$558_storage",
														"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
													}
												},
												"functionReturnParameters": 1250,
												"id": 1267,
												"nodeType": "Return",
												"src": "9024:24:9"
											}
										]
									},
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "8657:148:9",
										"text": " @notice Gets the details of a specified pool.\n @param pool The address of the pool.\n @return The details of the pool."
									},
									"functionSelector": "d3e90fa0",
									"id": 1269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolDetails",
									"nameLocation": "8819:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "8842:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "8834:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8834:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8833:14:9"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "8895:33:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolDetails_$558_memory_ptr",
													"typeString": "struct IPoolOrganizer.PoolDetails"
												},
												"typeName": {
													"id": 1248,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1247,
														"name": "IPoolOrganizer.PoolDetails",
														"nameLocations": [
															"8895:14:9",
															"8910:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 558,
														"src": "8895:26:9"
													},
													"referencedDeclaration": 558,
													"src": "8895:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolDetails_$558_storage_ptr",
														"typeString": "struct IPoolOrganizer.PoolDetails"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8894:35:9"
									},
									"scope": 1564,
									"src": "8810:245:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										626
									],
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "9295:162:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1278,
																	"name": "poolVaults",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "9326:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 1280,
																"indexExpression": {
																	"id": 1279,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "9337:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9326:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9354:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9346:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1281,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9346:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9346:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9326:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c206e6f742072656769737465726564206f7220686173206e6f207661756c74",
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9370:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_39a3b1530e3b6596e085e382bff955d043a269a2081635a9d861923ef05dbbcd",
																"typeString": "literal_string \"Pool not registered or has no vault\""
															},
															"value": "Pool not registered or has no vault"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_39a3b1530e3b6596e085e382bff955d043a269a2081635a9d861923ef05dbbcd",
																"typeString": "literal_string \"Pool not registered or has no vault\""
															}
														],
														"id": 1277,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9305:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9305:112:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "9305:112:9"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1289,
														"name": "poolVaults",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "9434:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 1291,
													"indexExpression": {
														"id": 1290,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "9445:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9434:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1276,
												"id": 1292,
												"nodeType": "Return",
												"src": "9427:23:9"
											}
										]
									},
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "9061:158:9",
										"text": " @notice Gets the vault address associated with a pool.\n @param pool The address of the pool.\n @return The address of the vault."
									},
									"functionSelector": "7570e389",
									"id": 1294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVaultForPool",
									"nameLocation": "9233:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "9257:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "9249:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9249:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9248:14:9"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "9286:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9286:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9285:9:9"
									},
									"scope": 1564,
									"src": "9224:233:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1303,
										"nodeType": "Block",
										"src": "9645:29:9",
										"statements": [
											{
												"expression": {
													"id": 1301,
													"name": "pools",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 769,
													"src": "9662:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1300,
												"id": 1302,
												"nodeType": "Return",
												"src": "9655:12:9"
											}
										]
									},
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "9463:105:9",
										"text": " @notice Gets all registered pool addresses.\n @return An array of pool addresses."
									},
									"functionSelector": "c56f1b44",
									"id": 1304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllPoolAddresses",
									"nameLocation": "9582:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9601:2:9"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "9627:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1297,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "9627:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1298,
													"nodeType": "ArrayTypeName",
													"src": "9627:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9626:18:9"
									},
									"scope": 1564,
									"src": "9573:101:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										632
									],
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "9877:234:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1312,
																	"name": "DEFAULT_ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "9916:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1313,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9936:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9940:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9936:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1311,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "9908:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9908:39:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420616e2061646d696e",
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9961:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															},
															"value": "Caller is not an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															}
														],
														"id": 1310,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9887:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9887:108:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1318,
												"nodeType": "ExpressionStatement",
												"src": "9887:108:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1320,
															"name": "POOL_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "10015:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1321,
															"name": "factoryAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "10034:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1319,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "10005:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10005:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1323,
												"nodeType": "ExpressionStatement",
												"src": "10005:44:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1325,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "10069:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1326,
															"name": "factoryAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "10089:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1324,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "10059:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10059:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1328,
												"nodeType": "ExpressionStatement",
												"src": "10059:45:9"
											}
										]
									},
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "9680:131:9",
										"text": " @notice Grants factory access to the specified address.\n @param factoryAddress The address of the factory."
									},
									"functionSelector": "5d102df7",
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "grantFactoryAccess",
									"nameLocation": "9825:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "factoryAddress",
												"nameLocation": "9852:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "9844:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9844:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9843:24:9"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9877:0:9"
									},
									"scope": 1564,
									"src": "9816:295:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										640
									],
									"body": {
										"id": 1391,
										"nodeType": "Block",
										"src": "10443:371:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1339,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1333,
																	"src": "10461:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10477:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10469:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1340,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10469:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10469:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10461:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1345,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1335,
																	"src": "10483:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10500:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10492:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1346,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10492:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10492:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10483:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10461:41:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616464726573736573",
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10504:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee597f13de1ba23a7961edbe397251ba0565f39f3d995b5348c732d160eca14f",
																"typeString": "literal_string \"Invalid addresses\""
															},
															"value": "Invalid addresses"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee597f13de1ba23a7961edbe397251ba0565f39f3d995b5348c732d160eca14f",
																"typeString": "literal_string \"Invalid addresses\""
															}
														],
														"id": 1338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10453:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10453:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "10453:71:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1356,
																		"name": "poolDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "10542:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolDetails_$558_storage_$",
																			"typeString": "mapping(address => struct IPoolOrganizer.PoolDetails storage ref)"
																		}
																	},
																	"id": 1358,
																	"indexExpression": {
																		"id": 1357,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1333,
																		"src": "10554:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10542:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolDetails_$558_storage",
																		"typeString": "struct IPoolOrganizer.PoolDetails storage ref"
																	}
																},
																"id": 1359,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10560:6:9",
																"memberName": "lender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 531,
																"src": "10542:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10578:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10570:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1360,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10570:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10570:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10542:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c206e6f742072656769737465726564",
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10582:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															},
															"value": "Pool not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4223e50a367045d38bb02066828a03f85319e396cac02a270481328c4439b7c",
																"typeString": "literal_string \"Pool not registered\""
															}
														],
														"id": 1355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10534:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10534:70:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "10534:70:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1369,
																	"name": "poolVaults",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "10635:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 1371,
																"indexExpression": {
																	"id": 1370,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1333,
																	"src": "10646:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10635:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10663:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10655:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1372,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10655:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10655:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10635:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5661756c7420616c7265616479207265676973746572656420666f72207468697320706f6f6c",
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10679:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d429b56e51591333ba49e70031a7e747fbb1110c7c7977c922e5e8e59ef9580",
																"typeString": "literal_string \"Vault already registered for this pool\""
															},
															"value": "Vault already registered for this pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d429b56e51591333ba49e70031a7e747fbb1110c7c7977c922e5e8e59ef9580",
																"typeString": "literal_string \"Vault already registered for this pool\""
															}
														],
														"id": 1368,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10614:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10614:115:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1379,
												"nodeType": "ExpressionStatement",
												"src": "10614:115:9"
											},
											{
												"expression": {
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1380,
															"name": "poolVaults",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "10740:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1382,
														"indexExpression": {
															"id": 1381,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "10751:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10740:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1383,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "10759:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10740:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1385,
												"nodeType": "ExpressionStatement",
												"src": "10740:24:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1387,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "10795:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1388,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "10801:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1386,
														"name": "VaultRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "10779:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10779:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1390,
												"nodeType": "EmitStatement",
												"src": "10774:33:9"
											}
										]
									},
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "10117:248:9",
										"text": " @notice Registers a vault for a specified pool.\n @dev Registers the specified vault for the pool and emits a `VaultRegistered` event.\n @param pool The address of the pool.\n @param vault The address of the vault."
									},
									"functionSelector": "05c4fdf9",
									"id": 1392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "registerVault",
									"nameLocation": "10379:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "10401:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "10393:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10393:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "10415:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "10407:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10407:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10392:29:9"
									},
									"returnParameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10443:0:9"
									},
									"scope": 1564,
									"src": "10370:444:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1436,
										"nodeType": "Block",
										"src": "11096:240:9",
										"statements": [
											{
												"assignments": [
													1401
												],
												"declarations": [
													{
														"constant": false,
														"id": 1401,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "11114:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1436,
														"src": "11106:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1400,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11106:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1408,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1403,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "11139:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 1405,
															"indexExpression": {
																"id": 1404,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1395,
																"src": "11151:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11139:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														{
															"id": 1406,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "11160:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1402,
														"name": "findIndexInArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1510,
														"src": "11122:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address[] storage pointer,address) view returns (uint256)"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11122:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11106:59:9"
											},
											{
												"assignments": [
													1410
												],
												"declarations": [
													{
														"constant": false,
														"id": 1410,
														"mutability": "mutable",
														"name": "lastIndex",
														"nameLocation": "11183:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1436,
														"src": "11175:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1409,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11175:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1417,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1411,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "11195:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 1413,
															"indexExpression": {
																"id": 1412,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1395,
																"src": "11207:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11195:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11215:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11195:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11224:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "11195:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11175:50:9"
											},
											{
												"expression": {
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1418,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "11235:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 1421,
															"indexExpression": {
																"id": 1419,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1395,
																"src": "11247:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11235:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1422,
														"indexExpression": {
															"id": 1420,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1401,
															"src": "11255:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11235:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1423,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "11264:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 1425,
															"indexExpression": {
																"id": 1424,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1395,
																"src": "11276:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11264:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1427,
														"indexExpression": {
															"id": 1426,
															"name": "lastIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "11284:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11264:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11235:59:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1429,
												"nodeType": "ExpressionStatement",
												"src": "11235:59:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 1430,
																"name": "lenderPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "11304:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 1432,
															"indexExpression": {
																"id": 1431,
																"name": "lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1395,
																"src": "11316:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11304:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11324:3:9",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "11304:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer)"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11304:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1435,
												"nodeType": "ExpressionStatement",
												"src": "11304:25:9"
											}
										]
									},
									"documentation": {
										"id": 1393,
										"nodeType": "StructuredDocumentation",
										"src": "10853:164:9",
										"text": " @dev Removes a pool from the lender's array of pools.\n @param lender The address of the lender.\n @param pool The address of the pool."
									},
									"id": 1437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removePoolFromLenderArray",
									"nameLocation": "11031:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "lender",
												"nameLocation": "11066:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "11058:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11058:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "11082:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "11074:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11074:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11057:30:9"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11096:0:9"
									},
									"scope": 1564,
									"src": "11022:314:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1470,
										"nodeType": "Block",
										"src": "11515:170:9",
										"statements": [
											{
												"assignments": [
													1444
												],
												"declarations": [
													{
														"constant": false,
														"id": 1444,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "11533:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1470,
														"src": "11525:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1443,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11525:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1449,
												"initialValue": {
													"arguments": [
														{
															"id": 1446,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "11558:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														{
															"id": 1447,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "11565:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1445,
														"name": "findIndexInArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1510,
														"src": "11541:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address[] storage pointer,address) view returns (uint256)"
														}
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11541:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11525:45:9"
											},
											{
												"assignments": [
													1451
												],
												"declarations": [
													{
														"constant": false,
														"id": 1451,
														"mutability": "mutable",
														"name": "lastIndex",
														"nameLocation": "11588:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1470,
														"src": "11580:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1450,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11580:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1456,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1452,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "11600:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11606:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11600:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11615:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "11600:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11580:36:9"
											},
											{
												"expression": {
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1457,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "11626:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1459,
														"indexExpression": {
															"id": 1458,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "11632:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11626:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1460,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "11641:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1462,
														"indexExpression": {
															"id": 1461,
															"name": "lastIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "11647:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11641:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11626:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1464,
												"nodeType": "ExpressionStatement",
												"src": "11626:31:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1465,
															"name": "pools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "11667:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11673:3:9",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "11667:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer)"
														}
													},
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11667:11:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1469,
												"nodeType": "ExpressionStatement",
												"src": "11667:11:9"
											}
										]
									},
									"documentation": {
										"id": 1438,
										"nodeType": "StructuredDocumentation",
										"src": "11342:112:9",
										"text": " @dev Removes a pool from the main array of pools.\n @param pool The address of the pool."
									},
									"id": 1471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removePoolFromMainArray",
									"nameLocation": "11468:24:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "11501:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "11493:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11493:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11492:14:9"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11515:0:9"
									},
									"scope": 1564,
									"src": "11459:226:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1509,
										"nodeType": "Block",
										"src": "12024:173:9",
										"statements": [
											{
												"body": {
													"id": 1501,
													"nodeType": "Block",
													"src": "12077:57:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1493,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1475,
																		"src": "12095:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[] storage pointer"
																		}
																	},
																	"id": 1495,
																	"indexExpression": {
																		"id": 1494,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1483,
																		"src": "12101:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12095:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1496,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "12107:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "12095:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1500,
															"nodeType": "IfStatement",
															"src": "12091:32:9",
															"trueBody": {
																"expression": {
																	"id": 1498,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1483,
																	"src": "12122:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1481,
																"id": 1499,
																"nodeType": "Return",
																"src": "12115:8:9"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1486,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1483,
														"src": "12054:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1487,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "12058:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[] storage pointer"
															}
														},
														"id": 1488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12064:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12058:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12054:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1502,
												"initializationExpression": {
													"assignments": [
														1483
													],
													"declarations": [
														{
															"constant": false,
															"id": 1483,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12047:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1502,
															"src": "12039:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1482,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12039:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1485,
													"initialValue": {
														"hexValue": "30",
														"id": 1484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12051:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12039:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12072:3:9",
														"subExpression": {
															"id": 1490,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "12072:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1492,
													"nodeType": "ExpressionStatement",
													"src": "12072:3:9"
												},
												"nodeType": "ForStatement",
												"src": "12034:100:9"
											},
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12155:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1504,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12155:7:9",
																	"typeDescriptions": {}
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																}
															],
															"id": 1503,
															"name": "type",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967269,
															"src": "12150:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12150:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_magic_meta_type_t_uint256",
															"typeString": "type(uint256)"
														}
													},
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "12164:3:9",
													"memberName": "max",
													"nodeType": "MemberAccess",
													"src": "12150:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1481,
												"id": 1508,
												"nodeType": "Return",
												"src": "12143:24:9"
											}
										]
									},
									"documentation": {
										"id": 1472,
										"nodeType": "StructuredDocumentation",
										"src": "11691:202:9",
										"text": " @dev Finds the index of a target address in an array.\n @param array The array to search.\n @param target The target address.\n @return The index of the target address."
									},
									"id": 1510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findIndexInArray",
									"nameLocation": "11907:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "11942:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "11924:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1473,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "11924:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1474,
													"nodeType": "ArrayTypeName",
													"src": "11924:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11957:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "11949:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11949:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11923:41:9"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "12011:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12011:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12010:9:9"
									},
									"scope": 1564,
									"src": "11898:299:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "12468:336:9",
										"statements": [
											{
												"assignments": [
													1519
												],
												"declarations": [
													{
														"constant": false,
														"id": 1519,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "12486:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1562,
														"src": "12478:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12478:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1526,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1521,
																"name": "borrowerPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "12511:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 1523,
															"indexExpression": {
																"id": 1522,
																"name": "borrower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "12525:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12511:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														{
															"id": 1524,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "12536:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1520,
														"name": "findIndexInArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1510,
														"src": "12494:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address[] storage pointer,address) view returns (uint256)"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12494:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12478:63:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1527,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1519,
														"src": "12555:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1528,
																"name": "borrowerPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "12563:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 1530,
															"indexExpression": {
																"id": 1529,
																"name": "borrower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "12577:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12563:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12587:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12563:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12555:38:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1561,
												"nodeType": "IfStatement",
												"src": "12551:247:9",
												"trueBody": {
													"id": 1560,
													"nodeType": "Block",
													"src": "12595:203:9",
													"statements": [
														{
															"assignments": [
																1534
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1534,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "12617:9:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1560,
																	"src": "12609:17:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1533,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12609:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1541,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1535,
																			"name": "borrowerPools",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 788,
																			"src": "12629:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 1537,
																		"indexExpression": {
																			"id": 1536,
																			"name": "borrower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1513,
																			"src": "12643:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12629:23:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12653:6:9",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "12629:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12662:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "12629:34:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12609:54:9"
														},
														{
															"expression": {
																"id": 1552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1542,
																			"name": "borrowerPools",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 788,
																			"src": "12677:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 1545,
																		"indexExpression": {
																			"id": 1543,
																			"name": "borrower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1513,
																			"src": "12691:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12677:23:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1546,
																	"indexExpression": {
																		"id": 1544,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1519,
																		"src": "12701:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12677:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1547,
																			"name": "borrowerPools",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 788,
																			"src": "12710:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 1549,
																		"indexExpression": {
																			"id": 1548,
																			"name": "borrower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1513,
																			"src": "12724:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12710:23:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1551,
																	"indexExpression": {
																		"id": 1550,
																		"name": "lastIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1534,
																		"src": "12734:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12710:34:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "12677:67:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1553,
															"nodeType": "ExpressionStatement",
															"src": "12677:67:9"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"baseExpression": {
																			"id": 1554,
																			"name": "borrowerPools",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 788,
																			"src": "12758:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 1556,
																		"indexExpression": {
																			"id": 1555,
																			"name": "borrower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1513,
																			"src": "12772:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12758:23:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12782:3:9",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "12758:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer)"
																	}
																},
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12758:29:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1559,
															"nodeType": "ExpressionStatement",
															"src": "12758:29:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1511,
										"nodeType": "StructuredDocumentation",
										"src": "12203:170:9",
										"text": " @dev Removes a pool from the borrower's array of pools.\n @param borrower The address of the borrower.\n @param pool The address of the pool."
									},
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removePoolFromBorrowerArray",
									"nameLocation": "12387:28:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "12424:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "12416:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12416:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "12442:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "12434:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12434:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12415:32:9"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12468:0:9"
									},
									"scope": 1564,
									"src": "12378:426:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1565,
							"src": "428:12378:9",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335,
								802,
								807,
								814,
								821
							]
						}
					],
					"src": "32:12775:9"
				},
				"id": 9
			}
		}
	}
}