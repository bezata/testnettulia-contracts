{
	"id": "c1db6e5ea808edd59a19aa26900a0ccd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"settings": {
			"viaIR": true,
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/contracts/protocol/TuliaFlashPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\";\r\nimport \"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\";\r\nimport \"../interfaces/IPermit2.sol\";\r\nimport \"../interfaces/IRewardManager.sol\";\r\n\r\n/// @title TuliaFlashPool\r\n/// @dev Implements flash loan functionalities with integrated fee management.\r\n/// This contract allows issuing flash loans backed by ERC20 tokens.\r\ncontract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {\r\n      \r\n    /// @notice RewardManager when lender waiting.  \r\n    IRewardManager public rewardManager;\r\n    /// @notice ERC20 asset used for flash loans\r\n    IERC20 public asset;\r\n\r\n    /// @notice Permit2 contract utilized for permissioned token transfers\r\n    IPermit2 public permit2;\r\n\r\n    /// @notice Initial fee rate for flash loans issued by this pool\r\n    uint256 public flashLoanFeeRate;\r\n\r\n    /// @notice Constructs the TuliaFlashPool lending pool\r\n    /// @param _asset The ERC20 token asset used for flash loans\r\n    /// @param _permit2 The Permit2 contract utilized for permissioned token transfers\r\n    /// @param _flashLoanFeeRate The initial fee rate for flash loans issued by this pool\r\n    constructor(\r\n        IERC20 _asset, \r\n        IPermit2 _permit2, \r\n        uint256 _flashLoanFeeRate\r\n    ) {\r\n        asset = _asset;\r\n        permit2 = _permit2;\r\n        flashLoanFeeRate = _flashLoanFeeRate;\r\n    }\r\n\r\n    /// @notice Returns the maximum loanable amount of the asset\r\n    /// @param token The ERC20 token address for which the max loan amount is queried\r\n    /// @return The maximum amount available for a flash loan\r\n    function maxFlashLoan(address token) public view override returns (uint256) {\r\n        return token == address(asset) ? asset.balanceOf(address(this)) : 0;\r\n    }\r\n\r\n    /// @notice Calculates the flash loan fee for a given loan amount\r\n    /// @param token The ERC20 token for which the fee is calculated\r\n    /// @param amount The amount of the loan\r\n    /// @return The calculated fee amount\r\n    function flashFee(address token, uint256 amount) public view override returns (uint256) {\r\n        require(token == address(asset), \"Unsupported token\");\r\n        uint256 userFee = (amount * flashLoanFeeRate) / 10000;\r\n        return userFee;\r\n    }\r\n\r\n    /// @notice Initiates a flash loan transaction\r\n    /// @param receiver The borrower contract that must implement the IERC3156FlashBorrower interface\r\n    /// @param token The ERC20 token to be borrowed\r\n    /// @param amount The amount of tokens to borrow\r\n    /// @param data Arbitrary data passed to the borrower's `onFlashLoan` method\r\n    /// @return true if the flash loan is paid back successfully within the same transaction\r\n    function flashLoan(\r\n        IERC3156FlashBorrower receiver,\r\n        address token,\r\n        uint256 amount,\r\n        bytes calldata data\r\n    ) external override nonReentrant returns (bool) {\r\n        return _executeFlashLoan(receiver, token, amount, data);\r\n    }\r\n\r\n    /// @dev Internal function to execute a flash loan transaction\r\n    /// Handles the lifecycle of a flash loan including fee calculation, asset transfer, and repayment check\r\n    /// @param receiver The borrower contract\r\n    /// @param token The ERC20 token for the loan\r\n    /// @param amount The loan amount\r\n    /// @param data Data payload for the borrower\r\n    /// @return true if the transaction is successful\r\n    function _executeFlashLoan(\r\n        IERC3156FlashBorrower receiver,\r\n        address token,\r\n        uint256 amount,\r\n        bytes calldata data\r\n    ) internal returns (bool) {\r\n        require(token == address(asset), \"Unsupported token\");\r\n\r\n        uint256 totalFee = flashFee(token, amount);\r\n        uint256 balanceBefore = asset.balanceOf(address(this));\r\n\r\n        asset.transfer(address(receiver), amount);\r\n\r\n        require(\r\n            receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) == keccak256(\"ERC3156FlashBorrower.onFlashLoan\"),\r\n            \"Flash loan failed\"\r\n        );\r\n\r\n        uint256 amountOwed = amount + totalFee;\r\n        asset.transferFrom(address(receiver), address(this), amountOwed);\r\n\r\n        require(asset.balanceOf(address(this)) >= balanceBefore, \"Flash loan repayment failed\");\r\n        rewardManager.deregisterPool(address(this));\r\n        return true;\r\n    }\r\n\r\n}\r\n"
			},
			"contracts/contracts/interfaces/IRewardManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ninterface IRewardManager {\r\n    /// @notice Registers a pool to be eligible for rewards, initializing its reward token.\r\n    /// @param pool The address of the pool to register.\r\n    /// @param rewardToken The ERC20 address for the reward token.\r\n    function registerPool(address pool, address rewardToken, bool isFlashPool) external;\r\n\r\n    /// @notice Accrues rewards for a specific pool.\r\n    /// @param pool The address of the pool.\r\n    function accrueRewards(address pool) external;\r\n\r\n    /// @notice Claims rewards for either the lender or borrower.\r\n    /// @param pool The address of the pool.\r\n    /// @param isLender True if the lender is claiming, false if the borrower.\r\n    function claimRewards(address pool, bool isLender) external;\r\n\r\n    /// @notice Deregisters a pool.\r\n    /// @param pool The address of the pool to deregister.\r\n    function deregisterPool(address pool) external;\r\n}\r\n"
			},
			"contracts/contracts/interfaces/IPermit2.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {ISignatureTransfer} from \"./ISignatureTransfer.sol\";\nimport {IAllowanceTransfer} from \"./IAllowanceTransfer.sol\";\n\n/// @notice Permit2 handles signature-based transfers in SignatureTransfer and allowance-based transfers in AllowanceTransfer.\n/// @dev Users must approve Permit2 before calling any of the transfer functions.\ninterface IPermit2 is ISignatureTransfer, IAllowanceTransfer {\n// IPermit2 unifies the two interfaces so users have maximal flexibility with their approval.\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC3156FlashBorrower.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC3156 FlashBorrower, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n */\ninterface IERC3156FlashBorrower {\n    /**\n     * @dev Receive a flash loan.\n     * @param initiator The initiator of the loan.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @param fee The additional amount of tokens to repay.\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\n     * @return The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\"\n     */\n    function onFlashLoan(\n        address initiator,\n        address token,\n        uint256 amount,\n        uint256 fee,\n        bytes calldata data\n    ) external returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC3156FlashLender.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC3156FlashBorrower} from \"./IERC3156FlashBorrower.sol\";\n\n/**\n * @dev Interface of the ERC3156 FlashLender, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n */\ninterface IERC3156FlashLender {\n    /**\n     * @dev The amount of currency available to be lended.\n     * @param token The loan currency.\n     * @return The amount of `token` that can be borrowed.\n     */\n    function maxFlashLoan(address token) external view returns (uint256);\n\n    /**\n     * @dev The fee to be charged for a given loan.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @return The amount of `token` to be charged for the loan, on top of the returned principal.\n     */\n    function flashFee(address token, uint256 amount) external view returns (uint256);\n\n    /**\n     * @dev Initiate a flash loan.\n     * @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\n     */\n    function flashLoan(\n        IERC3156FlashBorrower receiver,\n        address token,\n        uint256 amount,\n        bytes calldata data\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"contracts/contracts/interfaces/IAllowanceTransfer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IEIP712} from \"./IEIP712.sol\";\n\n/// @title AllowanceTransfer\n/// @notice Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts\n/// @dev Requires user's token approval on the Permit2 contract\ninterface IAllowanceTransfer is IEIP712 {\n    /// @notice Thrown when an allowance on a token has expired.\n    /// @param deadline The timestamp at which the allowed amount is no longer valid\n    error AllowanceExpired(uint256 deadline);\n\n    /// @notice Thrown when an allowance on a token has been depleted.\n    /// @param amount The maximum amount allowed\n    error InsufficientAllowance(uint256 amount);\n\n    /// @notice Thrown when too many nonces are invalidated.\n    error ExcessiveInvalidation();\n\n    /// @notice Emits an event when the owner successfully invalidates an ordered nonce.\n    event NonceInvalidation(\n        address indexed owner, address indexed token, address indexed spender, uint48 newNonce, uint48 oldNonce\n    );\n\n    /// @notice Emits an event when the owner successfully sets permissions on a token for the spender.\n    event Approval(\n        address indexed owner, address indexed token, address indexed spender, uint160 amount, uint48 expiration\n    );\n\n    /// @notice Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender.\n    event Permit(\n        address indexed owner,\n        address indexed token,\n        address indexed spender,\n        uint160 amount,\n        uint48 expiration,\n        uint48 nonce\n    );\n\n    /// @notice Emits an event when the owner sets the allowance back to 0 with the lockdown function.\n    event Lockdown(address indexed owner, address token, address spender);\n\n    /// @notice The permit data for a token\n    struct PermitDetails {\n        // ERC20 token address\n        address token;\n        // the maximum amount allowed to spend\n        uint160 amount;\n        // timestamp at which a spender's token allowances become invalid\n        uint48 expiration;\n        // an incrementing value indexed per owner,token,and spender for each signature\n        uint48 nonce;\n    }\n\n    /// @notice The permit message signed for a single token allowance\n    struct PermitSingle {\n        // the permit data for a single token alownce\n        PermitDetails details;\n        // address permissioned on the allowed tokens\n        address spender;\n        // deadline on the permit signature\n        uint256 sigDeadline;\n    }\n\n    /// @notice The permit message signed for multiple token allowances\n    struct PermitBatch {\n        // the permit data for multiple token allowances\n        PermitDetails[] details;\n        // address permissioned on the allowed tokens\n        address spender;\n        // deadline on the permit signature\n        uint256 sigDeadline;\n    }\n\n    /// @notice The saved permissions\n    /// @dev This info is saved per owner, per token, per spender and all signed over in the permit message\n    /// @dev Setting amount to type(uint160).max sets an unlimited approval\n    struct PackedAllowance {\n        // amount allowed\n        uint160 amount;\n        // permission expiry\n        uint48 expiration;\n        // an incrementing value indexed per owner,token,and spender for each signature\n        uint48 nonce;\n    }\n\n    /// @notice A token spender pair.\n    struct TokenSpenderPair {\n        // the token the spender is approved\n        address token;\n        // the spender address\n        address spender;\n    }\n\n    /// @notice Details for a token transfer.\n    struct AllowanceTransferDetails {\n        // the owner of the token\n        address from;\n        // the recipient of the token\n        address to;\n        // the amount of the token\n        uint160 amount;\n        // the token to be transferred\n        address token;\n    }\n\n    /// @notice A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.\n    /// @notice The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\n    /// @dev The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals.\n    function allowance(address user, address token, address spender)\n        external\n        view\n        returns (uint160 amount, uint48 expiration, uint48 nonce);\n\n    /// @notice Approves the spender to use up to amount of the specified token up until the expiration\n    /// @param token The token to approve\n    /// @param spender The spender address to approve\n    /// @param amount The approved amount of the token\n    /// @param expiration The timestamp at which the approval is no longer valid\n    /// @dev The packed allowance also holds a nonce, which will stay unchanged in approve\n    /// @dev Setting amount to type(uint160).max sets an unlimited approval\n    function approve(address token, address spender, uint160 amount, uint48 expiration) external;\n\n    /// @notice Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\n    /// @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n    /// @param owner The owner of the tokens being approved\n    /// @param permitSingle Data signed over by the owner specifying the terms of approval\n    /// @param signature The owner's signature over the permit data\n    function permit(address owner, PermitSingle memory permitSingle, bytes calldata signature) external;\n\n    /// @notice Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\n    /// @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n    /// @param owner The owner of the tokens being approved\n    /// @param permitBatch Data signed over by the owner specifying the terms of approval\n    /// @param signature The owner's signature over the permit data\n    function permit(address owner, PermitBatch memory permitBatch, bytes calldata signature) external;\n\n    /// @notice Transfer approved tokens from one address to another\n    /// @param from The address to transfer from\n    /// @param to The address of the recipient\n    /// @param amount The amount of the token to transfer\n    /// @param token The token address to transfer\n    /// @dev Requires the from address to have approved at least the desired amount\n    /// of tokens to msg.sender.\n    function transferFrom(address from, address to, uint160 amount, address token) external;\n\n    /// @notice Transfer approved tokens in a batch\n    /// @param transferDetails Array of owners, recipients, amounts, and tokens for the transfers\n    /// @dev Requires the from addresses to have approved at least the desired amount\n    /// of tokens to msg.sender.\n    function transferFrom(AllowanceTransferDetails[] calldata transferDetails) external;\n\n    /// @notice Enables performing a \"lockdown\" of the sender's Permit2 identity\n    /// by batch revoking approvals\n    /// @param approvals Array of approvals to revoke.\n    function lockdown(TokenSpenderPair[] calldata approvals) external;\n\n    /// @notice Invalidate nonces for a given (token, spender) pair\n    /// @param token The token to invalidate nonces for\n    /// @param spender The spender to invalidate nonces for\n    /// @param newNonce The new nonce to set. Invalidates all nonces less than it.\n    /// @dev Can't invalidate more than 2**16 nonces per transaction.\n    function invalidateNonces(address token, address spender, uint48 newNonce) external;\n}\n"
			},
			"contracts/contracts/interfaces/ISignatureTransfer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {IEIP712} from \"./IEIP712.sol\";\n\n/// @title SignatureTransfer\n/// @notice Handles ERC20 token transfers through signature based actions\n/// @dev Requires user's token approval on the Permit2 contract\ninterface ISignatureTransfer is IEIP712 {\n    /// @notice Thrown when the requested amount for a transfer is larger than the permissioned amount\n    /// @param maxAmount The maximum amount a spender can request to transfer\n    error InvalidAmount(uint256 maxAmount);\n\n    /// @notice Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred\n    /// @dev If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred\n    error LengthMismatch();\n\n    /// @notice Emits an event when the owner successfully invalidates an unordered nonce.\n    event UnorderedNonceInvalidation(address indexed owner, uint256 word, uint256 mask);\n\n    /// @notice The token and amount details for a transfer signed in the permit transfer signature\n    struct TokenPermissions {\n        // ERC20 token address\n        address token;\n        // the maximum amount that can be spent\n        uint256 amount;\n    }\n\n    /// @notice The signed permit message for a single token transfer\n    struct PermitTransferFrom {\n        TokenPermissions permitted;\n        // a unique value for every token owner's signature to prevent signature replays\n        uint256 nonce;\n        // deadline on the permit signature\n        uint256 deadline;\n    }\n\n    /// @notice Specifies the recipient address and amount for batched transfers.\n    /// @dev Recipients and amounts correspond to the index of the signed token permissions array.\n    /// @dev Reverts if the requested amount is greater than the permitted signed amount.\n    struct SignatureTransferDetails {\n        // recipient address\n        address to;\n        // spender requested amount\n        uint256 requestedAmount;\n    }\n\n    /// @notice Used to reconstruct the signed permit message for multiple token transfers\n    /// @dev Do not need to pass in spender address as it is required that it is msg.sender\n    /// @dev Note that a user still signs over a spender address\n    struct PermitBatchTransferFrom {\n        // the tokens and corresponding amounts permitted for a transfer\n        TokenPermissions[] permitted;\n        // a unique value for every token owner's signature to prevent signature replays\n        uint256 nonce;\n        // deadline on the permit signature\n        uint256 deadline;\n    }\n\n    /// @notice A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection\n    /// @dev Uses unordered nonces so that permit messages do not need to be spent in a certain order\n    /// @dev The mapping is indexed first by the token owner, then by an index specified in the nonce\n    /// @dev It returns a uint256 bitmap\n    /// @dev The index, or wordPosition is capped at type(uint248).max\n    function nonceBitmap(address, uint256) external view returns (uint256);\n\n    /// @notice Transfers a token using a signed permit message\n    /// @dev Reverts if the requested amount is greater than the permitted signed amount\n    /// @param permit The permit data signed over by the owner\n    /// @param owner The owner of the tokens to transfer\n    /// @param transferDetails The spender's requested transfer details for the permitted token\n    /// @param signature The signature to verify\n    function permitTransferFrom(\n        PermitTransferFrom memory permit,\n        SignatureTransferDetails calldata transferDetails,\n        address owner,\n        bytes calldata signature\n    ) external;\n\n    /// @notice Transfers a token using a signed permit message\n    /// @notice Includes extra data provided by the caller to verify signature over\n    /// @dev The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\n    /// @dev Reverts if the requested amount is greater than the permitted signed amount\n    /// @param permit The permit data signed over by the owner\n    /// @param owner The owner of the tokens to transfer\n    /// @param transferDetails The spender's requested transfer details for the permitted token\n    /// @param witness Extra data to include when checking the user signature\n    /// @param witnessTypeString The EIP-712 type definition for remaining string stub of the typehash\n    /// @param signature The signature to verify\n    function permitWitnessTransferFrom(\n        PermitTransferFrom memory permit,\n        SignatureTransferDetails calldata transferDetails,\n        address owner,\n        bytes32 witness,\n        string calldata witnessTypeString,\n        bytes calldata signature\n    ) external;\n\n    /// @notice Transfers multiple tokens using a signed permit message\n    /// @param permit The permit data signed over by the owner\n    /// @param owner The owner of the tokens to transfer\n    /// @param transferDetails Specifies the recipient and requested amount for the token transfer\n    /// @param signature The signature to verify\n    function permitTransferFrom(\n        PermitBatchTransferFrom memory permit,\n        SignatureTransferDetails[] calldata transferDetails,\n        address owner,\n        bytes calldata signature\n    ) external;\n\n    /// @notice Transfers multiple tokens using a signed permit message\n    /// @dev The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\n    /// @notice Includes extra data provided by the caller to verify signature over\n    /// @param permit The permit data signed over by the owner\n    /// @param owner The owner of the tokens to transfer\n    /// @param transferDetails Specifies the recipient and requested amount for the token transfer\n    /// @param witness Extra data to include when checking the user signature\n    /// @param witnessTypeString The EIP-712 type definition for remaining string stub of the typehash\n    /// @param signature The signature to verify\n    function permitWitnessTransferFrom(\n        PermitBatchTransferFrom memory permit,\n        SignatureTransferDetails[] calldata transferDetails,\n        address owner,\n        bytes32 witness,\n        string calldata witnessTypeString,\n        bytes calldata signature\n    ) external;\n\n    /// @notice Invalidates the bits specified in mask for the bitmap at the word position\n    /// @dev The wordPos is maxed at type(uint248).max\n    /// @param wordPos A number to index the nonceBitmap at\n    /// @param mask A bitmap masked against msg.sender's current bitmap at the word position\n    function invalidateUnorderedNonces(uint256 wordPos, uint256 mask) external;\n}\n"
			},
			"contracts/contracts/interfaces/IEIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IEIP712 {\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol": {
				"IERC3156FlashBorrower": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initiator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onFlashLoan",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC3156 FlashBorrower, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].",
						"kind": "dev",
						"methods": {
							"onFlashLoan(address,address,uint256,uint256,bytes)": {
								"details": "Receive a flash loan.",
								"params": {
									"amount": "The amount of tokens lent.",
									"data": "Arbitrary data structure, intended to contain user-defined parameters.",
									"fee": "The additional amount of tokens to repay.",
									"initiator": "The initiator of the loan.",
									"token": "The loan currency."
								},
								"returns": {
									"_0": "The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\""
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onFlashLoan(address,address,uint256,uint256,bytes)": "23e30c8b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC3156 FlashBorrower, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\",\"kind\":\"dev\",\"methods\":{\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"details\":\"Receive a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"fee\":\"The additional amount of tokens to repay.\",\"initiator\":\"The initiator of the loan.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The keccak256 hash of \\\"ERC3156FlashBorrower.onFlashLoan\\\"\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":\"IERC3156FlashBorrower\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475\",\"dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol": {
				"IERC3156FlashLender": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "flashFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC3156FlashBorrower",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flashLoan",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "maxFlashLoan",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC3156 FlashLender, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].",
						"kind": "dev",
						"methods": {
							"flashFee(address,uint256)": {
								"details": "The fee to be charged for a given loan.",
								"params": {
									"amount": "The amount of tokens lent.",
									"token": "The loan currency."
								},
								"returns": {
									"_0": "The amount of `token` to be charged for the loan, on top of the returned principal."
								}
							},
							"flashLoan(address,address,uint256,bytes)": {
								"details": "Initiate a flash loan.",
								"params": {
									"amount": "The amount of tokens lent.",
									"data": "Arbitrary data structure, intended to contain user-defined parameters.",
									"receiver": "The receiver of the tokens in the loan, and the receiver of the callback.",
									"token": "The loan currency."
								}
							},
							"maxFlashLoan(address)": {
								"details": "The amount of currency available to be lended.",
								"params": {
									"token": "The loan currency."
								},
								"returns": {
									"_0": "The amount of `token` that can be borrowed."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"flashFee(address,uint256)": "d9d98ce4",
							"flashLoan(address,address,uint256,bytes)": "5cffe9de",
							"maxFlashLoan(address)": "613255ab"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC3156 FlashLender, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\",\"kind\":\"dev\",\"methods\":{\"flashFee(address,uint256)\":{\"details\":\"The fee to be charged for a given loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` to be charged for the loan, on top of the returned principal.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Initiate a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"receiver\":\"The receiver of the tokens in the loan, and the receiver of the callback.\",\"token\":\"The loan currency.\"}},\"maxFlashLoan(address)\":{\"details\":\"The amount of currency available to be lended.\",\"params\":{\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` that can be borrowed.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":\"IERC3156FlashLender\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475\",\"dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x95d9eb59f21e885406d0e28b0510f9e1a0e7b4abe6636b5c966682927c65cfdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1cbff4d620ab51abe0c4ede9e4395bae53bcc3a7edd74e0eb08d7bdef155306\",\"dweb:/ipfs/QmQcnBK28GDH4S5uXWqAcdRY1KcusXH4CxAqp87rYLir6n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 69,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/interfaces/IAllowanceTransfer.sol": {
				"IAllowanceTransfer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "AllowanceExpired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExcessiveInvalidation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "Lockdown",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "newNonce",
									"type": "uint48"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "oldNonce",
									"type": "uint48"
								}
							],
							"name": "NonceInvalidation",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "nonce",
									"type": "uint48"
								}
							],
							"name": "Permit",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								},
								{
									"internalType": "uint48",
									"name": "nonce",
									"type": "uint48"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint48",
									"name": "newNonce",
									"type": "uint48"
								}
							],
							"name": "invalidateNonces",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										}
									],
									"internalType": "struct IAllowanceTransfer.TokenSpenderPair[]",
									"name": "approvals",
									"type": "tuple[]"
								}
							],
							"name": "lockdown",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint160",
													"name": "amount",
													"type": "uint160"
												},
												{
													"internalType": "uint48",
													"name": "expiration",
													"type": "uint48"
												},
												{
													"internalType": "uint48",
													"name": "nonce",
													"type": "uint48"
												}
											],
											"internalType": "struct IAllowanceTransfer.PermitDetails[]",
											"name": "details",
											"type": "tuple[]"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "sigDeadline",
											"type": "uint256"
										}
									],
									"internalType": "struct IAllowanceTransfer.PermitBatch",
									"name": "permitBatch",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint160",
													"name": "amount",
													"type": "uint160"
												},
												{
													"internalType": "uint48",
													"name": "expiration",
													"type": "uint48"
												},
												{
													"internalType": "uint48",
													"name": "nonce",
													"type": "uint48"
												}
											],
											"internalType": "struct IAllowanceTransfer.PermitDetails",
											"name": "details",
											"type": "tuple"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "sigDeadline",
											"type": "uint256"
										}
									],
									"internalType": "struct IAllowanceTransfer.PermitSingle",
									"name": "permitSingle",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "from",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint160",
											"name": "amount",
											"type": "uint160"
										},
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										}
									],
									"internalType": "struct IAllowanceTransfer.AllowanceTransferDetails[]",
									"name": "transferDetails",
									"type": "tuple[]"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Requires user's token approval on the Permit2 contract",
						"errors": {
							"AllowanceExpired(uint256)": [
								{
									"params": {
										"deadline": "The timestamp at which the allowed amount is no longer valid"
									}
								}
							],
							"InsufficientAllowance(uint256)": [
								{
									"params": {
										"amount": "The maximum amount allowed"
									}
								}
							]
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address,address)": {
								"details": "The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals."
							},
							"approve(address,address,uint160,uint48)": {
								"details": "The packed allowance also holds a nonce, which will stay unchanged in approveSetting amount to type(uint160).max sets an unlimited approval",
								"params": {
									"amount": "The approved amount of the token",
									"expiration": "The timestamp at which the approval is no longer valid",
									"spender": "The spender address to approve",
									"token": "The token to approve"
								}
							},
							"invalidateNonces(address,address,uint48)": {
								"details": "Can't invalidate more than 2**16 nonces per transaction.",
								"params": {
									"newNonce": "The new nonce to set. Invalidates all nonces less than it.",
									"spender": "The spender to invalidate nonces for",
									"token": "The token to invalidate nonces for"
								}
							},
							"lockdown((address,address)[])": {
								"params": {
									"approvals": "Array of approvals to revoke."
								}
							},
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": {
								"details": "May fail if the owner's nonce was invalidated in-flight by invalidateNonce",
								"params": {
									"owner": "The owner of the tokens being approved",
									"permitSingle": "Data signed over by the owner specifying the terms of approval",
									"signature": "The owner's signature over the permit data"
								}
							},
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": {
								"details": "May fail if the owner's nonce was invalidated in-flight by invalidateNonce",
								"params": {
									"owner": "The owner of the tokens being approved",
									"permitBatch": "Data signed over by the owner specifying the terms of approval",
									"signature": "The owner's signature over the permit data"
								}
							},
							"transferFrom((address,address,uint160,address)[])": {
								"details": "Requires the from addresses to have approved at least the desired amount of tokens to msg.sender.",
								"params": {
									"transferDetails": "Array of owners, recipients, amounts, and tokens for the transfers"
								}
							},
							"transferFrom(address,address,uint160,address)": {
								"details": "Requires the from address to have approved at least the desired amount of tokens to msg.sender.",
								"params": {
									"amount": "The amount of the token to transfer",
									"from": "The address to transfer from",
									"to": "The address of the recipient",
									"token": "The token address to transfer"
								}
							}
						},
						"title": "AllowanceTransfer",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address,address)": "927da105",
							"approve(address,address,uint160,uint48)": "87517c45",
							"invalidateNonces(address,address,uint48)": "65d9723c",
							"lockdown((address,address)[])": "cc53287f",
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": "2b67b570",
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": "2a2d80d1",
							"transferFrom((address,address,uint160,address)[])": "0d58b1db",
							"transferFrom(address,address,uint160,address)": "36c78516"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"AllowanceExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExcessiveInvalidation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"Lockdown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"oldNonce\",\"type\":\"uint48\"}],\"name\":\"NonceInvalidation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"name\":\"Permit\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"}],\"name\":\"invalidateNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.TokenSpenderPair[]\",\"name\":\"approvals\",\"type\":\"tuple[]\"}],\"name\":\"lockdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails[]\",\"name\":\"details\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitBatch\",\"name\":\"permitBatch\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails\",\"name\":\"details\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitSingle\",\"name\":\"permitSingle\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.AllowanceTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Requires user's token approval on the Permit2 contract\",\"errors\":{\"AllowanceExpired(uint256)\":[{\"params\":{\"deadline\":\"The timestamp at which the allowed amount is no longer valid\"}}],\"InsufficientAllowance(uint256)\":[{\"params\":{\"amount\":\"The maximum amount allowed\"}}]},\"kind\":\"dev\",\"methods\":{\"allowance(address,address,address)\":{\"details\":\"The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals.\"},\"approve(address,address,uint160,uint48)\":{\"details\":\"The packed allowance also holds a nonce, which will stay unchanged in approveSetting amount to type(uint160).max sets an unlimited approval\",\"params\":{\"amount\":\"The approved amount of the token\",\"expiration\":\"The timestamp at which the approval is no longer valid\",\"spender\":\"The spender address to approve\",\"token\":\"The token to approve\"}},\"invalidateNonces(address,address,uint48)\":{\"details\":\"Can't invalidate more than 2**16 nonces per transaction.\",\"params\":{\"newNonce\":\"The new nonce to set. Invalidates all nonces less than it.\",\"spender\":\"The spender to invalidate nonces for\",\"token\":\"The token to invalidate nonces for\"}},\"lockdown((address,address)[])\":{\"params\":{\"approvals\":\"Array of approvals to revoke.\"}},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitSingle\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitBatch\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"transferFrom((address,address,uint160,address)[])\":{\"details\":\"Requires the from addresses to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"transferDetails\":\"Array of owners, recipients, amounts, and tokens for the transfers\"}},\"transferFrom(address,address,uint160,address)\":{\"details\":\"Requires the from address to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"amount\":\"The amount of the token to transfer\",\"from\":\"The address to transfer from\",\"to\":\"The address of the recipient\",\"token\":\"The token address to transfer\"}}},\"title\":\"AllowanceTransfer\",\"version\":1},\"userdoc\":{\"errors\":{\"AllowanceExpired(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has expired.\"}],\"ExcessiveInvalidation()\":[{\"notice\":\"Thrown when too many nonces are invalidated.\"}],\"InsufficientAllowance(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has been depleted.\"}]},\"events\":{\"Approval(address,address,address,uint160,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions on a token for the spender.\"},\"Lockdown(address,address,address)\":{\"notice\":\"Emits an event when the owner sets the allowance back to 0 with the lockdown function.\"},\"NonceInvalidation(address,address,address,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully invalidates an ordered nonce.\"},\"Permit(address,address,address,uint160,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address,address)\":{\"notice\":\"A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\"},\"approve(address,address,uint160,uint48)\":{\"notice\":\"Approves the spender to use up to amount of the specified token up until the expiration\"},\"invalidateNonces(address,address,uint48)\":{\"notice\":\"Invalidate nonces for a given (token, spender) pair\"},\"lockdown((address,address)[])\":{\"notice\":\"Enables performing a \\\"lockdown\\\" of the sender's Permit2 identity by batch revoking approvals\"},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"notice\":\"Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\"},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"notice\":\"Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\"},\"transferFrom((address,address,uint160,address)[])\":{\"notice\":\"Transfer approved tokens in a batch\"},\"transferFrom(address,address,uint160,address)\":{\"notice\":\"Transfer approved tokens from one address to another\"}},\"notice\":\"Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/IAllowanceTransfer.sol\":\"IAllowanceTransfer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0\",\"dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN\"]},\"contracts/contracts/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"AllowanceExpired(uint256)": [
								{
									"notice": "Thrown when an allowance on a token has expired."
								}
							],
							"ExcessiveInvalidation()": [
								{
									"notice": "Thrown when too many nonces are invalidated."
								}
							],
							"InsufficientAllowance(uint256)": [
								{
									"notice": "Thrown when an allowance on a token has been depleted."
								}
							]
						},
						"events": {
							"Approval(address,address,address,uint160,uint48)": {
								"notice": "Emits an event when the owner successfully sets permissions on a token for the spender."
							},
							"Lockdown(address,address,address)": {
								"notice": "Emits an event when the owner sets the allowance back to 0 with the lockdown function."
							},
							"NonceInvalidation(address,address,address,uint48,uint48)": {
								"notice": "Emits an event when the owner successfully invalidates an ordered nonce."
							},
							"Permit(address,address,address,uint160,uint48,uint48)": {
								"notice": "Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender."
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address,address)": {
								"notice": "A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]"
							},
							"approve(address,address,uint160,uint48)": {
								"notice": "Approves the spender to use up to amount of the specified token up until the expiration"
							},
							"invalidateNonces(address,address,uint48)": {
								"notice": "Invalidate nonces for a given (token, spender) pair"
							},
							"lockdown((address,address)[])": {
								"notice": "Enables performing a \"lockdown\" of the sender's Permit2 identity by batch revoking approvals"
							},
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": {
								"notice": "Permit a spender to a given amount of the owners token via the owner's EIP-712 signature"
							},
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": {
								"notice": "Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature"
							},
							"transferFrom((address,address,uint160,address)[])": {
								"notice": "Transfer approved tokens in a batch"
							},
							"transferFrom(address,address,uint160,address)": {
								"notice": "Transfer approved tokens from one address to another"
							}
						},
						"notice": "Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts",
						"version": 1
					}
				}
			},
			"contracts/contracts/interfaces/IEIP712.sol": {
				"IEIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/IEIP712.sol\":\"IEIP712\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/interfaces/IPermit2.sol": {
				"IPermit2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "AllowanceExpired",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExcessiveInvalidation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "maxAmount",
									"type": "uint256"
								}
							],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "LengthMismatch",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "Lockdown",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "newNonce",
									"type": "uint48"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "oldNonce",
									"type": "uint48"
								}
							],
							"name": "NonceInvalidation",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								},
								{
									"indexed": false,
									"internalType": "uint48",
									"name": "nonce",
									"type": "uint48"
								}
							],
							"name": "Permit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "word",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "mask",
									"type": "uint256"
								}
							],
							"name": "UnorderedNonceInvalidation",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								},
								{
									"internalType": "uint48",
									"name": "nonce",
									"type": "uint48"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"internalType": "uint48",
									"name": "expiration",
									"type": "uint48"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint48",
									"name": "newNonce",
									"type": "uint48"
								}
							],
							"name": "invalidateNonces",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "wordPos",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "mask",
									"type": "uint256"
								}
							],
							"name": "invalidateUnorderedNonces",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										}
									],
									"internalType": "struct IAllowanceTransfer.TokenSpenderPair[]",
									"name": "approvals",
									"type": "tuple[]"
								}
							],
							"name": "lockdown",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "nonceBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint160",
													"name": "amount",
													"type": "uint160"
												},
												{
													"internalType": "uint48",
													"name": "expiration",
													"type": "uint48"
												},
												{
													"internalType": "uint48",
													"name": "nonce",
													"type": "uint48"
												}
											],
											"internalType": "struct IAllowanceTransfer.PermitDetails[]",
											"name": "details",
											"type": "tuple[]"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "sigDeadline",
											"type": "uint256"
										}
									],
									"internalType": "struct IAllowanceTransfer.PermitBatch",
									"name": "permitBatch",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint160",
													"name": "amount",
													"type": "uint160"
												},
												{
													"internalType": "uint48",
													"name": "expiration",
													"type": "uint48"
												},
												{
													"internalType": "uint48",
													"name": "nonce",
													"type": "uint48"
												}
											],
											"internalType": "struct IAllowanceTransfer.PermitDetails",
											"name": "details",
											"type": "tuple"
										},
										{
											"internalType": "address",
											"name": "spender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "sigDeadline",
											"type": "uint256"
										}
									],
									"internalType": "struct IAllowanceTransfer.PermitSingle",
									"name": "permitSingle",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions",
											"name": "permitted",
											"type": "tuple"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails",
									"name": "transferDetails",
									"type": "tuple"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions[]",
											"name": "permitted",
											"type": "tuple[]"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitBatchTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails[]",
									"name": "transferDetails",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions",
											"name": "permitted",
											"type": "tuple"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails",
									"name": "transferDetails",
									"type": "tuple"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "witness",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "witnessTypeString",
									"type": "string"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitWitnessTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions[]",
											"name": "permitted",
											"type": "tuple[]"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitBatchTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails[]",
									"name": "transferDetails",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "witness",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "witnessTypeString",
									"type": "string"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitWitnessTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "from",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint160",
											"name": "amount",
											"type": "uint160"
										},
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										}
									],
									"internalType": "struct IAllowanceTransfer.AllowanceTransferDetails[]",
									"name": "transferDetails",
									"type": "tuple[]"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "amount",
									"type": "uint160"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Users must approve Permit2 before calling any of the transfer functions.",
						"errors": {
							"AllowanceExpired(uint256)": [
								{
									"params": {
										"deadline": "The timestamp at which the allowed amount is no longer valid"
									}
								}
							],
							"InsufficientAllowance(uint256)": [
								{
									"params": {
										"amount": "The maximum amount allowed"
									}
								}
							],
							"InvalidAmount(uint256)": [
								{
									"params": {
										"maxAmount": "The maximum amount a spender can request to transfer"
									}
								}
							],
							"LengthMismatch()": [
								{
									"details": "If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred"
								}
							]
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address,address)": {
								"details": "The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals."
							},
							"approve(address,address,uint160,uint48)": {
								"details": "The packed allowance also holds a nonce, which will stay unchanged in approveSetting amount to type(uint160).max sets an unlimited approval",
								"params": {
									"amount": "The approved amount of the token",
									"expiration": "The timestamp at which the approval is no longer valid",
									"spender": "The spender address to approve",
									"token": "The token to approve"
								}
							},
							"invalidateNonces(address,address,uint48)": {
								"details": "Can't invalidate more than 2**16 nonces per transaction.",
								"params": {
									"newNonce": "The new nonce to set. Invalidates all nonces less than it.",
									"spender": "The spender to invalidate nonces for",
									"token": "The token to invalidate nonces for"
								}
							},
							"invalidateUnorderedNonces(uint256,uint256)": {
								"details": "The wordPos is maxed at type(uint248).max",
								"params": {
									"mask": "A bitmap masked against msg.sender's current bitmap at the word position",
									"wordPos": "A number to index the nonceBitmap at"
								}
							},
							"lockdown((address,address)[])": {
								"params": {
									"approvals": "Array of approvals to revoke."
								}
							},
							"nonceBitmap(address,uint256)": {
								"details": "Uses unordered nonces so that permit messages do not need to be spent in a certain orderThe mapping is indexed first by the token owner, then by an index specified in the nonceIt returns a uint256 bitmapThe index, or wordPosition is capped at type(uint248).max"
							},
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": {
								"details": "May fail if the owner's nonce was invalidated in-flight by invalidateNonce",
								"params": {
									"owner": "The owner of the tokens being approved",
									"permitSingle": "Data signed over by the owner specifying the terms of approval",
									"signature": "The owner's signature over the permit data"
								}
							},
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": {
								"details": "May fail if the owner's nonce was invalidated in-flight by invalidateNonce",
								"params": {
									"owner": "The owner of the tokens being approved",
									"permitBatch": "Data signed over by the owner specifying the terms of approval",
									"signature": "The owner's signature over the permit data"
								}
							},
							"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)": {
								"details": "Reverts if the requested amount is greater than the permitted signed amount",
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "The spender's requested transfer details for the permitted token"
								}
							},
							"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)": {
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "Specifies the recipient and requested amount for the token transfer"
								}
							},
							"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)": {
								"details": "The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definitionReverts if the requested amount is greater than the permitted signed amount",
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "The spender's requested transfer details for the permitted token",
									"witness": "Extra data to include when checking the user signature",
									"witnessTypeString": "The EIP-712 type definition for remaining string stub of the typehash"
								}
							},
							"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)": {
								"details": "The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition",
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "Specifies the recipient and requested amount for the token transfer",
									"witness": "Extra data to include when checking the user signature",
									"witnessTypeString": "The EIP-712 type definition for remaining string stub of the typehash"
								}
							},
							"transferFrom((address,address,uint160,address)[])": {
								"details": "Requires the from addresses to have approved at least the desired amount of tokens to msg.sender.",
								"params": {
									"transferDetails": "Array of owners, recipients, amounts, and tokens for the transfers"
								}
							},
							"transferFrom(address,address,uint160,address)": {
								"details": "Requires the from address to have approved at least the desired amount of tokens to msg.sender.",
								"params": {
									"amount": "The amount of the token to transfer",
									"from": "The address to transfer from",
									"to": "The address of the recipient",
									"token": "The token address to transfer"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address,address)": "927da105",
							"approve(address,address,uint160,uint48)": "87517c45",
							"invalidateNonces(address,address,uint48)": "65d9723c",
							"invalidateUnorderedNonces(uint256,uint256)": "3ff9dcb1",
							"lockdown((address,address)[])": "cc53287f",
							"nonceBitmap(address,uint256)": "4fe02b44",
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": "2b67b570",
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": "2a2d80d1",
							"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)": "30f28b7a",
							"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)": "edd9444b",
							"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)": "137c29fe",
							"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)": "fe8ec1a7",
							"transferFrom((address,address,uint160,address)[])": "0d58b1db",
							"transferFrom(address,address,uint160,address)": "36c78516"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"AllowanceExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExcessiveInvalidation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"Lockdown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"oldNonce\",\"type\":\"uint48\"}],\"name\":\"NonceInvalidation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"name\":\"Permit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"word\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"UnorderedNonceInvalidation\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"newNonce\",\"type\":\"uint48\"}],\"name\":\"invalidateNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wordPos\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"invalidateUnorderedNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.TokenSpenderPair[]\",\"name\":\"approvals\",\"type\":\"tuple[]\"}],\"name\":\"lockdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nonceBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails[]\",\"name\":\"details\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitBatch\",\"name\":\"permitBatch\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"uint48\",\"name\":\"expiration\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"nonce\",\"type\":\"uint48\"}],\"internalType\":\"struct IAllowanceTransfer.PermitDetails\",\"name\":\"details\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sigDeadline\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowanceTransfer.PermitSingle\",\"name\":\"permitSingle\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails\",\"name\":\"transferDetails\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitBatchTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails\",\"name\":\"transferDetails\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypeString\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitWitnessTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitBatchTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypeString\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitWitnessTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"struct IAllowanceTransfer.AllowanceTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"amount\",\"type\":\"uint160\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Users must approve Permit2 before calling any of the transfer functions.\",\"errors\":{\"AllowanceExpired(uint256)\":[{\"params\":{\"deadline\":\"The timestamp at which the allowed amount is no longer valid\"}}],\"InsufficientAllowance(uint256)\":[{\"params\":{\"amount\":\"The maximum amount allowed\"}}],\"InvalidAmount(uint256)\":[{\"params\":{\"maxAmount\":\"The maximum amount a spender can request to transfer\"}}],\"LengthMismatch()\":[{\"details\":\"If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred\"}]},\"kind\":\"dev\",\"methods\":{\"allowance(address,address,address)\":{\"details\":\"The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals.\"},\"approve(address,address,uint160,uint48)\":{\"details\":\"The packed allowance also holds a nonce, which will stay unchanged in approveSetting amount to type(uint160).max sets an unlimited approval\",\"params\":{\"amount\":\"The approved amount of the token\",\"expiration\":\"The timestamp at which the approval is no longer valid\",\"spender\":\"The spender address to approve\",\"token\":\"The token to approve\"}},\"invalidateNonces(address,address,uint48)\":{\"details\":\"Can't invalidate more than 2**16 nonces per transaction.\",\"params\":{\"newNonce\":\"The new nonce to set. Invalidates all nonces less than it.\",\"spender\":\"The spender to invalidate nonces for\",\"token\":\"The token to invalidate nonces for\"}},\"invalidateUnorderedNonces(uint256,uint256)\":{\"details\":\"The wordPos is maxed at type(uint248).max\",\"params\":{\"mask\":\"A bitmap masked against msg.sender's current bitmap at the word position\",\"wordPos\":\"A number to index the nonceBitmap at\"}},\"lockdown((address,address)[])\":{\"params\":{\"approvals\":\"Array of approvals to revoke.\"}},\"nonceBitmap(address,uint256)\":{\"details\":\"Uses unordered nonces so that permit messages do not need to be spent in a certain orderThe mapping is indexed first by the token owner, then by an index specified in the nonceIt returns a uint256 bitmapThe index, or wordPosition is capped at type(uint248).max\"},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitSingle\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"details\":\"May fail if the owner's nonce was invalidated in-flight by invalidateNonce\",\"params\":{\"owner\":\"The owner of the tokens being approved\",\"permitBatch\":\"Data signed over by the owner specifying the terms of approval\",\"signature\":\"The owner's signature over the permit data\"}},\"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)\":{\"details\":\"Reverts if the requested amount is greater than the permitted signed amount\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"The spender's requested transfer details for the permitted token\"}},\"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)\":{\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"Specifies the recipient and requested amount for the token transfer\"}},\"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)\":{\"details\":\"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definitionReverts if the requested amount is greater than the permitted signed amount\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"The spender's requested transfer details for the permitted token\",\"witness\":\"Extra data to include when checking the user signature\",\"witnessTypeString\":\"The EIP-712 type definition for remaining string stub of the typehash\"}},\"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)\":{\"details\":\"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"Specifies the recipient and requested amount for the token transfer\",\"witness\":\"Extra data to include when checking the user signature\",\"witnessTypeString\":\"The EIP-712 type definition for remaining string stub of the typehash\"}},\"transferFrom((address,address,uint160,address)[])\":{\"details\":\"Requires the from addresses to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"transferDetails\":\"Array of owners, recipients, amounts, and tokens for the transfers\"}},\"transferFrom(address,address,uint160,address)\":{\"details\":\"Requires the from address to have approved at least the desired amount of tokens to msg.sender.\",\"params\":{\"amount\":\"The amount of the token to transfer\",\"from\":\"The address to transfer from\",\"to\":\"The address of the recipient\",\"token\":\"The token address to transfer\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"AllowanceExpired(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has expired.\"}],\"ExcessiveInvalidation()\":[{\"notice\":\"Thrown when too many nonces are invalidated.\"}],\"InsufficientAllowance(uint256)\":[{\"notice\":\"Thrown when an allowance on a token has been depleted.\"}],\"InvalidAmount(uint256)\":[{\"notice\":\"Thrown when the requested amount for a transfer is larger than the permissioned amount\"}],\"LengthMismatch()\":[{\"notice\":\"Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred\"}]},\"events\":{\"Approval(address,address,address,uint160,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions on a token for the spender.\"},\"Lockdown(address,address,address)\":{\"notice\":\"Emits an event when the owner sets the allowance back to 0 with the lockdown function.\"},\"NonceInvalidation(address,address,address,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully invalidates an ordered nonce.\"},\"Permit(address,address,address,uint160,uint48,uint48)\":{\"notice\":\"Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender.\"},\"UnorderedNonceInvalidation(address,uint256,uint256)\":{\"notice\":\"Emits an event when the owner successfully invalidates an unordered nonce.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address,address)\":{\"notice\":\"A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\"},\"approve(address,address,uint160,uint48)\":{\"notice\":\"Approves the spender to use up to amount of the specified token up until the expiration\"},\"invalidateNonces(address,address,uint48)\":{\"notice\":\"Invalidate nonces for a given (token, spender) pair\"},\"invalidateUnorderedNonces(uint256,uint256)\":{\"notice\":\"Invalidates the bits specified in mask for the bitmap at the word position\"},\"lockdown((address,address)[])\":{\"notice\":\"Enables performing a \\\"lockdown\\\" of the sender's Permit2 identity by batch revoking approvals\"},\"nonceBitmap(address,uint256)\":{\"notice\":\"A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection\"},\"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\":{\"notice\":\"Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\"},\"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\":{\"notice\":\"Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\"},\"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)\":{\"notice\":\"Transfers a token using a signed permit message\"},\"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)\":{\"notice\":\"Transfers multiple tokens using a signed permit message\"},\"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)\":{\"notice\":\"Transfers a token using a signed permit messageIncludes extra data provided by the caller to verify signature over\"},\"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)\":{\"notice\":\"Transfers multiple tokens using a signed permit messageIncludes extra data provided by the caller to verify signature over\"},\"transferFrom((address,address,uint160,address)[])\":{\"notice\":\"Transfer approved tokens in a batch\"},\"transferFrom(address,address,uint160,address)\":{\"notice\":\"Transfer approved tokens from one address to another\"}},\"notice\":\"Permit2 handles signature-based transfers in SignatureTransfer and allowance-based transfers in AllowanceTransfer.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/IPermit2.sol\":\"IPermit2\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0\",\"dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN\"]},\"contracts/contracts/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"contracts/contracts/interfaces/IPermit2.sol\":{\"keccak256\":\"0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d\",\"dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96\"]},\"contracts/contracts/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x16a051e45a3f1ab341a8560aa106c483c3d0a3be4abc52225651c78939b18f93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7cda3c6ed2db1454b4a6ec1e418956d199019085d92163a038d0064615a5acb\",\"dweb:/ipfs/QmWDfZwi8jcGFBuiwHKq6iBWCZq2mA8HmkM9NNTzotMpXH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"AllowanceExpired(uint256)": [
								{
									"notice": "Thrown when an allowance on a token has expired."
								}
							],
							"ExcessiveInvalidation()": [
								{
									"notice": "Thrown when too many nonces are invalidated."
								}
							],
							"InsufficientAllowance(uint256)": [
								{
									"notice": "Thrown when an allowance on a token has been depleted."
								}
							],
							"InvalidAmount(uint256)": [
								{
									"notice": "Thrown when the requested amount for a transfer is larger than the permissioned amount"
								}
							],
							"LengthMismatch()": [
								{
									"notice": "Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred"
								}
							]
						},
						"events": {
							"Approval(address,address,address,uint160,uint48)": {
								"notice": "Emits an event when the owner successfully sets permissions on a token for the spender."
							},
							"Lockdown(address,address,address)": {
								"notice": "Emits an event when the owner sets the allowance back to 0 with the lockdown function."
							},
							"NonceInvalidation(address,address,address,uint48,uint48)": {
								"notice": "Emits an event when the owner successfully invalidates an ordered nonce."
							},
							"Permit(address,address,address,uint160,uint48,uint48)": {
								"notice": "Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender."
							},
							"UnorderedNonceInvalidation(address,uint256,uint256)": {
								"notice": "Emits an event when the owner successfully invalidates an unordered nonce."
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address,address)": {
								"notice": "A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]"
							},
							"approve(address,address,uint160,uint48)": {
								"notice": "Approves the spender to use up to amount of the specified token up until the expiration"
							},
							"invalidateNonces(address,address,uint48)": {
								"notice": "Invalidate nonces for a given (token, spender) pair"
							},
							"invalidateUnorderedNonces(uint256,uint256)": {
								"notice": "Invalidates the bits specified in mask for the bitmap at the word position"
							},
							"lockdown((address,address)[])": {
								"notice": "Enables performing a \"lockdown\" of the sender's Permit2 identity by batch revoking approvals"
							},
							"nonceBitmap(address,uint256)": {
								"notice": "A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection"
							},
							"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)": {
								"notice": "Permit a spender to a given amount of the owners token via the owner's EIP-712 signature"
							},
							"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)": {
								"notice": "Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature"
							},
							"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)": {
								"notice": "Transfers a token using a signed permit message"
							},
							"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)": {
								"notice": "Transfers multiple tokens using a signed permit message"
							},
							"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)": {
								"notice": "Transfers a token using a signed permit messageIncludes extra data provided by the caller to verify signature over"
							},
							"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)": {
								"notice": "Transfers multiple tokens using a signed permit messageIncludes extra data provided by the caller to verify signature over"
							},
							"transferFrom((address,address,uint160,address)[])": {
								"notice": "Transfer approved tokens in a batch"
							},
							"transferFrom(address,address,uint160,address)": {
								"notice": "Transfer approved tokens from one address to another"
							}
						},
						"notice": "Permit2 handles signature-based transfers in SignatureTransfer and allowance-based transfers in AllowanceTransfer.",
						"version": 1
					}
				}
			},
			"contracts/contracts/interfaces/IRewardManager.sol": {
				"IRewardManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "accrueRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isLender",
									"type": "bool"
								}
							],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "deregisterPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewardToken",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isFlashPool",
									"type": "bool"
								}
							],
							"name": "registerPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"accrueRewards(address)": {
								"params": {
									"pool": "The address of the pool."
								}
							},
							"claimRewards(address,bool)": {
								"params": {
									"isLender": "True if the lender is claiming, false if the borrower.",
									"pool": "The address of the pool."
								}
							},
							"deregisterPool(address)": {
								"params": {
									"pool": "The address of the pool to deregister."
								}
							},
							"registerPool(address,address,bool)": {
								"params": {
									"pool": "The address of the pool to register.",
									"rewardToken": "The ERC20 address for the reward token."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"accrueRewards(address)": "3d39955c",
							"claimRewards(address,bool)": "491c011a",
							"deregisterPool(address)": "7e72c7d7",
							"registerPool(address,address,bool)": "77ff76e7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"accrueRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isLender\",\"type\":\"bool\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"deregisterPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isFlashPool\",\"type\":\"bool\"}],\"name\":\"registerPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"accrueRewards(address)\":{\"params\":{\"pool\":\"The address of the pool.\"}},\"claimRewards(address,bool)\":{\"params\":{\"isLender\":\"True if the lender is claiming, false if the borrower.\",\"pool\":\"The address of the pool.\"}},\"deregisterPool(address)\":{\"params\":{\"pool\":\"The address of the pool to deregister.\"}},\"registerPool(address,address,bool)\":{\"params\":{\"pool\":\"The address of the pool to register.\",\"rewardToken\":\"The ERC20 address for the reward token.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accrueRewards(address)\":{\"notice\":\"Accrues rewards for a specific pool.\"},\"claimRewards(address,bool)\":{\"notice\":\"Claims rewards for either the lender or borrower.\"},\"deregisterPool(address)\":{\"notice\":\"Deregisters a pool.\"},\"registerPool(address,address,bool)\":{\"notice\":\"Registers a pool to be eligible for rewards, initializing its reward token.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/IRewardManager.sol\":\"IRewardManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IRewardManager.sol\":{\"keccak256\":\"0x692870b248c0b71185a5c030f853306d6a4c3a25180a3f57ff56dfb2da59a9d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27ba33e21e32b7bfff41db71f93f4ba9a427659a2c04fdf8510087963dbcb62\",\"dweb:/ipfs/QmcnnmcjEc7gkPNHKLECceA9FdVryvK9qKppnakhXGgNMh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"accrueRewards(address)": {
								"notice": "Accrues rewards for a specific pool."
							},
							"claimRewards(address,bool)": {
								"notice": "Claims rewards for either the lender or borrower."
							},
							"deregisterPool(address)": {
								"notice": "Deregisters a pool."
							},
							"registerPool(address,address,bool)": {
								"notice": "Registers a pool to be eligible for rewards, initializing its reward token."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/contracts/interfaces/ISignatureTransfer.sol": {
				"ISignatureTransfer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "maxAmount",
									"type": "uint256"
								}
							],
							"name": "InvalidAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "LengthMismatch",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "word",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "mask",
									"type": "uint256"
								}
							],
							"name": "UnorderedNonceInvalidation",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "wordPos",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "mask",
									"type": "uint256"
								}
							],
							"name": "invalidateUnorderedNonces",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "nonceBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions",
											"name": "permitted",
											"type": "tuple"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails",
									"name": "transferDetails",
									"type": "tuple"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions[]",
											"name": "permitted",
											"type": "tuple[]"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitBatchTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails[]",
									"name": "transferDetails",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions",
											"name": "permitted",
											"type": "tuple"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails",
									"name": "transferDetails",
									"type": "tuple"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "witness",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "witnessTypeString",
									"type": "string"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitWitnessTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "token",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct ISignatureTransfer.TokenPermissions[]",
											"name": "permitted",
											"type": "tuple[]"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.PermitBatchTransferFrom",
									"name": "permit",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct ISignatureTransfer.SignatureTransferDetails[]",
									"name": "transferDetails",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "witness",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "witnessTypeString",
									"type": "string"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "permitWitnessTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Requires user's token approval on the Permit2 contract",
						"errors": {
							"InvalidAmount(uint256)": [
								{
									"params": {
										"maxAmount": "The maximum amount a spender can request to transfer"
									}
								}
							],
							"LengthMismatch()": [
								{
									"details": "If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred"
								}
							]
						},
						"kind": "dev",
						"methods": {
							"invalidateUnorderedNonces(uint256,uint256)": {
								"details": "The wordPos is maxed at type(uint248).max",
								"params": {
									"mask": "A bitmap masked against msg.sender's current bitmap at the word position",
									"wordPos": "A number to index the nonceBitmap at"
								}
							},
							"nonceBitmap(address,uint256)": {
								"details": "Uses unordered nonces so that permit messages do not need to be spent in a certain orderThe mapping is indexed first by the token owner, then by an index specified in the nonceIt returns a uint256 bitmapThe index, or wordPosition is capped at type(uint248).max"
							},
							"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)": {
								"details": "Reverts if the requested amount is greater than the permitted signed amount",
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "The spender's requested transfer details for the permitted token"
								}
							},
							"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)": {
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "Specifies the recipient and requested amount for the token transfer"
								}
							},
							"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)": {
								"details": "The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definitionReverts if the requested amount is greater than the permitted signed amount",
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "The spender's requested transfer details for the permitted token",
									"witness": "Extra data to include when checking the user signature",
									"witnessTypeString": "The EIP-712 type definition for remaining string stub of the typehash"
								}
							},
							"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)": {
								"details": "The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition",
								"params": {
									"owner": "The owner of the tokens to transfer",
									"permit": "The permit data signed over by the owner",
									"signature": "The signature to verify",
									"transferDetails": "Specifies the recipient and requested amount for the token transfer",
									"witness": "Extra data to include when checking the user signature",
									"witnessTypeString": "The EIP-712 type definition for remaining string stub of the typehash"
								}
							}
						},
						"title": "SignatureTransfer",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"invalidateUnorderedNonces(uint256,uint256)": "3ff9dcb1",
							"nonceBitmap(address,uint256)": "4fe02b44",
							"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)": "30f28b7a",
							"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)": "edd9444b",
							"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)": "137c29fe",
							"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)": "fe8ec1a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"word\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"UnorderedNonceInvalidation\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wordPos\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mask\",\"type\":\"uint256\"}],\"name\":\"invalidateUnorderedNonces\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nonceBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails\",\"name\":\"transferDetails\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitBatchTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails\",\"name\":\"transferDetails\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypeString\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitWitnessTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions[]\",\"name\":\"permitted\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitBatchTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails[]\",\"name\":\"transferDetails\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypeString\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitWitnessTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Requires user's token approval on the Permit2 contract\",\"errors\":{\"InvalidAmount(uint256)\":[{\"params\":{\"maxAmount\":\"The maximum amount a spender can request to transfer\"}}],\"LengthMismatch()\":[{\"details\":\"If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred\"}]},\"kind\":\"dev\",\"methods\":{\"invalidateUnorderedNonces(uint256,uint256)\":{\"details\":\"The wordPos is maxed at type(uint248).max\",\"params\":{\"mask\":\"A bitmap masked against msg.sender's current bitmap at the word position\",\"wordPos\":\"A number to index the nonceBitmap at\"}},\"nonceBitmap(address,uint256)\":{\"details\":\"Uses unordered nonces so that permit messages do not need to be spent in a certain orderThe mapping is indexed first by the token owner, then by an index specified in the nonceIt returns a uint256 bitmapThe index, or wordPosition is capped at type(uint248).max\"},\"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)\":{\"details\":\"Reverts if the requested amount is greater than the permitted signed amount\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"The spender's requested transfer details for the permitted token\"}},\"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)\":{\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"Specifies the recipient and requested amount for the token transfer\"}},\"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)\":{\"details\":\"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definitionReverts if the requested amount is greater than the permitted signed amount\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"The spender's requested transfer details for the permitted token\",\"witness\":\"Extra data to include when checking the user signature\",\"witnessTypeString\":\"The EIP-712 type definition for remaining string stub of the typehash\"}},\"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)\":{\"details\":\"The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\",\"params\":{\"owner\":\"The owner of the tokens to transfer\",\"permit\":\"The permit data signed over by the owner\",\"signature\":\"The signature to verify\",\"transferDetails\":\"Specifies the recipient and requested amount for the token transfer\",\"witness\":\"Extra data to include when checking the user signature\",\"witnessTypeString\":\"The EIP-712 type definition for remaining string stub of the typehash\"}}},\"title\":\"SignatureTransfer\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidAmount(uint256)\":[{\"notice\":\"Thrown when the requested amount for a transfer is larger than the permissioned amount\"}],\"LengthMismatch()\":[{\"notice\":\"Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred\"}]},\"events\":{\"UnorderedNonceInvalidation(address,uint256,uint256)\":{\"notice\":\"Emits an event when the owner successfully invalidates an unordered nonce.\"}},\"kind\":\"user\",\"methods\":{\"invalidateUnorderedNonces(uint256,uint256)\":{\"notice\":\"Invalidates the bits specified in mask for the bitmap at the word position\"},\"nonceBitmap(address,uint256)\":{\"notice\":\"A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection\"},\"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)\":{\"notice\":\"Transfers a token using a signed permit message\"},\"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)\":{\"notice\":\"Transfers multiple tokens using a signed permit message\"},\"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)\":{\"notice\":\"Transfers a token using a signed permit messageIncludes extra data provided by the caller to verify signature over\"},\"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)\":{\"notice\":\"Transfers multiple tokens using a signed permit messageIncludes extra data provided by the caller to verify signature over\"}},\"notice\":\"Handles ERC20 token transfers through signature based actions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/interfaces/ISignatureTransfer.sol\":\"ISignatureTransfer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"contracts/contracts/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x16a051e45a3f1ab341a8560aa106c483c3d0a3be4abc52225651c78939b18f93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7cda3c6ed2db1454b4a6ec1e418956d199019085d92163a038d0064615a5acb\",\"dweb:/ipfs/QmWDfZwi8jcGFBuiwHKq6iBWCZq2mA8HmkM9NNTzotMpXH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"InvalidAmount(uint256)": [
								{
									"notice": "Thrown when the requested amount for a transfer is larger than the permissioned amount"
								}
							],
							"LengthMismatch()": [
								{
									"notice": "Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred"
								}
							]
						},
						"events": {
							"UnorderedNonceInvalidation(address,uint256,uint256)": {
								"notice": "Emits an event when the owner successfully invalidates an unordered nonce."
							}
						},
						"kind": "user",
						"methods": {
							"invalidateUnorderedNonces(uint256,uint256)": {
								"notice": "Invalidates the bits specified in mask for the bitmap at the word position"
							},
							"nonceBitmap(address,uint256)": {
								"notice": "A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection"
							},
							"permitTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes)": {
								"notice": "Transfers a token using a signed permit message"
							},
							"permitTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes)": {
								"notice": "Transfers multiple tokens using a signed permit message"
							},
							"permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)": {
								"notice": "Transfers a token using a signed permit messageIncludes extra data provided by the caller to verify signature over"
							},
							"permitWitnessTransferFrom(((address,uint256)[],uint256,uint256),(address,uint256)[],address,bytes32,string,bytes)": {
								"notice": "Transfers multiple tokens using a signed permit messageIncludes extra data provided by the caller to verify signature over"
							}
						},
						"notice": "Handles ERC20 token transfers through signature based actions",
						"version": 1
					}
				}
			},
			"contracts/contracts/protocol/TuliaFlashPool.sol": {
				"TuliaFlashPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_asset",
									"type": "address"
								},
								{
									"internalType": "contract IPermit2",
									"name": "_permit2",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_flashLoanFeeRate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "asset",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "flashFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC3156FlashBorrower",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flashLoan",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "flashLoanFeeRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "maxFlashLoan",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "permit2",
							"outputs": [
								{
									"internalType": "contract IPermit2",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardManager",
							"outputs": [
								{
									"internalType": "contract IRewardManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implements flash loan functionalities with integrated fee management. This contract allows issuing flash loans backed by ERC20 tokens.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_asset": "The ERC20 token asset used for flash loans",
									"_flashLoanFeeRate": "The initial fee rate for flash loans issued by this pool",
									"_permit2": "The Permit2 contract utilized for permissioned token transfers"
								}
							},
							"flashFee(address,uint256)": {
								"params": {
									"amount": "The amount of the loan",
									"token": "The ERC20 token for which the fee is calculated"
								},
								"returns": {
									"_0": "The calculated fee amount"
								}
							},
							"flashLoan(address,address,uint256,bytes)": {
								"params": {
									"amount": "The amount of tokens to borrow",
									"data": "Arbitrary data passed to the borrower's `onFlashLoan` method",
									"receiver": "The borrower contract that must implement the IERC3156FlashBorrower interface",
									"token": "The ERC20 token to be borrowed"
								},
								"returns": {
									"_0": "true if the flash loan is paid back successfully within the same transaction"
								}
							},
							"maxFlashLoan(address)": {
								"params": {
									"token": "The ERC20 token address for which the max loan amount is queried"
								},
								"returns": {
									"_0": "The maximum amount available for a flash loan"
								}
							}
						},
						"title": "TuliaFlashPool",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n  0x80\n  jumpi(tag_9, callvalue)\n  0x1f\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap2\n  dup3\n  add\n  not(0x1f)\n  and\n  dup4\n  add\n  swap2\n  sub(shl(0x40, 0x01), 0x01)\n  dup4\n  gt\n  dup5\n  dup5\n  lt\n  or\n  tag_3\n  jumpi\n  dup1\n  dup5\n  swap3\n  0x60\n  swap5\n  0x40\n  mstore\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_9\n  jumpi\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup1\n  dup3\n  and\n  swap3\n  swap1\n  swap2\n  dup4\n  swap1\n  sub\n  tag_9\n  jumpi\n  0x20\n  dup2\n  add\n  mload\n  swap2\n  dup3\n  and\n  dup1\n  swap3\n  sub\n  tag_9\n  jumpi\n  0x40\n  add\n  mload\n  swap2\n  sstore(0x00, 0x01)\n  0x01\n  dup1\n  0xa0\n  shl\n  sub\n  not\n  swap1\n  dup2\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":1481:1495  asset = _asset */\n  0x02\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n  sload\n  and\n  or\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":1481:1495  asset = _asset */\n  0x02\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n  sstore\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":1506:1524  permit2 = _permit2 */\n  0x03\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n  sload\n  and\n  or\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":1506:1524  permit2 = _permit2 */\n  0x03\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n  sstore\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":1535:1571  flashLoanFeeRate = _flashLoanFeeRate */\n  0x04\n    /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n  sstore\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_9:\n  0x00\n  dup1\n  revert\ntag_3:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_6, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_6:\n      0x00\n      swap1\n      dup2\n      calldataload\n      0xe0\n      shr\n      swap1\n      dup2\n      0x0f4ef8a6\n      eq\n      tag_8\n      jumpi\n      pop\n      dup1\n      0x12261ee7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x38d52e0f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5cffe9de\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x613255ab\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8c9f305f\n      eq\n      tag_18\n      jumpi\n      0xd9d98ce4\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      jumpi(tag_24, callvalue)\n      jumpi(tag_24, slt(add(not(0x03), calldatasize), 0x40))\n      0x20\n      tag_26\n      tag_27\n      tag_1\n      jump\t// in\n    tag_27:\n      calldataload(0x24)\n      swap1\n      tag_4\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_24:\n      dup1\n      revert\n    tag_18:\n      pop\n      jumpi(tag_24, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_24\n      jumpi\n      0x20\n      sload(0x04)\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_16:\n      pop\n      jumpi(tag_24, callvalue)\n      0x20\n      swap1\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_24\n      jumpi\n      tag_36\n      tag_1\n      jump\t// in\n    tag_36:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":1914:1919  asset */\n      0x02\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap2\n      dup5\n      swap2\n      and\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":1897:1920  token == address(asset) */\n      dup3\n      sub\n      tag_37\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":1923:1953  asset.balanceOf(address(this)) */\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":1947:1951  this */\n      address\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":1923:1953  asset.balanceOf(address(this)) */\n      dup3\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      mstore\n      swap2\n      dup3\n      swap1\n      0x24\n      swap1\n      dup3\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":1923:1953  asset.balanceOf(address(this)) */\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_39\n      jumpi\n      swap2\n      tag_41\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":1897:1957  token == address(asset) ? asset.balanceOf(address(this)) : 0 */\n    tag_42:\n      pop\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":1923:1953  asset.balanceOf(address(this)) */\n    tag_41:\n      swap1\n      pop\n      dup2\n      dup2\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_44\n      jumpi\n    tag_45:\n      tag_46\n      dup2\n      dup4\n      tag_2\n      jump\t// in\n    tag_46:\n      dup2\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      sub\n      slt\n      tag_47\n      jumpi\n      mload\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":1923:1953  asset.balanceOf(address(this)) */\n      0x00\n      jump(tag_42)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n    tag_47:\n      0x00\n      dup1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":1923:1953  asset.balanceOf(address(this)) */\n    tag_44:\n      pop\n      returndatasize\n      jump(tag_45)\n    tag_39:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      mload(0x40)\n      swap1\n      returndatasize\n      swap1\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":1897:1957  token == address(asset) ? asset.balanceOf(address(this)) : 0 */\n    tag_37:\n      pop\n      pop\n      jump(tag_26)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n    tag_14:\n      pop\n      jumpi(tag_24, callvalue)\n      jumpi(tag_24, slt(add(not(0x03), calldatasize), 0x80))\n      calldataload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_124\n      jumpi\n      calldataload(0x24)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_55\n      jumpi\n      0xffffffffffffffff\n      swap2\n      dup3\n      calldataload(0x64)\n      gt\n      tag_106\n      jumpi\n      jumpi(tag_106, iszero(slt(add(calldataload(0x64), 0x23), calldatasize)))\n      dup3\n      calldataload(add(0x04, calldataload(0x64)))\n      gt\n      tag_106\n      jumpi\n      jumpi(tag_106, gt(add(add(calldataload(0x64), calldataload(add(0x04, calldataload(0x64)))), 0x24), calldatasize))\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      dup5\n      sload\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      eq\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      tag_65\n      jumpi\n      0x02\n      dup1\n      dup6\n      sstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap3\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3782:3835  require(token == address(asset), \"Unsupported token\") */\n      tag_67\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      dup3\n      and\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3790:3813  token == address(asset) */\n      dup5\n      eq\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3782:3835  require(token == address(asset), \"Unsupported token\") */\n      tag_3\n      jump\t// in\n    tag_67:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3867:3890  flashFee(token, amount) */\n      tag_68\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      calldataload(0x44)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3867:3890  flashFee(token, amount) */\n      dup3\n      tag_4\n      jump\t// in\n    tag_68:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      swap1\n      dup6\n      mload(0x40)\n      swap5\n      shl(0xe0, 0x70a08231)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3925:3955  asset.balanceOf(address(this)) */\n      dup7\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3949:3953  this */\n      address\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3925:3955  asset.balanceOf(address(this)) */\n      dup8\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      mstore\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3925:3955  asset.balanceOf(address(this)) */\n      dup7\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x24\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3925:3955  asset.balanceOf(address(this)) */\n      dup2\n      dup5\n      gas\n      staticcall\n      swap6\n      dup7\n      iszero\n      tag_97\n      jumpi\n      dup3\n      swap7\n      tag_71\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n    tag_72:\n      pop\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3968:4009  asset.transfer(address(receiver), amount) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      dup7\n      and\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3968:4009  asset.transfer(address(receiver), amount) */\n      dup3\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      mstore\n      0x44\n      dup1\n      calldataload\n      0x24\n      dup4\n      add\n      mstore\n      swap1\n      swap3\n      0x20\n      swap3\n      dup5\n      swap3\n      swap2\n      dup4\n      swap2\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3968:4009  asset.transfer(address(receiver), amount) */\n      gas\n      call\n      dup1\n      iszero\n      tag_73\n      jumpi\n      tag_75\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n    tag_76:\n      pop\n      mload(0x40)\n      swap1\n      shl(0xe0, 0x23e30c8b)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4044:4107  receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) */\n      dup3\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4065:4075  msg.sender */\n      caller\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4044:4107  receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) */\n      dup4\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      mstore\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x24\n      dup3\n      add\n      mstore\n      calldataload(0x44)\n      0x44\n      dup3\n      add\n      mstore\n      dup2\n      0x64\n      dup3\n      add\n      mstore\n      0xa0\n      0x84\n      dup3\n      add\n      mstore\n      calldataload(add(0x04, calldataload(0x64)))\n      0xa4\n      dup3\n      add\n      mstore\n      calldataload(add(0x04, calldataload(0x64)))\n      add(calldataload(0x64), 0x24)\n      0xc4\n      dup4\n      add\n      calldatacopy\n      0xc4\n      calldataload(add(0x04, calldataload(0x64)))\n      dup3\n      dup2\n      add\n      dup3\n      add\n      dup9\n      swap1\n      mstore\n      0x20\n      swap2\n      dup4\n      swap2\n      not(0x1f)\n      0x1f\n      swap1\n      swap2\n      add\n      and\n      dup3\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4044:4107  receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) */\n      dup3\n      swap1\n      sub\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      dup2\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      and\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4044:4107  receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) */\n      gas\n      call\n      dup1\n      iszero\n      tag_77\n      jumpi\n      dup7\n      swap1\n      tag_79\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n    tag_80:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4111:4156  keccak256(\"ERC3156FlashBorrower.onFlashLoan\") */\n      0x439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4044:4156  receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) == keccak256(\"ERC3156FlashBorrower.onFlashLoan\") */\n      swap2\n      pop\n      sub\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      tag_81\n      jumpi\n      calldataload(0x44)\n      add\n      dup1\n      calldataload(0x44)\n      gt\n      tag_83\n      jumpi\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4263:4327  asset.transferFrom(address(receiver), address(this), amountOwed) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      swap4\n      dup5\n      and\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4263:4327  asset.transferFrom(address(receiver), address(this), amountOwed) */\n      dup3\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3949:3953  this */\n      address\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      0x20\n      swap2\n      dup4\n      swap2\n      0x64\n      swap2\n      dup4\n      swap2\n      dup10\n      swap2\n      and\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4263:4327  asset.transferFrom(address(receiver), address(this), amountOwed) */\n      gas\n      call\n      dup1\n      iszero\n      tag_89\n      jumpi\n      tag_87\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n    tag_88:\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4348:4378  asset.balanceOf(address(this)) */\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3949:3953  this */\n      address\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4348:4378  asset.balanceOf(address(this)) */\n      dup3\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      mstore\n      swap1\n      0x20\n      swap1\n      dup3\n      swap1\n      0x24\n      swap1\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4348:4378  asset.balanceOf(address(this)) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_89\n      jumpi\n      dup5\n      swap2\n      tag_91\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n    tag_92:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4348:4395  asset.balanceOf(address(this)) >= balanceBefore */\n      pop\n      lt\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      tag_93\n      jumpi\n      sload(0x01)\n      dup3\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4438:4481  rewardManager.deregisterPool(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      tag_95\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      dup3\n      swap1\n      0x24\n      mload(0x40)\n      dup1\n      swap7\n      dup2\n      swap4\n      shl(0xe0, 0x7e72c7d7)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4438:4481  rewardManager.deregisterPool(address(this)) */\n      dup4\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3949:3953  this */\n      address\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4438:4481  rewardManager.deregisterPool(address(this)) */\n      dup5\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4438:4481  rewardManager.deregisterPool(address(this)) */\n      gas\n      call\n      dup1\n      iszero\n      tag_97\n      jumpi\n      tag_99\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n    tag_100:\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup3\n      sstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x20\n      mload(0x40)\n      0x01\n      dup2\n      mstore\n      return\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4438:4481  rewardManager.deregisterPool(address(this)) */\n    tag_99:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      dup3\n      gt\n      tag_101\n      jumpi\n      0x01\n      swap2\n      0x40\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4438:4481  rewardManager.deregisterPool(address(this)) */\n      0x00\n      jump(tag_100)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n    tag_101:\n      shl(0xe0, 0x4e487b71)\n      dup2\n      mstore\n      mstore(0x04, 0x41)\n      0x24\n      swap1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4438:4481  rewardManager.deregisterPool(address(this)) */\n    tag_97:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      mload(0x40)\n      returndatasize\n      dup5\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4438:4481  rewardManager.deregisterPool(address(this)) */\n    tag_95:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      pop\n      pop\n      revert\n    tag_93:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x466c617368206c6f616e2072657061796d656e74206661696c65640000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4348:4378  asset.balanceOf(address(this)) */\n    tag_91:\n      swap1\n      pop\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4348:4378  asset.balanceOf(address(this)) */\n      dup2\n      returndatasize\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4348:4378  asset.balanceOf(address(this)) */\n      gt\n      tag_103\n      jumpi\n    tag_104:\n      dup2\n      tag_105\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4348:4378  asset.balanceOf(address(this)) */\n      swap4\n      dup4\n      tag_2\n      jump\t// in\n    tag_105:\n      dup2\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      sub\n      slt\n      tag_106\n      jumpi\n      mload\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4348:4378  asset.balanceOf(address(this)) */\n      0x00\n      jump(tag_92)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n    tag_106:\n      dup4\n      dup1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4348:4378  asset.balanceOf(address(this)) */\n    tag_103:\n      returndatasize\n      swap2\n      pop\n      jump(tag_104)\n    tag_89:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      mload(0x40)\n      returndatasize\n      dup7\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4263:4327  asset.transferFrom(address(receiver), address(this), amountOwed) */\n    tag_87:\n      tag_108\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4263:4327  asset.transferFrom(address(receiver), address(this), amountOwed) */\n      returndatasize\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4263:4327  asset.transferFrom(address(receiver), address(this), amountOwed) */\n      gt\n      tag_109\n      jumpi\n    tag_110:\n      tag_111\n      dup2\n      dup4\n      tag_2\n      jump\t// in\n    tag_111:\n      dup2\n      add\n      swap1\n      tag_5\n      jump\t// in\n    tag_108:\n      pop\n      0x00\n      jump(tag_88)\n    tag_109:\n      pop\n      returndatasize\n      jump(tag_110)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n    tag_83:\n      shl(0xe0, 0x4e487b71)\n      dup6\n      mstore\n      mstore(0x04, 0x11)\n      0x24\n      dup6\n      revert\n    tag_81:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x7a, 0x119b185cda081b1bd85b8819985a5b1959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4044:4107  receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) */\n    tag_79:\n      pop\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4044:4107  receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) */\n      dup2\n      returndatasize\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4044:4107  receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) */\n      gt\n      tag_112\n      jumpi\n    tag_113:\n      dup2\n      tag_114\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4044:4107  receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) */\n      swap4\n      dup4\n      tag_2\n      jump\t// in\n    tag_114:\n      dup2\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      sub\n      slt\n      tag_115\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4111:4156  keccak256(\"ERC3156FlashBorrower.onFlashLoan\") */\n      0x439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      swap1\n      mload\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4044:4107  receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) */\n      jump(tag_80)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n    tag_115:\n      dup6\n      dup1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":4044:4107  receiver.onFlashLoan(msg.sender, token, amount, totalFee, data) */\n    tag_112:\n      returndatasize\n      swap2\n      pop\n      jump(tag_113)\n    tag_77:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      mload(0x40)\n      returndatasize\n      dup9\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3968:4009  asset.transfer(address(receiver), amount) */\n    tag_75:\n      tag_117\n      swap1\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3968:4009  asset.transfer(address(receiver), amount) */\n      returndatasize\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3968:4009  asset.transfer(address(receiver), amount) */\n      gt\n      tag_109\n      jumpi\n      tag_111\n      dup2\n      dup4\n      tag_2\n      jump\t// in\n    tag_117:\n      pop\n      0x00\n      jump(tag_76)\n    tag_73:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      mload(0x40)\n      returndatasize\n      dup10\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3925:3955  asset.balanceOf(address(this)) */\n    tag_71:\n      swap1\n      swap6\n      pop\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3925:3955  asset.balanceOf(address(this)) */\n      dup2\n      returndatasize\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3925:3955  asset.balanceOf(address(this)) */\n      gt\n      tag_121\n      jumpi\n    tag_122:\n      dup2\n      tag_123\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3925:3955  asset.balanceOf(address(this)) */\n      swap4\n      dup4\n      tag_2\n      jump\t// in\n    tag_123:\n      dup2\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      sub\n      slt\n      tag_124\n      jumpi\n      mload\n      swap5\n      0x20\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3925:3955  asset.balanceOf(address(this)) */\n      jump(tag_72)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n    tag_124:\n      pop\n      dup1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":3925:3955  asset.balanceOf(address(this)) */\n    tag_121:\n      returndatasize\n      swap2\n      pop\n      jump(tag_122)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n    tag_65:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup2\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x20\n      0x04\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup3\n      add\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x1f\n      0x24\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      dup3\n      add\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      mstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x44\n      dup3\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      mstore\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      0x64\n      swap1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n    tag_55:\n      dup3\n      dup1\n      revert\n    tag_12:\n      pop\n      jumpi(tag_24, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_24\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":810:829  IERC20 public asset */\n      0x02\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_10:\n      pop\n      jumpi(tag_24, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_24\n      jumpi\n      sload(0x03)\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_8:\n      swap1\n      pop\n      jumpi(tag_124, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_124\n      jumpi\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_1:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_47\n      jumpi\n      jump\t// out\n    tag_2:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_140\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_140:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_3:\n      iszero\n      tag_142\n      jumpi\n      jump\t// out\n    tag_142:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x79, 0x2ab739bab83837b93a32b2103a37b5b2b7)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":2203:2452  function flashFee(address token, uint256 amount) public view override returns (uint256) {... */\n    tag_4:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":2327:2332  asset */\n      0x02\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      sload\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":2302:2355  require(token == address(asset), \"Unsupported token\") */\n      tag_144\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      swap1\n      dup2\n      and\n      swap2\n      and\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":2310:2333  token == address(asset) */\n      eq\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":2302:2355  require(token == address(asset), \"Unsupported token\") */\n      tag_3\n      jump\t// in\n    tag_144:\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":2394:2410  flashLoanFeeRate */\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      sload\n      swap1\n      dup2\n      dup2\n      mul\n      swap2\n      dup2\n      dup4\n      div\n      eq\n      swap1\n      iszero\n      or\n      iszero\n      tag_145\n      jumpi\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":2414:2419  10000 */\n      0x2710\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      swap1\n      div\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":2203:2452  function flashFee(address token, uint256 amount) public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n    tag_145:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      0x11\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":2394:2410  flashLoanFeeRate */\n      0x04\n        /* \"contracts/contracts/protocol/TuliaFlashPool.sol\":585:4516  contract TuliaFlashPool is IERC3156FlashLender, ReentrancyGuard {... */\n      mstore\n      revert(0x00, 0x24)\n    tag_5:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_47\n      jumpi\n      mload\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_47\n      jumpi\n      swap1\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220485d28ce82b89521d10acc4d6d797a29036665e73741d7e66a4bef0e64d45bc164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60803461009957601f6108b138819003918201601f19168301916001600160401b0383118484101761009d578084926060946040528339810103126100995780516001600160a01b0380821692909183900361009957602081015191821680920361009957604001519160015f5560018060a01b03199081600254161760025560035416176003556004556040516107ff90816100b28239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f90813560e01c9081630f4ef8a6146106b65750806312261ee71461068d57806338d52e0f146106645780635cffe9de14610166578063613255ab146100bb5780638c9f305f1461009d5763d9d98ce41461006b575f80fd5b3461009a57604036600319011261009a5760206100926100896106db565b60243590610767565b604051908152f35b80fd5b503461009a578060031936011261009a576020600454604051908152f35b503461009a576020908160031936011261009a576100d76106db565b6002546001600160a01b0390811691849116820361015f576040516370a0823160e01b815230600482015291829060249082905afa9182156101535791610122575b50604051908152f35b90508181813d831161014c575b61013981836106f1565b8101031261014857515f610119565b5f80fd5b503d61012f565b604051903d90823e3d90fd5b5050610092565b503461009a57608036600319011261009a576004356001600160a01b038116810361060f576024356001600160a01b03811681036106605767ffffffffffffffff9182606435116104c4573660236064350112156104c4578260643560040135116104c457366024606435600401356064350101116104c457600284541461061b576002808555546001600160a01b0390811692906102089082168414610727565b61021460443582610767565b9085604051946370a0823160e01b8652306004870152602086602481845afa9586156104465782966105e2575b5060405163a9059cbb60e01b81526001600160a01b0386166004820152604480356024830152909260209284929183915af180156105d7576105b8575b50604051906323e30c8b60e01b825233600483015260018060a01b03166024820152604435604482015281606482015260a060848201526064356004013560a48201526064356004013560246064350160c483013760c46064356004013582810182018890526020918391601f19601f9091011682018290030181896001600160a01b0388165af180156105ad578690610557575b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd991500361051e5760443501806044351161050a576002546040516323b872dd60e01b81526001600160a01b03938416600482015230602482015260448101929092529091602091839160649183918991165af180156104d0576104db575b506002546040516370a0823160e01b815230600482015290602090829060249082906001600160a01b03165afa9081156104d057849161049a575b5010610455576001548291906001600160a01b0316803b15610451578290602460405180968193637e72c7d760e01b83523060048401525af1801561044657610420575b60018255602060405160018152f35b8211610432576001916040525f610411565b634e487b7160e01b81526041600452602490fd5b6040513d84823e3d90fd5b5050fd5b60405162461bcd60e51b815260206004820152601b60248201527f466c617368206c6f616e2072657061796d656e74206661696c656400000000006044820152606490fd5b90506020813d6020116104c8575b816104b5602093836106f1565b810103126104c457515f6103cd565b8380fd5b3d91506104a8565b6040513d86823e3d90fd5b6104fc9060203d602011610503575b6104f481836106f1565b8101906107b1565b505f610392565b503d6104ea565b634e487b7160e01b85526011600452602485fd5b60405162461bcd60e51b8152602060048201526011602482015270119b185cda081b1bd85b8819985a5b1959607a1b6044820152606490fd5b506020813d6020116105a5575b81610571602093836106f1565b810103126105a1577f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99051610313565b8580fd5b3d9150610564565b6040513d88823e3d90fd5b6105d09060203d602011610503576104f481836106f1565b505f61027e565b6040513d89823e3d90fd5b9095506020813d602011610613575b816105fe602093836106f1565b8101031261060f5751946020610241565b5080fd5b3d91506105f1565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b8280fd5b503461009a578060031936011261009a576002546040516001600160a01b039091168152602090f35b503461009a578060031936011261009a576003546040516001600160a01b039091168152602090f35b90503461060f578160031936011261060f576001546001600160a01b03168152602090f35b600435906001600160a01b038216820361014857565b90601f8019910116810190811067ffffffffffffffff82111761071357604052565b634e487b7160e01b5f52604160045260245ffd5b1561072e57565b60405162461bcd60e51b81526020600482015260116024820152702ab739bab83837b93a32b2103a37b5b2b760791b6044820152606490fd5b600254610781916001600160a01b03908116911614610727565b6004549081810291818304149015171561079d57612710900490565b634e487b7160e01b5f52601160045260245ffd5b9081602091031261014857518015158103610148579056fea2646970667358221220485d28ce82b89521d10acc4d6d797a29036665e73741d7e66a4bef0e64d45bc164736f6c63430008140033",
							"opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x99 JUMPI PUSH1 0x1F PUSH2 0x8B1 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x9D JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x99 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP1 SUB PUSH2 0x99 JUMPI PUSH1 0x20 DUP2 ADD MLOAD SWAP2 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x99 JUMPI PUSH1 0x40 ADD MLOAD SWAP2 PUSH1 0x1 PUSH0 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD PUSH2 0x7FF SWAP1 DUP2 PUSH2 0xB2 DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xF4EF8A6 EQ PUSH2 0x6B6 JUMPI POP DUP1 PUSH4 0x12261EE7 EQ PUSH2 0x68D JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x664 JUMPI DUP1 PUSH4 0x5CFFE9DE EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x613255AB EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0x8C9F305F EQ PUSH2 0x9D JUMPI PUSH4 0xD9D98CE4 EQ PUSH2 0x6B JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x9A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x9A JUMPI PUSH1 0x20 PUSH2 0x92 PUSH2 0x89 PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x9A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x9A JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x9A JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x9A JUMPI PUSH2 0xD7 PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP5 SWAP2 AND DUP3 SUB PUSH2 0x15F JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x153 JUMPI SWAP2 PUSH2 0x122 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x14C JUMPI JUMPDEST PUSH2 0x139 DUP2 DUP4 PUSH2 0x6F1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x148 JUMPI MLOAD PUSH0 PUSH2 0x119 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x12F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP PUSH2 0x92 JUMP JUMPDEST POP CALLVALUE PUSH2 0x9A JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x9A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x60F JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x660 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x64 CALLDATALOAD GT PUSH2 0x4C4 JUMPI CALLDATASIZE PUSH1 0x23 PUSH1 0x64 CALLDATALOAD ADD SLT ISZERO PUSH2 0x4C4 JUMPI DUP3 PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD GT PUSH2 0x4C4 JUMPI CALLDATASIZE PUSH1 0x24 PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x64 CALLDATALOAD ADD ADD GT PUSH2 0x4C4 JUMPI PUSH1 0x2 DUP5 SLOAD EQ PUSH2 0x61B JUMPI PUSH1 0x2 DUP1 DUP6 SSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP1 PUSH2 0x208 SWAP1 DUP3 AND DUP5 EQ PUSH2 0x727 JUMP JUMPDEST PUSH2 0x214 PUSH1 0x44 CALLDATALOAD DUP3 PUSH2 0x767 JUMP JUMPDEST SWAP1 DUP6 PUSH1 0x40 MLOAD SWAP5 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP7 MSTORE ADDRESS PUSH1 0x4 DUP8 ADD MSTORE PUSH1 0x20 DUP7 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x446 JUMPI DUP3 SWAP7 PUSH2 0x5E2 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x44 DUP1 CALLDATALOAD PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP3 PUSH1 0x20 SWAP3 DUP5 SWAP3 SWAP2 DUP4 SWAP2 GAS CALL DUP1 ISZERO PUSH2 0x5D7 JUMPI PUSH2 0x5B8 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH4 0x23E30C8B PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE DUP2 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x24 PUSH1 0x64 CALLDATALOAD ADD PUSH1 0xC4 DUP4 ADD CALLDATACOPY PUSH1 0xC4 PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD DUP3 DUP2 ADD DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x1F NOT PUSH1 0x1F SWAP1 SWAP2 ADD AND DUP3 ADD DUP3 SWAP1 SUB ADD DUP2 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS CALL DUP1 ISZERO PUSH2 0x5AD JUMPI DUP7 SWAP1 PUSH2 0x557 JUMPI JUMPDEST PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 SWAP2 POP SUB PUSH2 0x51E JUMPI PUSH1 0x44 CALLDATALOAD ADD DUP1 PUSH1 0x44 CALLDATALOAD GT PUSH2 0x50A JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x64 SWAP2 DUP4 SWAP2 DUP10 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH2 0x4DB JUMPI JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4D0 JUMPI DUP5 SWAP2 PUSH2 0x49A JUMPI JUMPDEST POP LT PUSH2 0x455 JUMPI PUSH1 0x1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x451 JUMPI DUP3 SWAP1 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH4 0x7E72C7D7 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x446 JUMPI PUSH2 0x420 JUMPI JUMPDEST PUSH1 0x1 DUP3 SSTORE PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 GT PUSH2 0x432 JUMPI PUSH1 0x1 SWAP2 PUSH1 0x40 MSTORE PUSH0 PUSH2 0x411 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C617368206C6F616E2072657061796D656E74206661696C65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4C8 JUMPI JUMPDEST DUP2 PUSH2 0x4B5 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x6F1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4C4 JUMPI MLOAD PUSH0 PUSH2 0x3CD JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x4FC SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x503 JUMPI JUMPDEST PUSH2 0x4F4 DUP2 DUP4 PUSH2 0x6F1 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x7B1 JUMP JUMPDEST POP PUSH0 PUSH2 0x392 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4EA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x119B185CDA081B1BD85B8819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5A5 JUMPI JUMPDEST DUP2 PUSH2 0x571 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x6F1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A1 JUMPI PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 SWAP1 MLOAD PUSH2 0x313 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x564 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x5D0 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x503 JUMPI PUSH2 0x4F4 DUP2 DUP4 PUSH2 0x6F1 JUMP JUMPDEST POP PUSH0 PUSH2 0x27E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP6 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x613 JUMPI JUMPDEST DUP2 PUSH2 0x5FE PUSH1 0x20 SWAP4 DUP4 PUSH2 0x6F1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x60F JUMPI MLOAD SWAP5 PUSH1 0x20 PUSH2 0x241 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x9A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x9A JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x9A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x9A JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x60F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x60F JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x148 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x713 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ISZERO PUSH2 0x72E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2AB739BAB83837B93A32B2103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x781 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x727 JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x79D JUMPI PUSH2 0x2710 SWAP1 DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x148 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x148 JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0x5D 0x28 0xCE DUP3 0xB8 SWAP6 0x21 0xD1 EXP 0xCC 0x4D PUSH14 0x797A29036665E73741D7E66A4BEF 0xE PUSH5 0xD45BC16473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "585:3931:9:-:0;;;;;;;;;;;;;-1:-1:-1;;585:3931:9;;;;-1:-1:-1;;;;;585:3931:9;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;585:3931:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;585:3931:9;;;;;;;;;1481:14;585:3931;;;1481:14;585:3931;1506:18;585:3931;;;1506:18;585:3931;1535:36;585:3931;;;;;;;;;;;-1:-1:-1;585:3931:9;;;;;;-1:-1:-1;585:3931:9;;;;;-1:-1:-1;585:3931:9"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 1755,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_bool_fromMemory": {
									"entryPoint": 1969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_flashFee": {
									"entryPoint": 1895,
									"id": 718,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"require_helper_stringliteral": {
									"entryPoint": 1831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f90813560e01c9081630f4ef8a6146106b65750806312261ee71461068d57806338d52e0f146106645780635cffe9de14610166578063613255ab146100bb5780638c9f305f1461009d5763d9d98ce41461006b575f80fd5b3461009a57604036600319011261009a5760206100926100896106db565b60243590610767565b604051908152f35b80fd5b503461009a578060031936011261009a576020600454604051908152f35b503461009a576020908160031936011261009a576100d76106db565b6002546001600160a01b0390811691849116820361015f576040516370a0823160e01b815230600482015291829060249082905afa9182156101535791610122575b50604051908152f35b90508181813d831161014c575b61013981836106f1565b8101031261014857515f610119565b5f80fd5b503d61012f565b604051903d90823e3d90fd5b5050610092565b503461009a57608036600319011261009a576004356001600160a01b038116810361060f576024356001600160a01b03811681036106605767ffffffffffffffff9182606435116104c4573660236064350112156104c4578260643560040135116104c457366024606435600401356064350101116104c457600284541461061b576002808555546001600160a01b0390811692906102089082168414610727565b61021460443582610767565b9085604051946370a0823160e01b8652306004870152602086602481845afa9586156104465782966105e2575b5060405163a9059cbb60e01b81526001600160a01b0386166004820152604480356024830152909260209284929183915af180156105d7576105b8575b50604051906323e30c8b60e01b825233600483015260018060a01b03166024820152604435604482015281606482015260a060848201526064356004013560a48201526064356004013560246064350160c483013760c46064356004013582810182018890526020918391601f19601f9091011682018290030181896001600160a01b0388165af180156105ad578690610557575b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd991500361051e5760443501806044351161050a576002546040516323b872dd60e01b81526001600160a01b03938416600482015230602482015260448101929092529091602091839160649183918991165af180156104d0576104db575b506002546040516370a0823160e01b815230600482015290602090829060249082906001600160a01b03165afa9081156104d057849161049a575b5010610455576001548291906001600160a01b0316803b15610451578290602460405180968193637e72c7d760e01b83523060048401525af1801561044657610420575b60018255602060405160018152f35b8211610432576001916040525f610411565b634e487b7160e01b81526041600452602490fd5b6040513d84823e3d90fd5b5050fd5b60405162461bcd60e51b815260206004820152601b60248201527f466c617368206c6f616e2072657061796d656e74206661696c656400000000006044820152606490fd5b90506020813d6020116104c8575b816104b5602093836106f1565b810103126104c457515f6103cd565b8380fd5b3d91506104a8565b6040513d86823e3d90fd5b6104fc9060203d602011610503575b6104f481836106f1565b8101906107b1565b505f610392565b503d6104ea565b634e487b7160e01b85526011600452602485fd5b60405162461bcd60e51b8152602060048201526011602482015270119b185cda081b1bd85b8819985a5b1959607a1b6044820152606490fd5b506020813d6020116105a5575b81610571602093836106f1565b810103126105a1577f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99051610313565b8580fd5b3d9150610564565b6040513d88823e3d90fd5b6105d09060203d602011610503576104f481836106f1565b505f61027e565b6040513d89823e3d90fd5b9095506020813d602011610613575b816105fe602093836106f1565b8101031261060f5751946020610241565b5080fd5b3d91506105f1565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b8280fd5b503461009a578060031936011261009a576002546040516001600160a01b039091168152602090f35b503461009a578060031936011261009a576003546040516001600160a01b039091168152602090f35b90503461060f578160031936011261060f576001546001600160a01b03168152602090f35b600435906001600160a01b038216820361014857565b90601f8019910116810190811067ffffffffffffffff82111761071357604052565b634e487b7160e01b5f52604160045260245ffd5b1561072e57565b60405162461bcd60e51b81526020600482015260116024820152702ab739bab83837b93a32b2103a37b5b2b760791b6044820152606490fd5b600254610781916001600160a01b03908116911614610727565b6004549081810291818304149015171561079d57612710900490565b634e487b7160e01b5f52601160045260245ffd5b9081602091031261014857518015158103610148579056fea2646970667358221220485d28ce82b89521d10acc4d6d797a29036665e73741d7e66a4bef0e64d45bc164736f6c63430008140033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xF4EF8A6 EQ PUSH2 0x6B6 JUMPI POP DUP1 PUSH4 0x12261EE7 EQ PUSH2 0x68D JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x664 JUMPI DUP1 PUSH4 0x5CFFE9DE EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x613255AB EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0x8C9F305F EQ PUSH2 0x9D JUMPI PUSH4 0xD9D98CE4 EQ PUSH2 0x6B JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x9A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x9A JUMPI PUSH1 0x20 PUSH2 0x92 PUSH2 0x89 PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x9A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x9A JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x9A JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x9A JUMPI PUSH2 0xD7 PUSH2 0x6DB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP5 SWAP2 AND DUP3 SUB PUSH2 0x15F JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x153 JUMPI SWAP2 PUSH2 0x122 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x14C JUMPI JUMPDEST PUSH2 0x139 DUP2 DUP4 PUSH2 0x6F1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x148 JUMPI MLOAD PUSH0 PUSH2 0x119 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x12F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP PUSH2 0x92 JUMP JUMPDEST POP CALLVALUE PUSH2 0x9A JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x9A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x60F JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x660 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x64 CALLDATALOAD GT PUSH2 0x4C4 JUMPI CALLDATASIZE PUSH1 0x23 PUSH1 0x64 CALLDATALOAD ADD SLT ISZERO PUSH2 0x4C4 JUMPI DUP3 PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD GT PUSH2 0x4C4 JUMPI CALLDATASIZE PUSH1 0x24 PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x64 CALLDATALOAD ADD ADD GT PUSH2 0x4C4 JUMPI PUSH1 0x2 DUP5 SLOAD EQ PUSH2 0x61B JUMPI PUSH1 0x2 DUP1 DUP6 SSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP1 PUSH2 0x208 SWAP1 DUP3 AND DUP5 EQ PUSH2 0x727 JUMP JUMPDEST PUSH2 0x214 PUSH1 0x44 CALLDATALOAD DUP3 PUSH2 0x767 JUMP JUMPDEST SWAP1 DUP6 PUSH1 0x40 MLOAD SWAP5 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP7 MSTORE ADDRESS PUSH1 0x4 DUP8 ADD MSTORE PUSH1 0x20 DUP7 PUSH1 0x24 DUP2 DUP5 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x446 JUMPI DUP3 SWAP7 PUSH2 0x5E2 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x44 DUP1 CALLDATALOAD PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP3 PUSH1 0x20 SWAP3 DUP5 SWAP3 SWAP2 DUP4 SWAP2 GAS CALL DUP1 ISZERO PUSH2 0x5D7 JUMPI PUSH2 0x5B8 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH4 0x23E30C8B PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE DUP2 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x24 PUSH1 0x64 CALLDATALOAD ADD PUSH1 0xC4 DUP4 ADD CALLDATACOPY PUSH1 0xC4 PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD DUP3 DUP2 ADD DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x1F NOT PUSH1 0x1F SWAP1 SWAP2 ADD AND DUP3 ADD DUP3 SWAP1 SUB ADD DUP2 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS CALL DUP1 ISZERO PUSH2 0x5AD JUMPI DUP7 SWAP1 PUSH2 0x557 JUMPI JUMPDEST PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 SWAP2 POP SUB PUSH2 0x51E JUMPI PUSH1 0x44 CALLDATALOAD ADD DUP1 PUSH1 0x44 CALLDATALOAD GT PUSH2 0x50A JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x64 SWAP2 DUP4 SWAP2 DUP10 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH2 0x4DB JUMPI JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4D0 JUMPI DUP5 SWAP2 PUSH2 0x49A JUMPI JUMPDEST POP LT PUSH2 0x455 JUMPI PUSH1 0x1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x451 JUMPI DUP3 SWAP1 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH4 0x7E72C7D7 PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x446 JUMPI PUSH2 0x420 JUMPI JUMPDEST PUSH1 0x1 DUP3 SSTORE PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP3 GT PUSH2 0x432 JUMPI PUSH1 0x1 SWAP2 PUSH1 0x40 MSTORE PUSH0 PUSH2 0x411 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C617368206C6F616E2072657061796D656E74206661696C65640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4C8 JUMPI JUMPDEST DUP2 PUSH2 0x4B5 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x6F1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4C4 JUMPI MLOAD PUSH0 PUSH2 0x3CD JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x4FC SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x503 JUMPI JUMPDEST PUSH2 0x4F4 DUP2 DUP4 PUSH2 0x6F1 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x7B1 JUMP JUMPDEST POP PUSH0 PUSH2 0x392 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4EA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x119B185CDA081B1BD85B8819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5A5 JUMPI JUMPDEST DUP2 PUSH2 0x571 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x6F1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A1 JUMPI PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 SWAP1 MLOAD PUSH2 0x313 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x564 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x5D0 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x503 JUMPI PUSH2 0x4F4 DUP2 DUP4 PUSH2 0x6F1 JUMP JUMPDEST POP PUSH0 PUSH2 0x27E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP6 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x613 JUMPI JUMPDEST DUP2 PUSH2 0x5FE PUSH1 0x20 SWAP4 DUP4 PUSH2 0x6F1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x60F JUMPI MLOAD SWAP5 PUSH1 0x20 PUSH2 0x241 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x9A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x9A JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x9A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x9A JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x60F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x60F JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x148 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x713 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ISZERO PUSH2 0x72E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2AB739BAB83837B93A32B2103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x781 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x727 JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x79D JUMPI PUSH2 0x2710 SWAP1 DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x148 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x148 JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0x5D 0x28 0xCE DUP3 0xB8 SWAP6 0x21 0xD1 EXP 0xCC 0x4D PUSH14 0x797A29036665E73741D7E66A4BEF 0xE PUSH5 0xD45BC16473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "585:3931:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;585:3931:9;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1914:5;585:3931;-1:-1:-1;;;;;585:3931:9;;;;;;;1897:23;;;;585:3931;;-1:-1:-1;;;1923:30:9;;1947:4;585:3931;1923:30;;585:3931;;;;;;;;1923:30;;;;;;;;;;1897:60;;585:3931;;;;;;1923:30;;;;;;;;;;;;;;;;:::i;:::-;;;585:3931;;;;;1923:30;;;585:3931;;;;1923:30;;;;;;585:3931;;;;;;;;;;1897:60;;;;;585:3931;;;;;;;-1:-1:-1;;585:3931:9;;;;;;-1:-1:-1;;;;;585:3931:9;;;;;;;;-1:-1:-1;;;;;585:3931:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1759:1:2;585:3931:9;;2468:19:2;1759:1;;;;;;585:3931:9;-1:-1:-1;;;;;585:3931:9;;;;;3782:53;;585:3931;;3790:23;;3782:53;:::i;:::-;3867:23;585:3931;;3867:23;;:::i;:::-;585:3931;;;;;;;;3925:30;;3949:4;585:3931;3925:30;;585:3931;;3925:30;585:3931;3925:30;;;;;;;;;;;;;585:3931;-1:-1:-1;585:3931:9;;-1:-1:-1;;;3968:41:9;;-1:-1:-1;;;;;585:3931:9;;;3968:41;;585:3931;;;;;;;;;;;;;;;;;3968:41;;;;;;;;585:3931;;;;;;;;4044:63;;4065:10;585:3931;4044:63;;585:3931;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;585:3931:9;;;;;;;4044:63;;;;585:3931;;-1:-1:-1;;;;;585:3931:9;;4044:63;;;;;;;;;;585:3931;4111:45;4044:112;;;585:3931;;;;;;;;;;;1759:1:2;585:3931:9;;;-1:-1:-1;;;4263:64:9;;-1:-1:-1;;;;;585:3931:9;;;;4263:64;;585:3931;3949:4;585:3931;;;;;;;;;;;;;;;;;;;;;;;;4263:64;;;;;;;;585:3931;-1:-1:-1;1759:1:2;585:3931:9;;;-1:-1:-1;;;4348:30:9;;3949:4;585:3931;4348:30;;585:3931;;;;;;;;;;-1:-1:-1;;;;;585:3931:9;4348:30;;;;;;;;;;;585:3931;4348:47;;585:3931;;;;;;;-1:-1:-1;;;;;585:3931:9;4438:43;;;;;585:3931;;;;;;;;;;;;4438:43;;3949:4;585:3931;4438:43;;585:3931;4438:43;;;;;;;;585:3931;;1759:1:2;;585:3931:9;;;;;;;4438:43;585:3931;;;;;;;;4438:43;;;585:3931;-1:-1:-1;;;585:3931:9;;;;;;;;4438:43;585:3931;;;;;;;;;4438:43;585:3931;;;;;;-1:-1:-1;;;585:3931:9;;;;;;;;;;;;;;;;;;;;4348:30;;;585:3931;4348:30;;585:3931;4348:30;;;;;;585:3931;4348:30;;;:::i;:::-;;;585:3931;;;;;4348:30;;;585:3931;;;;4348:30;;;-1:-1:-1;4348:30:9;;;585:3931;;;;;;;;;4263:64;;;585:3931;4263:64;585:3931;4263:64;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;585:3931;-1:-1:-1;;;585:3931:9;;;;;;;;;;;-1:-1:-1;;;585:3931:9;;;;;;;;;;;;-1:-1:-1;;;585:3931:9;;;;;;;4044:63;;585:3931;4044:63;;585:3931;4044:63;;;;;;585:3931;4044:63;;;:::i;:::-;;;585:3931;;;;4111:45;585:3931;;4044:63;;585:3931;;;;4044:63;;;-1:-1:-1;4044:63:9;;;585:3931;;;;;;;;;3968:41;;;585:3931;3968:41;585:3931;3968:41;;;;;;;:::i;:::-;;;;;;585:3931;;;;;;;;;3925:30;;;;585:3931;3925:30;;585:3931;3925:30;;;;;;585:3931;3925:30;;;:::i;:::-;;;585:3931;;;;;;;3925:30;;585:3931;;;;3925:30;;;-1:-1:-1;3925:30:9;;1759:1:2;585:3931:9;;-1:-1:-1;;;1759:1:2;;585:3931:9;;1759:1:2;;;585:3931:9;;1759:1:2;;585:3931:9;1759:1:2;585:3931:9;;;1759:1:2;585:3931:9;;1759:1:2;585:3931:9;;;;;;;;;;;;;;;;;810:19;585:3931;;;-1:-1:-1;;;;;585:3931:9;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;585:3931:9;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;585:3931:9;;;;;;;;;;-1:-1:-1;;;;;585:3931:9;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;585:3931:9;;;;;;;;;;;;-1:-1:-1;;;585:3931:9;;;;;;;2203:249;2327:5;585:3931;2302:53;;-1:-1:-1;;;;;585:3931:9;;;;;2310:23;2302:53;:::i;:::-;2394:16;585:3931;;;;;;;;;;;;;;;;2414:5;585:3931;;2203:249;:::o;585:3931::-;;;;-1:-1:-1;585:3931:9;;2394:16;585:3931;;-1:-1:-1;585:3931:9;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "409400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"asset()": "2333",
								"flashFee(address,uint256)": "4747",
								"flashLoan(address,address,uint256,bytes)": "infinite",
								"flashLoanFeeRate()": "2375",
								"maxFlashLoan(address)": "infinite",
								"permit2()": "2311",
								"rewardManager()": "2278"
							},
							"internal": {
								"_executeFlashLoan(contract IERC3156FlashBorrower,address,uint256,bytes calldata)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 585,
									"end": 4516,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1481,
									"end": 1495,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1481,
									"end": 1495,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1506,
									"end": 1524,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1506,
									"end": 1524,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1535,
									"end": 1571,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "RETURN",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 585,
									"end": 4516,
									"name": "REVERT",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220485d28ce82b89521d10acc4d6d797a29036665e73741d7e66a4bef0e64d45bc164736f6c63430008140033",
									".code": [
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "F4EF8A6"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "12261EE7"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "38D52E0F"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "5CFFE9DE"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "613255AB"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "8C9F305F"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "D9D98CE4"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 4516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 4516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 4516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1914,
											"end": 1919,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1897,
											"end": 1920,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1897,
											"end": 1920,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1897,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1897,
											"end": 1920,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1951,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1897,
											"end": 1957,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1897,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1897,
											"end": 1957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1923,
											"end": 1953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1923,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1897,
											"end": 1957,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1897,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1897,
											"end": 1957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1897,
											"end": 1957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1897,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1897,
											"end": 1957,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3782,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 3782,
											"end": 3835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3790,
											"end": 3813,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3790,
											"end": 3813,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3782,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3782,
											"end": 3835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3782,
											"end": 3835,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 3782,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3867,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3867,
											"end": 3890,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3867,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3867,
											"end": 3890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3867,
											"end": 3890,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 3867,
											"end": 3890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3949,
											"end": 3953,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "23E30C8B"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4065,
											"end": 4075,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "A4"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "C4"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "C4"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4156,
											"name": "PUSH",
											"source": 9,
											"value": "439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9"
										},
										{
											"begin": 4044,
											"end": 4156,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4156,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4156,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3949,
											"end": 3953,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3949,
											"end": 3953,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4395,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "7E72C7D7"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3949,
											"end": 3953,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 4438,
											"end": 4481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "466C617368206C6F616E2072657061796D656E74206661696C65640000000000"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4348,
											"end": 4378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 4348,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4263,
											"end": 4327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4263,
											"end": 4327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 4263,
											"end": 4327,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "119B185CDA081B1BD85B8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4044,
											"end": 4107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4156,
											"name": "PUSH",
											"source": 9,
											"value": "439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3968,
											"end": 4009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 3968,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3925,
											"end": 3955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 3925,
											"end": 3955,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 810,
											"end": 829,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2AB739BAB83837B93A32B2103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2203,
											"end": 2452,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2203,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2327,
											"end": 2332,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2302,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 2302,
											"end": 2355,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2310,
											"end": 2333,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2302,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2302,
											"end": 2355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2302,
											"end": 2355,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 2302,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2410,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2203,
											"end": 2452,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2203,
											"end": 2452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2394,
											"end": 2410,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 585,
											"end": 4516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol",
								"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"contracts/contracts/interfaces/IAllowanceTransfer.sol",
								"contracts/contracts/interfaces/IEIP712.sol",
								"contracts/contracts/interfaces/IPermit2.sol",
								"contracts/contracts/interfaces/IRewardManager.sol",
								"contracts/contracts/interfaces/ISignatureTransfer.sol",
								"contracts/contracts/protocol/TuliaFlashPool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"asset()": "38d52e0f",
							"flashFee(address,uint256)": "d9d98ce4",
							"flashLoan(address,address,uint256,bytes)": "5cffe9de",
							"flashLoanFeeRate()": "8c9f305f",
							"maxFlashLoan(address)": "613255ab",
							"permit2()": "12261ee7",
							"rewardManager()": "0f4ef8a6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"contract IPermit2\",\"name\":\"_permit2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_flashLoanFeeRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flashLoanFeeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permit2\",\"outputs\":[{\"internalType\":\"contract IPermit2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardManager\",\"outputs\":[{\"internalType\":\"contract IRewardManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements flash loan functionalities with integrated fee management. This contract allows issuing flash loans backed by ERC20 tokens.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_asset\":\"The ERC20 token asset used for flash loans\",\"_flashLoanFeeRate\":\"The initial fee rate for flash loans issued by this pool\",\"_permit2\":\"The Permit2 contract utilized for permissioned token transfers\"}},\"flashFee(address,uint256)\":{\"params\":{\"amount\":\"The amount of the loan\",\"token\":\"The ERC20 token for which the fee is calculated\"},\"returns\":{\"_0\":\"The calculated fee amount\"}},\"flashLoan(address,address,uint256,bytes)\":{\"params\":{\"amount\":\"The amount of tokens to borrow\",\"data\":\"Arbitrary data passed to the borrower's `onFlashLoan` method\",\"receiver\":\"The borrower contract that must implement the IERC3156FlashBorrower interface\",\"token\":\"The ERC20 token to be borrowed\"},\"returns\":{\"_0\":\"true if the flash loan is paid back successfully within the same transaction\"}},\"maxFlashLoan(address)\":{\"params\":{\"token\":\"The ERC20 token address for which the max loan amount is queried\"},\"returns\":{\"_0\":\"The maximum amount available for a flash loan\"}}},\"title\":\"TuliaFlashPool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"asset()\":{\"notice\":\"ERC20 asset used for flash loans\"},\"constructor\":{\"notice\":\"Constructs the TuliaFlashPool lending pool\"},\"flashFee(address,uint256)\":{\"notice\":\"Calculates the flash loan fee for a given loan amount\"},\"flashLoan(address,address,uint256,bytes)\":{\"notice\":\"Initiates a flash loan transaction\"},\"flashLoanFeeRate()\":{\"notice\":\"Initial fee rate for flash loans issued by this pool\"},\"maxFlashLoan(address)\":{\"notice\":\"Returns the maximum loanable amount of the asset\"},\"permit2()\":{\"notice\":\"Permit2 contract utilized for permissioned token transfers\"},\"rewardManager()\":{\"notice\":\"RewardManager when lender waiting.  \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/protocol/TuliaFlashPool.sol\":\"TuliaFlashPool\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475\",\"dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x95d9eb59f21e885406d0e28b0510f9e1a0e7b4abe6636b5c966682927c65cfdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1cbff4d620ab51abe0c4ede9e4395bae53bcc3a7edd74e0eb08d7bdef155306\",\"dweb:/ipfs/QmQcnBK28GDH4S5uXWqAcdRY1KcusXH4CxAqp87rYLir6n\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contracts/contracts/interfaces/IAllowanceTransfer.sol\":{\"keccak256\":\"0x37f0ac203b6ef605c9533e1a739477e8e9dcea90710b40e645a367f8a21ace29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0104d72aeaec1cd66cc232e7de7b7ead08608efcc179491b8a66387614670b0\",\"dweb:/ipfs/QmfAZDyuNC9FXXbnJUwqHNwmAK6uRrXxtWEytLsxjskPsN\"]},\"contracts/contracts/interfaces/IEIP712.sol\":{\"keccak256\":\"0xfdccf2b9639070803cd0e4198427fb0df3cc452ca59bd3b8a0d957a9a4254138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7c936ac42ce89e827db905a1544397f8bdf46db34cdb6aa1b90dea42fdb4c72\",\"dweb:/ipfs/QmVgurxo1N31qZqkPBirw9Z7S9tLYmv6jSwQp8R8ur2cBk\"]},\"contracts/contracts/interfaces/IPermit2.sol\":{\"keccak256\":\"0xaa631cc9f53e699301d94233007110a345e6779011def484e8dd97b8fe0af771\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc0502cf19c9c18f320a3001201e89e350393b75837f6b7971de18b2de06f30d\",\"dweb:/ipfs/QmT9SfhdJ7VJNNrf94g4H5usyi7ShqWGx7Cqsz9jZTjX96\"]},\"contracts/contracts/interfaces/IRewardManager.sol\":{\"keccak256\":\"0x692870b248c0b71185a5c030f853306d6a4c3a25180a3f57ff56dfb2da59a9d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27ba33e21e32b7bfff41db71f93f4ba9a427659a2c04fdf8510087963dbcb62\",\"dweb:/ipfs/QmcnnmcjEc7gkPNHKLECceA9FdVryvK9qKppnakhXGgNMh\"]},\"contracts/contracts/interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x16a051e45a3f1ab341a8560aa106c483c3d0a3be4abc52225651c78939b18f93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7cda3c6ed2db1454b4a6ec1e418956d199019085d92163a038d0064615a5acb\",\"dweb:/ipfs/QmWDfZwi8jcGFBuiwHKq6iBWCZq2mA8HmkM9NNTzotMpXH\"]},\"contracts/contracts/protocol/TuliaFlashPool.sol\":{\"keccak256\":\"0x23337713df1570853ac2f9b7cfa86213017239477fb770af599f952cb1e71f31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f75a80f21d0d2c87c04c598f40793cad5c94949f7b628e950ab689ca9e20333a\",\"dweb:/ipfs/QmUN5ceiHc2eNNkHNJcEp9oS86pbVzZFbCxdkGcGfqBWUv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 69,
								"contract": "contracts/contracts/protocol/TuliaFlashPool.sol:TuliaFlashPool",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 623,
								"contract": "contracts/contracts/protocol/TuliaFlashPool.sol:TuliaFlashPool",
								"label": "rewardManager",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IRewardManager)466"
							},
							{
								"astId": 627,
								"contract": "contracts/contracts/protocol/TuliaFlashPool.sol:TuliaFlashPool",
								"label": "asset",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)201"
							},
							{
								"astId": 631,
								"contract": "contracts/contracts/protocol/TuliaFlashPool.sol:TuliaFlashPool",
								"label": "permit2",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IPermit2)433"
							},
							{
								"astId": 634,
								"contract": "contracts/contracts/protocol/TuliaFlashPool.sol:TuliaFlashPool",
								"label": "flashLoanFeeRate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_contract(IERC20)201": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IPermit2)433": {
								"encoding": "inplace",
								"label": "contract IPermit2",
								"numberOfBytes": "20"
							},
							"t_contract(IRewardManager)466": {
								"encoding": "inplace",
								"label": "contract IRewardManager",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"asset()": {
								"notice": "ERC20 asset used for flash loans"
							},
							"constructor": {
								"notice": "Constructs the TuliaFlashPool lending pool"
							},
							"flashFee(address,uint256)": {
								"notice": "Calculates the flash loan fee for a given loan amount"
							},
							"flashLoan(address,address,uint256,bytes)": {
								"notice": "Initiates a flash loan transaction"
							},
							"flashLoanFeeRate()": {
								"notice": "Initial fee rate for flash loans issued by this pool"
							},
							"maxFlashLoan(address)": {
								"notice": "Returns the maximum loanable amount of the asset"
							},
							"permit2()": {
								"notice": "Permit2 contract utilized for permissioned token transfers"
							},
							"rewardManager()": {
								"notice": "RewardManager when lender waiting.  "
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol",
					"exportedSymbols": {
						"IERC3156FlashBorrower": [
							19
						]
					},
					"id": 20,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "120:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC3156FlashBorrower",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "146:123:0",
								"text": " @dev Interface of the ERC3156 FlashBorrower, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]."
							},
							"fullyImplemented": false,
							"id": 19,
							"linearizedBaseContracts": [
								19
							],
							"name": "IERC3156FlashBorrower",
							"nameLocation": "280:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "308:405:0",
										"text": " @dev Receive a flash loan.\n @param initiator The initiator of the loan.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @param fee The additional amount of tokens to repay.\n @param data Arbitrary data structure, intended to contain user-defined parameters.\n @return The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\""
									},
									"functionSelector": "23e30c8b",
									"id": 18,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onFlashLoan",
									"nameLocation": "727:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "initiator",
												"nameLocation": "756:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "748:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "783:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "775:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "806:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "798:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "830:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "822:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "858:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "843:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "843:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:130:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "887:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 15,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "886:9:0"
									},
									"scope": 19,
									"src": "718:178:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 20,
							"src": "270:628:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "120:779:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol",
					"exportedSymbols": {
						"IERC3156FlashBorrower": [
							19
						],
						"IERC3156FlashLender": [
							58
						]
					},
					"id": 59,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 21,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol",
							"file": "./IERC3156FlashBorrower.sol",
							"id": 23,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 59,
							"sourceUnit": 20,
							"src": "144:66:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 22,
										"name": "IERC3156FlashBorrower",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 19,
										"src": "152:21:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC3156FlashLender",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 24,
								"nodeType": "StructuredDocumentation",
								"src": "212:121:1",
								"text": " @dev Interface of the ERC3156 FlashLender, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]."
							},
							"fullyImplemented": false,
							"id": 58,
							"linearizedBaseContracts": [
								58
							],
							"name": "IERC3156FlashLender",
							"nameLocation": "344:19:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "370:168:1",
										"text": " @dev The amount of currency available to be lended.\n @param token The loan currency.\n @return The amount of `token` that can be borrowed."
									},
									"functionSelector": "613255ab",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxFlashLoan",
									"nameLocation": "552:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "573:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "565:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:15:1"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "603:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "602:9:1"
									},
									"scope": 58,
									"src": "543:69:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "618:249:1",
										"text": " @dev The fee to be charged for a given loan.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @return The amount of `token` to be charged for the loan, on top of the returned principal."
									},
									"functionSelector": "d9d98ce4",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashFee",
									"nameLocation": "881:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "898:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "890:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "913:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "905:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "905:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:31:1"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "944:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "944:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "943:9:1"
									},
									"scope": 58,
									"src": "872:81:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "959:320:1",
										"text": " @dev Initiate a flash loan.\n @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @param data Arbitrary data structure, intended to contain user-defined parameters."
									},
									"functionSelector": "5cffe9de",
									"id": 57,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoan",
									"nameLocation": "1293:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1334:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1312:30:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$19",
													"typeString": "contract IERC3156FlashBorrower"
												},
												"typeName": {
													"id": 45,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 44,
														"name": "IERC3156FlashBorrower",
														"nameLocations": [
															"1312:21:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 19,
														"src": "1312:21:1"
													},
													"referencedDeclaration": 19,
													"src": "1312:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$19",
														"typeString": "contract IERC3156FlashBorrower"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1360:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1352:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1383:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1375:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1375:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1414:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1399:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 51,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1399:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1302:122:1"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1443:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 54,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1443:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:6:1"
									},
									"scope": 58,
									"src": "1284:165:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 59,
							"src": "334:1117:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:1334:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							123
						]
					},
					"id": 124,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 60,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 61,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 123,
							"linearizedBaseContracts": [
								123
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 64,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 123,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 62,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 63,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 67,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 123,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 65,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 66,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 69,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 123,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 68,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 72,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 73,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 77,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 123,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 80,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 83,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 88,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 92,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 69,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 93,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 98,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 99,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 123,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 106,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 107,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 123,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 117,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 118,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 116,
												"id": 120,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 114,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 123,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 124,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							201
						]
					},
					"id": 202,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 125,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 126,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 201,
							"linearizedBaseContracts": [
								201
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 135,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 144,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 201,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 201,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 201,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 201,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 185,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 201,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 197,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 201,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 202,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								135,
								144
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"contracts/contracts/interfaces/IAllowanceTransfer.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/IAllowanceTransfer.sol",
					"exportedSymbols": {
						"IAllowanceTransfer": [
							413
						],
						"IEIP712": [
							421
						]
					},
					"id": 414,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 203,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IEIP712.sol",
							"file": "./IEIP712.sol",
							"id": 205,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 414,
							"sourceUnit": 422,
							"src": "57:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 204,
										"name": "IEIP712",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 421,
										"src": "65:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 207,
										"name": "IEIP712",
										"nameLocations": [
											"362:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 421,
										"src": "362:7:4"
									},
									"id": 208,
									"nodeType": "InheritanceSpecifier",
									"src": "362:7:4"
								}
							],
							"canonicalName": "IAllowanceTransfer",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 206,
								"nodeType": "StructuredDocumentation",
								"src": "97:233:4",
								"text": "@title AllowanceTransfer\n @notice Handles ERC20 token permissions through signature based allowance setting and ERC20 token transfers by checking allowed amounts\n @dev Requires user's token approval on the Permit2 contract"
							},
							"fullyImplemented": false,
							"id": 413,
							"linearizedBaseContracts": [
								413,
								421
							],
							"name": "IAllowanceTransfer",
							"nameLocation": "340:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "376:145:4",
										"text": "@notice Thrown when an allowance on a token has expired.\n @param deadline The timestamp at which the allowed amount is no longer valid"
									},
									"errorSelector": "d81b2f2e",
									"id": 213,
									"name": "AllowanceExpired",
									"nameLocation": "532:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "557:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "549:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:18:4"
									},
									"src": "526:41:4"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "573:115:4",
										"text": "@notice Thrown when an allowance on a token has been depleted.\n @param amount The maximum amount allowed"
									},
									"errorSelector": "f96fb071",
									"id": 218,
									"name": "InsufficientAllowance",
									"nameLocation": "699:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "729:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "721:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "721:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "720:16:4"
									},
									"src": "693:44:4"
								},
								{
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "743:56:4",
										"text": "@notice Thrown when too many nonces are invalidated."
									},
									"errorSelector": "24d35a26",
									"id": 221,
									"name": "ExcessiveInvalidation",
									"nameLocation": "810:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "831:2:4"
									},
									"src": "804:30:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "840:84:4",
										"text": "@notice Emits an event when the owner successfully invalidates an ordered nonce."
									},
									"eventSelector": "55eb90d810e1700b35a8e7e25395ff7f2b2259abd7415ca2284dfb1c246418f3",
									"id": 234,
									"name": "NonceInvalidation",
									"nameLocation": "935:17:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "978:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "962:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1001:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "985:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1024:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1008:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"indexed": false,
												"mutability": "mutable",
												"name": "newNonce",
												"nameLocation": "1040:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1033:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 229,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1033:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldNonce",
												"nameLocation": "1057:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1050:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 231,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1050:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:119:4"
									},
									"src": "929:143:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "1078:99:4",
										"text": "@notice Emits an event when the owner successfully sets permissions on a token for the spender."
									},
									"eventSelector": "da9fa7c1b00402c17d0161b249b1ab8bbec047c5a52207b9c112deffd817036b",
									"id": 247,
									"name": "Approval",
									"nameLocation": "1188:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1222:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "1206:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1245:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "1229:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1268:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "1252:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1285:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "1277:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 242,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": false,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "1300:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "1293:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 244,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1293:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1196:120:4"
									},
									"src": "1182:135:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "1323:124:4",
										"text": "@notice Emits an event when the owner successfully sets permissions using a permit signature on a token for the spender."
									},
									"eventSelector": "c6a377bfc4eb120024a8ac08eef205be16b817020812c73223e81d1bdb9708ec",
									"id": 262,
									"name": "Permit",
									"nameLocation": "1458:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1490:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "1474:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1521:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "1505:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1505:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1552:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "1536:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1577:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "1569:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 255,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1569:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"indexed": false,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "1600:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "1593:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 257,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"indexed": false,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1627:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "1620:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 259,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1620:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1464:174:4"
									},
									"src": "1452:187:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "1645:98:4",
										"text": "@notice Emits an event when the owner sets the allowance back to 0 with the lockdown function."
									},
									"eventSelector": "89b1add15eff56b3dfe299ad94e01f2b52fbcb80ae1a3baea6ae8c04cb2b98a4",
									"id": 271,
									"name": "Lockdown",
									"nameLocation": "1754:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1779:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1763:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1794:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1786:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1786:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"indexed": false,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1809:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1801:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1801:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1762:55:4"
									},
									"src": "1748:70:4"
								},
								{
									"canonicalName": "IAllowanceTransfer.PermitDetails",
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "1824:39:4",
										"text": "@notice The permit data for a token"
									},
									"id": 281,
									"members": [
										{
											"constant": false,
											"id": 274,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "1938:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 281,
											"src": "1930:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 273,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1930:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 276,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "2008:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 281,
											"src": "2000:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 275,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "2000:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 278,
											"mutability": "mutable",
											"name": "expiration",
											"nameLocation": "2105:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 281,
											"src": "2098:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 277,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "2098:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 280,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "2220:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 281,
											"src": "2213:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 279,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "2213:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PermitDetails",
									"nameLocation": "1875:13:4",
									"nodeType": "StructDefinition",
									"scope": 413,
									"src": "1868:364:4",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.PermitSingle",
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "2238:66:4",
										"text": "@notice The permit message signed for a single token allowance"
									},
									"id": 290,
									"members": [
										{
											"constant": false,
											"id": 285,
											"mutability": "mutable",
											"name": "details",
											"nameLocation": "2407:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 290,
											"src": "2393:21:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PermitDetails_$281_storage_ptr",
												"typeString": "struct IAllowanceTransfer.PermitDetails"
											},
											"typeName": {
												"id": 284,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 283,
													"name": "PermitDetails",
													"nameLocations": [
														"2393:13:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 281,
													"src": "2393:13:4"
												},
												"referencedDeclaration": 281,
												"src": "2393:13:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitDetails_$281_storage_ptr",
													"typeString": "struct IAllowanceTransfer.PermitDetails"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 287,
											"mutability": "mutable",
											"name": "spender",
											"nameLocation": "2486:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 290,
											"src": "2478:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 286,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2478:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 289,
											"mutability": "mutable",
											"name": "sigDeadline",
											"nameLocation": "2555:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 290,
											"src": "2547:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 288,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2547:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PermitSingle",
									"nameLocation": "2316:12:4",
									"nodeType": "StructDefinition",
									"scope": 413,
									"src": "2309:264:4",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.PermitBatch",
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2579:67:4",
										"text": "@notice The permit message signed for multiple token allowances"
									},
									"id": 300,
									"members": [
										{
											"constant": false,
											"id": 295,
											"mutability": "mutable",
											"name": "details",
											"nameLocation": "2753:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 300,
											"src": "2737:23:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_PermitDetails_$281_storage_$dyn_storage_ptr",
												"typeString": "struct IAllowanceTransfer.PermitDetails[]"
											},
											"typeName": {
												"baseType": {
													"id": 293,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 292,
														"name": "PermitDetails",
														"nameLocations": [
															"2737:13:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 281,
														"src": "2737:13:4"
													},
													"referencedDeclaration": 281,
													"src": "2737:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitDetails_$281_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitDetails"
													}
												},
												"id": 294,
												"nodeType": "ArrayTypeName",
												"src": "2737:15:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PermitDetails_$281_storage_$dyn_storage_ptr",
													"typeString": "struct IAllowanceTransfer.PermitDetails[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 297,
											"mutability": "mutable",
											"name": "spender",
											"nameLocation": "2832:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 300,
											"src": "2824:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 296,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2824:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 299,
											"mutability": "mutable",
											"name": "sigDeadline",
											"nameLocation": "2901:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 300,
											"src": "2893:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 298,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2893:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PermitBatch",
									"nameLocation": "2658:11:4",
									"nodeType": "StructDefinition",
									"scope": 413,
									"src": "2651:268:4",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.PackedAllowance",
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "2925:217:4",
										"text": "@notice The saved permissions\n @dev This info is saved per owner, per token, per spender and all signed over in the permit message\n @dev Setting amount to type(uint160).max sets an unlimited approval"
									},
									"id": 308,
									"members": [
										{
											"constant": false,
											"id": 303,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "3214:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 308,
											"src": "3206:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 302,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "3206:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 305,
											"mutability": "mutable",
											"name": "expiration",
											"nameLocation": "3266:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 308,
											"src": "3259:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 304,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "3259:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 307,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "3381:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 308,
											"src": "3374:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 306,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "3374:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PackedAllowance",
									"nameLocation": "3154:15:4",
									"nodeType": "StructDefinition",
									"scope": 413,
									"src": "3147:246:4",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.TokenSpenderPair",
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "3399:33:4",
										"text": "@notice A token spender pair."
									},
									"id": 314,
									"members": [
										{
											"constant": false,
											"id": 311,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "3524:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 314,
											"src": "3516:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 310,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3516:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 313,
											"mutability": "mutable",
											"name": "spender",
											"nameLocation": "3578:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 314,
											"src": "3570:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 312,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3570:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenSpenderPair",
									"nameLocation": "3444:16:4",
									"nodeType": "StructDefinition",
									"scope": 413,
									"src": "3437:155:4",
									"visibility": "public"
								},
								{
									"canonicalName": "IAllowanceTransfer.AllowanceTransferDetails",
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "3598:41:4",
										"text": "@notice Details for a token transfer."
									},
									"id": 324,
									"members": [
										{
											"constant": false,
											"id": 317,
											"mutability": "mutable",
											"name": "from",
											"nameLocation": "3728:4:4",
											"nodeType": "VariableDeclaration",
											"scope": 324,
											"src": "3720:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 316,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3720:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 319,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "3788:2:4",
											"nodeType": "VariableDeclaration",
											"scope": 324,
											"src": "3780:10:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 318,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3780:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 321,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "3843:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 324,
											"src": "3835:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 320,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "3835:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 323,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "3906:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 324,
											"src": "3898:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 322,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3898:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AllowanceTransferDetails",
									"nameLocation": "3651:24:4",
									"nodeType": "StructDefinition",
									"scope": 413,
									"src": "3644:274:4",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "3924:455:4",
										"text": "@notice A mapping from owner address to token address to spender address to PackedAllowance struct, which contains details and conditions of the approval.\n @notice The mapping is indexed in the above order see: allowance[ownerAddress][tokenAddress][spenderAddress]\n @dev The packed slot holds the allowed amount, expiration at which the allowed amount is no longer valid, and current nonce thats updated on any signature based approvals."
									},
									"functionSelector": "927da105",
									"id": 340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4393:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4411:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "4403:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4403:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4425:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "4417:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4417:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4440:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "4432:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4432:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4402:46:4"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4504:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "4496:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 333,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4496:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "4519:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "4512:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 335,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "4512:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "4538:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "4531:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 337,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "4531:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4495:49:4"
									},
									"scope": 413,
									"src": "4384:161:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "4551:498:4",
										"text": "@notice Approves the spender to use up to amount of the specified token up until the expiration\n @param token The token to approve\n @param spender The spender address to approve\n @param amount The approved amount of the token\n @param expiration The timestamp at which the approval is no longer valid\n @dev The packed allowance also holds a nonce, which will stay unchanged in approve\n @dev Setting amount to type(uint160).max sets an unlimited approval"
									},
									"functionSelector": "87517c45",
									"id": 352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5063:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5079:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "5071:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5071:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5094:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "5086:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5086:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5111:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "5103:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 346,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "5103:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "5126:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "5119:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 348,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "5119:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5070:67:4"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5146:0:4"
									},
									"scope": 413,
									"src": "5054:93:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "5153:407:4",
										"text": "@notice Permit a spender to a given amount of the owners token via the owner's EIP-712 signature\n @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n @param owner The owner of the tokens being approved\n @param permitSingle Data signed over by the owner specifying the terms of approval\n @param signature The owner's signature over the permit data"
									},
									"functionSelector": "2b67b570",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "5574:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5589:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5581:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "permitSingle",
												"nameLocation": "5616:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5596:32:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitSingle_$290_memory_ptr",
													"typeString": "struct IAllowanceTransfer.PermitSingle"
												},
												"typeName": {
													"id": 357,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 356,
														"name": "PermitSingle",
														"nameLocations": [
															"5596:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 290,
														"src": "5596:12:4"
													},
													"referencedDeclaration": 290,
													"src": "5596:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitSingle_$290_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitSingle"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "5645:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5630:24:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 359,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5630:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5580:75:4"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5664:0:4"
									},
									"scope": 413,
									"src": "5565:100:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "5671:411:4",
										"text": "@notice Permit a spender to the signed amounts of the owners tokens via the owner's EIP-712 signature\n @dev May fail if the owner's nonce was invalidated in-flight by invalidateNonce\n @param owner The owner of the tokens being approved\n @param permitBatch Data signed over by the owner specifying the terms of approval\n @param signature The owner's signature over the permit data"
									},
									"functionSelector": "2a2d80d1",
									"id": 374,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "6096:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6111:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "6103:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6103:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "permitBatch",
												"nameLocation": "6137:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "6118:30:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitBatch_$300_memory_ptr",
													"typeString": "struct IAllowanceTransfer.PermitBatch"
												},
												"typeName": {
													"id": 368,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 367,
														"name": "PermitBatch",
														"nameLocations": [
															"6118:11:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 300,
														"src": "6118:11:4"
													},
													"referencedDeclaration": 300,
													"src": "6118:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitBatch_$300_storage_ptr",
														"typeString": "struct IAllowanceTransfer.PermitBatch"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "6165:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "6150:24:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 370,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6150:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6102:73:4"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6184:0:4"
									},
									"scope": 413,
									"src": "6087:98:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "6191:386:4",
										"text": "@notice Transfer approved tokens from one address to another\n @param from The address to transfer from\n @param to The address of the recipient\n @param amount The amount of the token to transfer\n @param token The token address to transfer\n @dev Requires the from address to have approved at least the desired amount\n of tokens to msg.sender."
									},
									"functionSelector": "36c78516",
									"id": 386,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6591:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6612:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "6604:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6604:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6626:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "6618:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6618:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6638:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "6630:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 380,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6630:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6654:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "6646:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6603:57:4"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6669:0:4"
									},
									"scope": 413,
									"src": "6582:88:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "6676:264:4",
										"text": "@notice Transfer approved tokens in a batch\n @param transferDetails Array of owners, recipients, amounts, and tokens for the transfers\n @dev Requires the from addresses to have approved at least the desired amount\n of tokens to msg.sender."
									},
									"functionSelector": "0d58b1db",
									"id": 394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6954:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "7003:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "6967:51:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_AllowanceTransferDetails_$324_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails[]"
												},
												"typeName": {
													"baseType": {
														"id": 389,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 388,
															"name": "AllowanceTransferDetails",
															"nameLocations": [
																"6967:24:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 324,
															"src": "6967:24:4"
														},
														"referencedDeclaration": 324,
														"src": "6967:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AllowanceTransferDetails_$324_storage_ptr",
															"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails"
														}
													},
													"id": 390,
													"nodeType": "ArrayTypeName",
													"src": "6967:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_AllowanceTransferDetails_$324_storage_$dyn_storage_ptr",
														"typeString": "struct IAllowanceTransfer.AllowanceTransferDetails[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6966:53:4"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7028:0:4"
									},
									"scope": 413,
									"src": "6945:84:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "7035:167:4",
										"text": "@notice Enables performing a \"lockdown\" of the sender's Permit2 identity\n by batch revoking approvals\n @param approvals Array of approvals to revoke."
									},
									"functionSelector": "cc53287f",
									"id": 402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lockdown",
									"nameLocation": "7216:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "approvals",
												"nameLocation": "7253:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "7225:37:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenSpenderPair_$314_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IAllowanceTransfer.TokenSpenderPair[]"
												},
												"typeName": {
													"baseType": {
														"id": 397,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 396,
															"name": "TokenSpenderPair",
															"nameLocations": [
																"7225:16:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 314,
															"src": "7225:16:4"
														},
														"referencedDeclaration": 314,
														"src": "7225:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenSpenderPair_$314_storage_ptr",
															"typeString": "struct IAllowanceTransfer.TokenSpenderPair"
														}
													},
													"id": 398,
													"nodeType": "ArrayTypeName",
													"src": "7225:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenSpenderPair_$314_storage_$dyn_storage_ptr",
														"typeString": "struct IAllowanceTransfer.TokenSpenderPair[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7224:39:4"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7272:0:4"
									},
									"scope": 413,
									"src": "7207:66:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "7279:332:4",
										"text": "@notice Invalidate nonces for a given (token, spender) pair\n @param token The token to invalidate nonces for\n @param spender The spender to invalidate nonces for\n @param newNonce The new nonce to set. Invalidates all nonces less than it.\n @dev Can't invalidate more than 2**16 nonces per transaction."
									},
									"functionSelector": "65d9723c",
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "invalidateNonces",
									"nameLocation": "7625:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7650:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "7642:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7642:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7665:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "7657:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7657:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "newNonce",
												"nameLocation": "7681:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "7674:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 408,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "7674:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7641:49:4"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7699:0:4"
									},
									"scope": 413,
									"src": "7616:84:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 414,
							"src": "330:7372:4",
							"usedErrors": [
								213,
								218,
								221
							],
							"usedEvents": [
								234,
								247,
								262,
								271
							]
						}
					],
					"src": "32:7671:4"
				},
				"id": 4
			},
			"contracts/contracts/interfaces/IEIP712.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/IEIP712.sol",
					"exportedSymbols": {
						"IEIP712": [
							421
						]
					},
					"id": 422,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 415,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IEIP712",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 421,
							"linearizedBaseContracts": [
								421
							],
							"name": "IEIP712",
							"nameLocation": "67:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3644e515",
									"id": 420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "90:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "106:2:5"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "132:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 417,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "131:9:5"
									},
									"scope": 421,
									"src": "81:60:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 422,
							"src": "57:86:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:112:5"
				},
				"id": 5
			},
			"contracts/contracts/interfaces/IPermit2.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/IPermit2.sol",
					"exportedSymbols": {
						"IAllowanceTransfer": [
							413
						],
						"IPermit2": [
							433
						],
						"ISignatureTransfer": [
							606
						]
					},
					"id": 434,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 423,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "contracts/contracts/interfaces/ISignatureTransfer.sol",
							"file": "./ISignatureTransfer.sol",
							"id": 425,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 434,
							"sourceUnit": 607,
							"src": "57:60:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 424,
										"name": "ISignatureTransfer",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 606,
										"src": "65:18:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IAllowanceTransfer.sol",
							"file": "./IAllowanceTransfer.sol",
							"id": 427,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 434,
							"sourceUnit": 414,
							"src": "118:60:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 426,
										"name": "IAllowanceTransfer",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 413,
										"src": "126:18:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 429,
										"name": "ISignatureTransfer",
										"nameLocations": [
											"411:18:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 606,
										"src": "411:18:6"
									},
									"id": 430,
									"nodeType": "InheritanceSpecifier",
									"src": "411:18:6"
								},
								{
									"baseName": {
										"id": 431,
										"name": "IAllowanceTransfer",
										"nameLocations": [
											"431:18:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 413,
										"src": "431:18:6"
									},
									"id": 432,
									"nodeType": "InheritanceSpecifier",
									"src": "431:18:6"
								}
							],
							"canonicalName": "IPermit2",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 428,
								"nodeType": "StructuredDocumentation",
								"src": "180:209:6",
								"text": "@notice Permit2 handles signature-based transfers in SignatureTransfer and allowance-based transfers in AllowanceTransfer.\n @dev Users must approve Permit2 before calling any of the transfer functions."
							},
							"fullyImplemented": false,
							"id": 433,
							"linearizedBaseContracts": [
								433,
								413,
								606,
								421
							],
							"name": "IPermit2",
							"nameLocation": "399:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 434,
							"src": "389:158:6",
							"usedErrors": [
								213,
								218,
								221,
								478,
								481
							],
							"usedEvents": [
								234,
								247,
								262,
								271,
								490
							]
						}
					],
					"src": "32:516:6"
				},
				"id": 6
			},
			"contracts/contracts/interfaces/IRewardManager.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/IRewardManager.sol",
					"exportedSymbols": {
						"IRewardManager": [
							466
						]
					},
					"id": 467,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 435,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRewardManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 466,
							"linearizedBaseContracts": [
								466
							],
							"name": "IRewardManager",
							"nameLocation": "71:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "93:213:7",
										"text": "@notice Registers a pool to be eligible for rewards, initializing its reward token.\n @param pool The address of the pool to register.\n @param rewardToken The ERC20 address for the reward token."
									},
									"functionSelector": "77ff76e7",
									"id": 445,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerPool",
									"nameLocation": "321:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "342:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "334:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "rewardToken",
												"nameLocation": "356:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "348:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "isFlashPool",
												"nameLocation": "374:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "369:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 441,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "369:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:53:7"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "395:0:7"
									},
									"scope": 466,
									"src": "312:84:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "404:94:7",
										"text": "@notice Accrues rewards for a specific pool.\n @param pool The address of the pool."
									},
									"functionSelector": "3d39955c",
									"id": 451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "accrueRewards",
									"nameLocation": "513:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "535:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "527:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "526:14:7"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "549:0:7"
									},
									"scope": 466,
									"src": "504:46:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "558:187:7",
										"text": "@notice Claims rewards for either the lender or borrower.\n @param pool The address of the pool.\n @param isLender True if the lender is claiming, false if the borrower."
									},
									"functionSelector": "491c011a",
									"id": 459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nameLocation": "760:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "781:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "773:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "isLender",
												"nameLocation": "792:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "787:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 455,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "787:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:29:7"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "810:0:7"
									},
									"scope": 466,
									"src": "751:60:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "819:91:7",
										"text": "@notice Deregisters a pool.\n @param pool The address of the pool to deregister."
									},
									"functionSelector": "7e72c7d7",
									"id": 465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deregisterPool",
									"nameLocation": "925:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "948:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "940:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:14:7"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "962:0:7"
									},
									"scope": 466,
									"src": "916:47:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 467,
							"src": "61:905:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:935:7"
				},
				"id": 7
			},
			"contracts/contracts/interfaces/ISignatureTransfer.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/interfaces/ISignatureTransfer.sol",
					"exportedSymbols": {
						"IEIP712": [
							421
						],
						"ISignatureTransfer": [
							606
						]
					},
					"id": 607,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 468,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IEIP712.sol",
							"file": "./IEIP712.sol",
							"id": 470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 607,
							"sourceUnit": 422,
							"src": "58:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 469,
										"name": "IEIP712",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 421,
										"src": "66:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 472,
										"name": "IEIP712",
										"nameLocations": [
											"297:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 421,
										"src": "297:7:8"
									},
									"id": 473,
									"nodeType": "InheritanceSpecifier",
									"src": "297:7:8"
								}
							],
							"canonicalName": "ISignatureTransfer",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 471,
								"nodeType": "StructuredDocumentation",
								"src": "98:167:8",
								"text": "@title SignatureTransfer\n @notice Handles ERC20 token transfers through signature based actions\n @dev Requires user's token approval on the Permit2 contract"
							},
							"fullyImplemented": false,
							"id": 606,
							"linearizedBaseContracts": [
								606,
								421
							],
							"name": "ISignatureTransfer",
							"nameLocation": "275:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "311:176:8",
										"text": "@notice Thrown when the requested amount for a transfer is larger than the permissioned amount\n @param maxAmount The maximum amount a spender can request to transfer"
									},
									"errorSelector": "3728b83d",
									"id": 478,
									"name": "InvalidAmount",
									"nameLocation": "498:13:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "maxAmount",
												"nameLocation": "520:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "512:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "511:19:8"
									},
									"src": "492:39:8"
								},
								{
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "537:261:8",
										"text": "@notice Thrown when the number of tokens permissioned to a spender does not match the number of tokens being transferred\n @dev If the spender does not need to transfer the number of tokens permitted, the spender can request amount 0 to be transferred"
									},
									"errorSelector": "ff633a38",
									"id": 481,
									"name": "LengthMismatch",
									"nameLocation": "809:14:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "823:2:8"
									},
									"src": "803:23:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "832:86:8",
										"text": "@notice Emits an event when the owner successfully invalidates an unordered nonce."
									},
									"eventSelector": "3704902f963766a4e561bbaab6e6cdc1b1dd12f6e9e99648da8843b3f46b918d",
									"id": 490,
									"name": "UnorderedNonceInvalidation",
									"nameLocation": "929:26:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "972:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "956:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "956:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"indexed": false,
												"mutability": "mutable",
												"name": "word",
												"nameLocation": "987:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "979:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"indexed": false,
												"mutability": "mutable",
												"name": "mask",
												"nameLocation": "1001:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "993:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "955:51:8"
									},
									"src": "923:84:8"
								},
								{
									"canonicalName": "ISignatureTransfer.TokenPermissions",
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "1013:95:8",
										"text": "@notice The token and amount details for a transfer signed in the permit transfer signature"
									},
									"id": 496,
									"members": [
										{
											"constant": false,
											"id": 493,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "1186:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 496,
											"src": "1178:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 492,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1178:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 495,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1257:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 496,
											"src": "1249:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 494,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1249:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenPermissions",
									"nameLocation": "1120:16:8",
									"nodeType": "StructDefinition",
									"scope": 606,
									"src": "1113:157:8",
									"visibility": "public"
								},
								{
									"canonicalName": "ISignatureTransfer.PermitTransferFrom",
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "1276:65:8",
										"text": "@notice The signed permit message for a single token transfer"
									},
									"id": 505,
									"members": [
										{
											"constant": false,
											"id": 500,
											"mutability": "mutable",
											"name": "permitted",
											"nameLocation": "1399:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 505,
											"src": "1382:26:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenPermissions_$496_storage_ptr",
												"typeString": "struct ISignatureTransfer.TokenPermissions"
											},
											"typeName": {
												"id": 499,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 498,
													"name": "TokenPermissions",
													"nameLocations": [
														"1382:16:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 496,
													"src": "1382:16:8"
												},
												"referencedDeclaration": 496,
												"src": "1382:16:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenPermissions_$496_storage_ptr",
													"typeString": "struct ISignatureTransfer.TokenPermissions"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 502,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "1515:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 505,
											"src": "1507:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 501,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1507:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 504,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1582:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 505,
											"src": "1574:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 503,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1574:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PermitTransferFrom",
									"nameLocation": "1353:18:8",
									"nodeType": "StructDefinition",
									"scope": 606,
									"src": "1346:251:8",
									"visibility": "public"
								},
								{
									"canonicalName": "ISignatureTransfer.SignatureTransferDetails",
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "1603:266:8",
										"text": "@notice Specifies the recipient address and amount for batched transfers.\n @dev Recipients and amounts correspond to the index of the signed token permissions array.\n @dev Reverts if the requested amount is greater than the permitted signed amount."
									},
									"id": 511,
									"members": [
										{
											"constant": false,
											"id": 508,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "1953:2:8",
											"nodeType": "VariableDeclaration",
											"scope": 511,
											"src": "1945:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 507,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1945:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 510,
											"mutability": "mutable",
											"name": "requestedAmount",
											"nameLocation": "2009:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 511,
											"src": "2001:23:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 509,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2001:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SignatureTransferDetails",
									"nameLocation": "1881:24:8",
									"nodeType": "StructDefinition",
									"scope": 606,
									"src": "1874:157:8",
									"visibility": "public"
								},
								{
									"canonicalName": "ISignatureTransfer.PermitBatchTransferFrom",
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "2037:243:8",
										"text": "@notice Used to reconstruct the signed permit message for multiple token transfers\n @dev Do not need to pass in spender address as it is required that it is msg.sender\n @dev Note that a user still signs over a spender address"
									},
									"id": 521,
									"members": [
										{
											"constant": false,
											"id": 516,
											"mutability": "mutable",
											"name": "permitted",
											"nameLocation": "2418:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 521,
											"src": "2399:28:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_TokenPermissions_$496_storage_$dyn_storage_ptr",
												"typeString": "struct ISignatureTransfer.TokenPermissions[]"
											},
											"typeName": {
												"baseType": {
													"id": 514,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 513,
														"name": "TokenPermissions",
														"nameLocations": [
															"2399:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 496,
														"src": "2399:16:8"
													},
													"referencedDeclaration": 496,
													"src": "2399:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenPermissions_$496_storage_ptr",
														"typeString": "struct ISignatureTransfer.TokenPermissions"
													}
												},
												"id": 515,
												"nodeType": "ArrayTypeName",
												"src": "2399:18:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenPermissions_$496_storage_$dyn_storage_ptr",
													"typeString": "struct ISignatureTransfer.TokenPermissions[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 518,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "2534:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 521,
											"src": "2526:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 517,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2526:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 520,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2601:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 521,
											"src": "2593:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 519,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2593:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PermitBatchTransferFrom",
									"nameLocation": "2292:23:8",
									"nodeType": "StructDefinition",
									"scope": 606,
									"src": "2285:331:8",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "2622:483:8",
										"text": "@notice A map from token owner address and a caller specified word index to a bitmap. Used to set bits in the bitmap to prevent against signature replay protection\n @dev Uses unordered nonces so that permit messages do not need to be spent in a certain order\n @dev The mapping is indexed first by the token owner, then by an index specified in the nonce\n @dev It returns a uint256 bitmap\n @dev The index, or wordPosition is capped at type(uint248).max"
									},
									"functionSelector": "4fe02b44",
									"id": 531,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonceBitmap",
									"nameLocation": "3119:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "3131:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3131:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "3140:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3140:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3130:18:8"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "3172:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3172:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3171:9:8"
									},
									"scope": 606,
									"src": "3110:71:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "3187:413:8",
										"text": "@notice Transfers a token using a signed permit message\n @dev Reverts if the requested amount is greater than the permitted signed amount\n @param permit The permit data signed over by the owner\n @param owner The owner of the tokens to transfer\n @param transferDetails The spender's requested transfer details for the permitted token\n @param signature The signature to verify"
									},
									"functionSelector": "30f28b7a",
									"id": 545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permitTransferFrom",
									"nameLocation": "3614:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "3668:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "3642:32:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitTransferFrom_$505_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitTransferFrom"
												},
												"typeName": {
													"id": 534,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 533,
														"name": "PermitTransferFrom",
														"nameLocations": [
															"3642:18:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 505,
														"src": "3642:18:8"
													},
													"referencedDeclaration": 505,
													"src": "3642:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitTransferFrom_$505_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitTransferFrom"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "3718:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "3684:49:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SignatureTransferDetails_$511_calldata_ptr",
													"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
												},
												"typeName": {
													"id": 537,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 536,
														"name": "SignatureTransferDetails",
														"nameLocations": [
															"3684:24:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 511,
														"src": "3684:24:8"
													},
													"referencedDeclaration": 511,
													"src": "3684:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SignatureTransferDetails_$511_storage_ptr",
														"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3751:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "3743:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3743:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3781:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "3766:24:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 541,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3766:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3632:164:8"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3805:0:8"
									},
									"scope": 606,
									"src": "3605:201:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "3812:815:8",
										"text": "@notice Transfers a token using a signed permit message\n @notice Includes extra data provided by the caller to verify signature over\n @dev The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\n @dev Reverts if the requested amount is greater than the permitted signed amount\n @param permit The permit data signed over by the owner\n @param owner The owner of the tokens to transfer\n @param transferDetails The spender's requested transfer details for the permitted token\n @param witness Extra data to include when checking the user signature\n @param witnessTypeString The EIP-712 type definition for remaining string stub of the typehash\n @param signature The signature to verify"
									},
									"functionSelector": "137c29fe",
									"id": 563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permitWitnessTransferFrom",
									"nameLocation": "4641:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "4702:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "4676:32:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitTransferFrom_$505_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitTransferFrom"
												},
												"typeName": {
													"id": 548,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 547,
														"name": "PermitTransferFrom",
														"nameLocations": [
															"4676:18:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 505,
														"src": "4676:18:8"
													},
													"referencedDeclaration": 505,
													"src": "4676:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitTransferFrom_$505_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitTransferFrom"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "4752:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "4718:49:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SignatureTransferDetails_$511_calldata_ptr",
													"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
												},
												"typeName": {
													"id": 551,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 550,
														"name": "SignatureTransferDetails",
														"nameLocations": [
															"4718:24:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 511,
														"src": "4718:24:8"
													},
													"referencedDeclaration": 511,
													"src": "4718:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SignatureTransferDetails_$511_storage_ptr",
														"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4785:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "4777:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4777:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "witness",
												"nameLocation": "4808:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "4800:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 555,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4800:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "witnessTypeString",
												"nameLocation": "4841:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "4825:33:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 557,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4825:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "4883:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "4868:24:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 559,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4868:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4666:232:8"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4907:0:8"
									},
									"scope": 606,
									"src": "4632:276:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "4914:335:8",
										"text": "@notice Transfers multiple tokens using a signed permit message\n @param permit The permit data signed over by the owner\n @param owner The owner of the tokens to transfer\n @param transferDetails Specifies the recipient and requested amount for the token transfer\n @param signature The signature to verify"
									},
									"functionSelector": "edd9444b",
									"id": 578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permitTransferFrom",
									"nameLocation": "5263:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "5322:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "5291:37:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$521_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
												},
												"typeName": {
													"id": 566,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 565,
														"name": "PermitBatchTransferFrom",
														"nameLocations": [
															"5291:23:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 521,
														"src": "5291:23:8"
													},
													"referencedDeclaration": 521,
													"src": "5291:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$521_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "5374:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "5338:51:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$511_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ISignatureTransfer.SignatureTransferDetails[]"
												},
												"typeName": {
													"baseType": {
														"id": 569,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 568,
															"name": "SignatureTransferDetails",
															"nameLocations": [
																"5338:24:8"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 511,
															"src": "5338:24:8"
														},
														"referencedDeclaration": 511,
														"src": "5338:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SignatureTransferDetails_$511_storage_ptr",
															"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
														}
													},
													"id": 570,
													"nodeType": "ArrayTypeName",
													"src": "5338:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$511_storage_$dyn_storage_ptr",
														"typeString": "struct ISignatureTransfer.SignatureTransferDetails[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5407:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "5399:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5399:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "5437:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "5422:24:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 574,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5422:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5281:171:8"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5461:0:8"
									},
									"scope": 606,
									"src": "5254:208:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "5468:737:8",
										"text": "@notice Transfers multiple tokens using a signed permit message\n @dev The witness type string must follow EIP712 ordering of nested structs and must include the TokenPermissions type definition\n @notice Includes extra data provided by the caller to verify signature over\n @param permit The permit data signed over by the owner\n @param owner The owner of the tokens to transfer\n @param transferDetails Specifies the recipient and requested amount for the token transfer\n @param witness Extra data to include when checking the user signature\n @param witnessTypeString The EIP-712 type definition for remaining string stub of the typehash\n @param signature The signature to verify"
									},
									"functionSelector": "fe8ec1a7",
									"id": 597,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permitWitnessTransferFrom",
									"nameLocation": "6219:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "permit",
												"nameLocation": "6285:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "6254:37:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$521_memory_ptr",
													"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
												},
												"typeName": {
													"id": 581,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 580,
														"name": "PermitBatchTransferFrom",
														"nameLocations": [
															"6254:23:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 521,
														"src": "6254:23:8"
													},
													"referencedDeclaration": 521,
													"src": "6254:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitBatchTransferFrom_$521_storage_ptr",
														"typeString": "struct ISignatureTransfer.PermitBatchTransferFrom"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "transferDetails",
												"nameLocation": "6337:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "6301:51:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$511_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ISignatureTransfer.SignatureTransferDetails[]"
												},
												"typeName": {
													"baseType": {
														"id": 584,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 583,
															"name": "SignatureTransferDetails",
															"nameLocations": [
																"6301:24:8"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 511,
															"src": "6301:24:8"
														},
														"referencedDeclaration": 511,
														"src": "6301:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SignatureTransferDetails_$511_storage_ptr",
															"typeString": "struct ISignatureTransfer.SignatureTransferDetails"
														}
													},
													"id": 585,
													"nodeType": "ArrayTypeName",
													"src": "6301:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_SignatureTransferDetails_$511_storage_$dyn_storage_ptr",
														"typeString": "struct ISignatureTransfer.SignatureTransferDetails[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6370:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "6362:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6362:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "witness",
												"nameLocation": "6393:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "6385:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 589,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6385:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "witnessTypeString",
												"nameLocation": "6426:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "6410:33:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 591,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6410:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "6468:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "6453:24:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 593,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6453:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6244:239:8"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6492:0:8"
									},
									"scope": 606,
									"src": "6210:283:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "6499:294:8",
										"text": "@notice Invalidates the bits specified in mask for the bitmap at the word position\n @dev The wordPos is maxed at type(uint248).max\n @param wordPos A number to index the nonceBitmap at\n @param mask A bitmap masked against msg.sender's current bitmap at the word position"
									},
									"functionSelector": "3ff9dcb1",
									"id": 605,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "invalidateUnorderedNonces",
									"nameLocation": "6807:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "wordPos",
												"nameLocation": "6841:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "6833:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6833:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "mask",
												"nameLocation": "6858:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "6850:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6850:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6832:31:8"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6872:0:8"
									},
									"scope": 606,
									"src": "6798:75:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 607,
							"src": "265:6610:8",
							"usedErrors": [
								478,
								481
							],
							"usedEvents": [
								490
							]
						}
					],
					"src": "32:6844:8"
				},
				"id": 8
			},
			"contracts/contracts/protocol/TuliaFlashPool.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/protocol/TuliaFlashPool.sol",
					"exportedSymbols": {
						"IAllowanceTransfer": [
							413
						],
						"IERC20": [
							201
						],
						"IERC3156FlashBorrower": [
							19
						],
						"IERC3156FlashLender": [
							58
						],
						"IPermit2": [
							433
						],
						"IRewardManager": [
							466
						],
						"ISignatureTransfer": [
							606
						],
						"ReentrancyGuard": [
							123
						],
						"TuliaFlashPool": [
							859
						]
					},
					"id": 860,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 608,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 609,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 860,
							"sourceUnit": 202,
							"src": "60:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 610,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 860,
							"sourceUnit": 124,
							"src": "118:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol",
							"id": 611,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 860,
							"sourceUnit": 59,
							"src": "182:68:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol",
							"id": 612,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 860,
							"sourceUnit": 20,
							"src": "252:70:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IPermit2.sol",
							"file": "../interfaces/IPermit2.sol",
							"id": 613,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 860,
							"sourceUnit": 434,
							"src": "324:36:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/interfaces/IRewardManager.sol",
							"file": "../interfaces/IRewardManager.sol",
							"id": 614,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 860,
							"sourceUnit": 467,
							"src": "362:42:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 616,
										"name": "IERC3156FlashLender",
										"nameLocations": [
											"612:19:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 58,
										"src": "612:19:9"
									},
									"id": 617,
									"nodeType": "InheritanceSpecifier",
									"src": "612:19:9"
								},
								{
									"baseName": {
										"id": 618,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"633:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 123,
										"src": "633:15:9"
									},
									"id": 619,
									"nodeType": "InheritanceSpecifier",
									"src": "633:15:9"
								}
							],
							"canonicalName": "TuliaFlashPool",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 615,
								"nodeType": "StructuredDocumentation",
								"src": "408:177:9",
								"text": "@title TuliaFlashPool\n @dev Implements flash loan functionalities with integrated fee management.\n This contract allows issuing flash loans backed by ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 859,
							"linearizedBaseContracts": [
								859,
								123,
								58
							],
							"name": "TuliaFlashPool",
							"nameLocation": "594:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "664:48:9",
										"text": "@notice RewardManager when lender waiting.  "
									},
									"functionSelector": "0f4ef8a6",
									"id": 623,
									"mutability": "mutable",
									"name": "rewardManager",
									"nameLocation": "740:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 859,
									"src": "718:35:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IRewardManager_$466",
										"typeString": "contract IRewardManager"
									},
									"typeName": {
										"id": 622,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 621,
											"name": "IRewardManager",
											"nameLocations": [
												"718:14:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 466,
											"src": "718:14:9"
										},
										"referencedDeclaration": 466,
										"src": "718:14:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IRewardManager_$466",
											"typeString": "contract IRewardManager"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "760:44:9",
										"text": "@notice ERC20 asset used for flash loans"
									},
									"functionSelector": "38d52e0f",
									"id": 627,
									"mutability": "mutable",
									"name": "asset",
									"nameLocation": "824:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 859,
									"src": "810:19:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$201",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 626,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 625,
											"name": "IERC20",
											"nameLocations": [
												"810:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 201,
											"src": "810:6:9"
										},
										"referencedDeclaration": 201,
										"src": "810:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$201",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "838:70:9",
										"text": "@notice Permit2 contract utilized for permissioned token transfers"
									},
									"functionSelector": "12261ee7",
									"id": 631,
									"mutability": "mutable",
									"name": "permit2",
									"nameLocation": "930:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 859,
									"src": "914:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPermit2_$433",
										"typeString": "contract IPermit2"
									},
									"typeName": {
										"id": 630,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 629,
											"name": "IPermit2",
											"nameLocations": [
												"914:8:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 433,
											"src": "914:8:9"
										},
										"referencedDeclaration": 433,
										"src": "914:8:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPermit2_$433",
											"typeString": "contract IPermit2"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "946:64:9",
										"text": "@notice Initial fee rate for flash loans issued by this pool"
									},
									"functionSelector": "8c9f305f",
									"id": 634,
									"mutability": "mutable",
									"name": "flashLoanFeeRate",
									"nameLocation": "1031:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 859,
									"src": "1016:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 633,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1016:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "1470:109:9",
										"statements": [
											{
												"expression": {
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 646,
														"name": "asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "1481:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$201",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 647,
														"name": "_asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "1489:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$201",
															"typeString": "contract IERC20"
														}
													},
													"src": "1481:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$201",
														"typeString": "contract IERC20"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "1481:14:9"
											},
											{
												"expression": {
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 650,
														"name": "permit2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "1506:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPermit2_$433",
															"typeString": "contract IPermit2"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 651,
														"name": "_permit2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "1516:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPermit2_$433",
															"typeString": "contract IPermit2"
														}
													},
													"src": "1506:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPermit2_$433",
														"typeString": "contract IPermit2"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "1506:18:9"
											},
											{
												"expression": {
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 654,
														"name": "flashLoanFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "1535:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 655,
														"name": "_flashLoanFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "1554:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1535:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 657,
												"nodeType": "ExpressionStatement",
												"src": "1535:36:9"
											}
										]
									},
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "1056:299:9",
										"text": "@notice Constructs the TuliaFlashPool lending pool\n @param _asset The ERC20 token asset used for flash loans\n @param _permit2 The Permit2 contract utilized for permissioned token transfers\n @param _flashLoanFeeRate The initial fee rate for flash loans issued by this pool"
									},
									"id": 659,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "_asset",
												"nameLocation": "1390:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "1383:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$201",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 637,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 636,
														"name": "IERC20",
														"nameLocations": [
															"1383:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 201,
														"src": "1383:6:9"
													},
													"referencedDeclaration": 201,
													"src": "1383:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$201",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "_permit2",
												"nameLocation": "1417:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "1408:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPermit2_$433",
													"typeString": "contract IPermit2"
												},
												"typeName": {
													"id": 640,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 639,
														"name": "IPermit2",
														"nameLocations": [
															"1408:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 433,
														"src": "1408:8:9"
													},
													"referencedDeclaration": 433,
													"src": "1408:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPermit2_$433",
														"typeString": "contract IPermit2"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "_flashLoanFeeRate",
												"nameLocation": "1445:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "1437:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1437:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:97:9"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1470:0:9"
									},
									"scope": 859,
									"src": "1361:218:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										32
									],
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "1879:86:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 668,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "1897:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 671,
																	"name": "asset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 627,
																	"src": "1914:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$201",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$201",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1906:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 669,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1906:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1906:14:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1897:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1956:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1897:60:9",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 678,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1947:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_TuliaFlashPool_$859",
																			"typeString": "contract TuliaFlashPool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_TuliaFlashPool_$859",
																			"typeString": "contract TuliaFlashPool"
																		}
																	],
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1939:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 676,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1939:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1939:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 674,
																"name": "asset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "1923:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$201",
																	"typeString": "contract IERC20"
																}
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1929:9:9",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 158,
															"src": "1923:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1923:30:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 667,
												"id": 683,
												"nodeType": "Return",
												"src": "1890:67:9"
											}
										]
									},
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "1587:210:9",
										"text": "@notice Returns the maximum loanable amount of the asset\n @param token The ERC20 token address for which the max loan amount is queried\n @return The maximum amount available for a flash loan"
									},
									"functionSelector": "613255ab",
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxFlashLoan",
									"nameLocation": "1812:12:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 664,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1852:8:9"
									},
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1833:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1825:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1825:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1824:15:9"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1870:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1869:9:9"
									},
									"scope": 859,
									"src": "1803:162:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										42
									],
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "2291:161:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 697,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "2310:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 700,
																		"name": "asset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 627,
																		"src": "2327:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$201",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$201",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2319:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 698,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2319:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2319:14:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2310:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e737570706f7274656420746f6b656e",
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2335:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_35557054842e6bac2d5677ccc2aeb32b43981809d9c333559406d70b18885a3e",
																"typeString": "literal_string \"Unsupported token\""
															},
															"value": "Unsupported token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_35557054842e6bac2d5677ccc2aeb32b43981809d9c333559406d70b18885a3e",
																"typeString": "literal_string \"Unsupported token\""
															}
														],
														"id": 696,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2302:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2302:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "2302:53:9"
											},
											{
												"assignments": [
													707
												],
												"declarations": [
													{
														"constant": false,
														"id": 707,
														"mutability": "mutable",
														"name": "userFee",
														"nameLocation": "2374:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 717,
														"src": "2366:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 706,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2366:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 714,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 708,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "2385:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 709,
																	"name": "flashLoanFeeRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "2394:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2385:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 711,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2384:27:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2414:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "2384:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2366:53:9"
											},
											{
												"expression": {
													"id": 715,
													"name": "userFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 707,
													"src": "2437:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 695,
												"id": 716,
												"nodeType": "Return",
												"src": "2430:14:9"
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "1973:224:9",
										"text": "@notice Calculates the flash loan fee for a given loan amount\n @param token The ERC20 token for which the fee is calculated\n @param amount The amount of the loan\n @return The calculated fee amount"
									},
									"functionSelector": "d9d98ce4",
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flashFee",
									"nameLocation": "2212:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 692,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2264:8:9"
									},
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2229:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2221:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2244:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2236:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2236:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2220:31:9"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2282:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2282:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2281:9:9"
									},
									"scope": 859,
									"src": "2203:249:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										57
									],
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "3090:74:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 737,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "3126:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$19",
																"typeString": "contract IERC3156FlashBorrower"
															}
														},
														{
															"id": 738,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "3136:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 739,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "3143:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 740,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "3151:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$19",
																"typeString": "contract IERC3156FlashBorrower"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 736,
														"name": "_executeFlashLoan",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "3108:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC3156FlashBorrower_$19_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC3156FlashBorrower,address,uint256,bytes calldata) returns (bool)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3108:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 735,
												"id": 742,
												"nodeType": "Return",
												"src": "3101:55:9"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "2460:432:9",
										"text": "@notice Initiates a flash loan transaction\n @param receiver The borrower contract that must implement the IERC3156FlashBorrower interface\n @param token The ERC20 token to be borrowed\n @param amount The amount of tokens to borrow\n @param data Arbitrary data passed to the borrower's `onFlashLoan` method\n @return true if the flash loan is paid back successfully within the same transaction"
									},
									"functionSelector": "5cffe9de",
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 732,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 731,
												"name": "nonReentrant",
												"nameLocations": [
													"3062:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 88,
												"src": "3062:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3062:12:9"
										}
									],
									"name": "flashLoan",
									"nameLocation": "2907:9:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 730,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3053:8:9"
									},
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "2949:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "2927:30:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$19",
													"typeString": "contract IERC3156FlashBorrower"
												},
												"typeName": {
													"id": 721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 720,
														"name": "IERC3156FlashBorrower",
														"nameLocations": [
															"2927:21:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 19,
														"src": "2927:21:9"
													},
													"referencedDeclaration": 19,
													"src": "2927:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$19",
														"typeString": "contract IERC3156FlashBorrower"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2976:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "2968:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2968:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3000:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "2992:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2992:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3032:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "3017:19:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3017:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2916:127:9"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "3084:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 733,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3084:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:6:9"
									},
									"scope": 859,
									"src": "2898:266:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "3771:740:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 760,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "3790:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 763,
																		"name": "asset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 627,
																		"src": "3807:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$201",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$201",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3799:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 761,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3799:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3799:14:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3790:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e737570706f7274656420746f6b656e",
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3815:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_35557054842e6bac2d5677ccc2aeb32b43981809d9c333559406d70b18885a3e",
																"typeString": "literal_string \"Unsupported token\""
															},
															"value": "Unsupported token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_35557054842e6bac2d5677ccc2aeb32b43981809d9c333559406d70b18885a3e",
																"typeString": "literal_string \"Unsupported token\""
															}
														],
														"id": 759,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3782:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3782:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "3782:53:9"
											},
											{
												"assignments": [
													770
												],
												"declarations": [
													{
														"constant": false,
														"id": 770,
														"mutability": "mutable",
														"name": "totalFee",
														"nameLocation": "3856:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 857,
														"src": "3848:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 769,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3848:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 775,
												"initialValue": {
													"arguments": [
														{
															"id": 772,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "3876:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 773,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "3883:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 771,
														"name": "flashFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "3867:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3867:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3848:42:9"
											},
											{
												"assignments": [
													777
												],
												"declarations": [
													{
														"constant": false,
														"id": 777,
														"mutability": "mutable",
														"name": "balanceBefore",
														"nameLocation": "3909:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 857,
														"src": "3901:21:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 776,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3901:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 785,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 782,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3949:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TuliaFlashPool_$859",
																		"typeString": "contract TuliaFlashPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TuliaFlashPool_$859",
																		"typeString": "contract TuliaFlashPool"
																	}
																],
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3941:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 780,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3941:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3941:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 778,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "3925:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$201",
																"typeString": "contract IERC20"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3931:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 158,
														"src": "3925:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3925:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3901:54:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 791,
																	"name": "receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "3991:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$19",
																		"typeString": "contract IERC3156FlashBorrower"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$19",
																		"typeString": "contract IERC3156FlashBorrower"
																	}
																],
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3983:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 789,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3983:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3983:17:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "4002:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 786,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "3968:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$201",
																"typeString": "contract IERC20"
															}
														},
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3974:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 168,
														"src": "3968:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3968:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "3968:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 799,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4065:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4069:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4065:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 801,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 750,
																		"src": "4077:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 802,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "4084:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 803,
																		"name": "totalFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "4092:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 804,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 754,
																		"src": "4102:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"expression": {
																		"id": 797,
																		"name": "receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 748,
																		"src": "4044:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$19",
																			"typeString": "contract IERC3156FlashBorrower"
																		}
																	},
																	"id": 798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4053:11:9",
																	"memberName": "onFlashLoan",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 18,
																	"src": "4044:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes32)"
																	}
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4044:63:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "45524333313536466c617368426f72726f7765722e6f6e466c6173684c6f616e",
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4121:34:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9",
																			"typeString": "literal_string \"ERC3156FlashBorrower.onFlashLoan\""
																		},
																		"value": "ERC3156FlashBorrower.onFlashLoan"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9",
																			"typeString": "literal_string \"ERC3156FlashBorrower.onFlashLoan\""
																		}
																	],
																	"id": 806,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "4111:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4111:45:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4044:112:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "466c617368206c6f616e206661696c6564",
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4171:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63b9b223ee638cd0ab97f0a72b926003f28084afe15ca83039d9a810e771c94b",
																"typeString": "literal_string \"Flash loan failed\""
															},
															"value": "Flash loan failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63b9b223ee638cd0ab97f0a72b926003f28084afe15ca83039d9a810e771c94b",
																"typeString": "literal_string \"Flash loan failed\""
															}
														],
														"id": 796,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4022:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4022:179:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "4022:179:9"
											},
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "amountOwed",
														"nameLocation": "4222:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 857,
														"src": "4214:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 813,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4214:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 818,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 815,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "4235:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 816,
														"name": "totalFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "4244:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4235:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4214:38:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 824,
																	"name": "receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "4290:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$19",
																		"typeString": "contract IERC3156FlashBorrower"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$19",
																		"typeString": "contract IERC3156FlashBorrower"
																	}
																],
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4282:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 822,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4282:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4282:17:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 828,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4309:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TuliaFlashPool_$859",
																		"typeString": "contract TuliaFlashPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TuliaFlashPool_$859",
																		"typeString": "contract TuliaFlashPool"
																	}
																],
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4301:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 826,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4301:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4301:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 830,
															"name": "amountOwed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "4316:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 819,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "4263:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$201",
																"typeString": "contract IERC20"
															}
														},
														"id": 821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4269:12:9",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 200,
														"src": "4263:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4263:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "4263:64:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 838,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4372:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TuliaFlashPool_$859",
																					"typeString": "contract TuliaFlashPool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TuliaFlashPool_$859",
																					"typeString": "contract TuliaFlashPool"
																				}
																			],
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4364:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 836,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4364:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4364:13:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 834,
																		"name": "asset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 627,
																		"src": "4348:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$201",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4354:9:9",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 158,
																	"src": "4348:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4348:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 841,
																"name": "balanceBefore",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "4382:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4348:47:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "466c617368206c6f616e2072657061796d656e74206661696c6564",
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4397:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a194ecd5810fa14ab3aae881c21c82acc6b18a75f7dcdcc28989e1e38f4d297",
																"typeString": "literal_string \"Flash loan repayment failed\""
															},
															"value": "Flash loan repayment failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a194ecd5810fa14ab3aae881c21c82acc6b18a75f7dcdcc28989e1e38f4d297",
																"typeString": "literal_string \"Flash loan repayment failed\""
															}
														],
														"id": 833,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4340:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4340:87:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "4340:87:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 851,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4475:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TuliaFlashPool_$859",
																		"typeString": "contract TuliaFlashPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TuliaFlashPool_$859",
																		"typeString": "contract TuliaFlashPool"
																	}
																],
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4467:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 849,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4467:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4467:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 846,
															"name": "rewardManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "4438:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IRewardManager_$466",
																"typeString": "contract IRewardManager"
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4452:14:9",
														"memberName": "deregisterPool",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 465,
														"src": "4438:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4438:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "4438:43:9"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4499:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 758,
												"id": 856,
												"nodeType": "Return",
												"src": "4492:11:9"
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "3172:415:9",
										"text": "@dev Internal function to execute a flash loan transaction\n Handles the lifecycle of a flash loan including fee calculation, asset transfer, and repayment check\n @param receiver The borrower contract\n @param token The ERC20 token for the loan\n @param amount The loan amount\n @param data Data payload for the borrower\n @return true if the transaction is successful"
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_executeFlashLoan",
									"nameLocation": "3602:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3652:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3630:30:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$19",
													"typeString": "contract IERC3156FlashBorrower"
												},
												"typeName": {
													"id": 747,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 746,
														"name": "IERC3156FlashBorrower",
														"nameLocations": [
															"3630:21:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 19,
														"src": "3630:21:9"
													},
													"referencedDeclaration": 19,
													"src": "3630:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$19",
														"typeString": "contract IERC3156FlashBorrower"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3679:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3671:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3671:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3703:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3695:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3695:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3735:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3720:19:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 753,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3720:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3619:127:9"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3765:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 756,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3765:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3764:6:9"
									},
									"scope": 859,
									"src": "3593:918:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 860,
							"src": "585:3931:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:4485:9"
				},
				"id": 9
			}
		}
	}
}