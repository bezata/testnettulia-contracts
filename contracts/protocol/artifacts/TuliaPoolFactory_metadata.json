{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_poolOrganizer",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_rewardManager",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_vaultManager",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_flashPoolRewardManager",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "pool",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "lender",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "vault",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "enum IPoolOrganizer.PoolType",
						"name": "poolType",
						"type": "uint8"
					}
				],
				"name": "PoolCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "vault",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "assetToken",
						"type": "address"
					}
				],
				"name": "VaultCreated",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "lender",
						"type": "address"
					},
					{
						"internalType": "contract IERC20",
						"name": "loanTokenAddress",
						"type": "address"
					},
					{
						"internalType": "contract IERC20",
						"name": "assetToken",
						"type": "address"
					},
					{
						"internalType": "contract IERC20",
						"name": "repaymentTokenAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "loanAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "interestRate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "repaymentPeriod",
						"type": "uint256"
					},
					{
						"internalType": "contract IInterestModel",
						"name": "interestModel",
						"type": "address"
					},
					{
						"internalType": "enum IPoolOrganizer.PoolType",
						"name": "poolType",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "optionalFlashLoanFeeRate",
						"type": "uint256"
					}
				],
				"name": "createTuliaPool",
				"outputs": [
					{
						"internalType": "address",
						"name": "poolAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "vaultAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "flashPoolRewardManager",
				"outputs": [
					{
						"internalType": "contract IFlashPoolRewardManager",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "poolOrganizer",
				"outputs": [
					{
						"internalType": "contract IPoolOrganizer",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "rewardManager",
				"outputs": [
					{
						"internalType": "contract IRewardManager",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "vaultManager",
				"outputs": [
					{
						"internalType": "contract IVaultManager",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "vaults",
				"outputs": [
					{
						"internalType": "contract TuliaVault",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "A factory for creating and managing TuliaPool and TuliaFlashPool contracts.",
			"events": {
				"PoolCreated(address,address,address,uint8)": {
					"params": {
						"lender": "The address of the lender initiating the pool.",
						"pool": "The address of the newly created pool.",
						"poolType": "The type of the pool (standard or flash loan).",
						"vault": "The address of the vault associated with the pool."
					}
				},
				"VaultCreated(address,address)": {
					"params": {
						"assetToken": "The address of the asset token used as collateral.",
						"vault": "The address of the newly created vault."
					}
				}
			},
			"kind": "dev",
			"methods": {
				"constructor": {
					"params": {
						"_poolOrganizer": "The address of the Pool Organizer contract.",
						"_rewardManager": "The address of the Reward Manager contract.",
						"_vaultManager": "The address of the Vault Manager contract."
					}
				},
				"createTuliaPool(address,address,address,address,uint256,uint256,uint256,address,uint8,uint256)": {
					"params": {
						"assetToken": "ERC20 token address used as collateral.",
						"interestModel": "Address of the contract calculating interest.",
						"interestRate": "Interest rate for the loan.",
						"lender": "Address of the lender initiating the pool.",
						"loanAmount": "Amount of the loan.",
						"loanTokenAddress": "ERC20 token address to be loaned.",
						"optionalFlashLoanFeeRate": "Fee rate for flash loans if applicable.",
						"poolType": "Type of the pool to create (standard or flash loan).",
						"repaymentPeriod": "Duration over which the loan must be repaid.",
						"repaymentTokenAddress": "ERC20 token address for repayments."
					},
					"returns": {
						"poolAddress": "Address of the newly created pool.",
						"vaultAddress": "Address of the vault associated with the pool, if applicable."
					}
				}
			},
			"title": "TuliaPoolFactory",
			"version": 1
		},
		"userdoc": {
			"events": {
				"PoolCreated(address,address,address,uint8)": {
					"notice": "Emitted when a new pool is created."
				},
				"VaultCreated(address,address)": {
					"notice": "Emitted when a new vault is created."
				}
			},
			"kind": "user",
			"methods": {
				"constructor": {
					"notice": "Constructs the TuliaPoolFactory contract."
				},
				"createTuliaPool(address,address,address,address,uint256,uint256,uint256,address,uint8,uint256)": {
					"notice": "Creates a new TuliaPool or TuliaFlashPool depending on the specified pool type."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/contracts/protocol/TuliaPoolFactory.sol": "TuliaPoolFactory"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": [],
		"viaIR": true
	},
	"sources": {
		"@openzeppelin/contracts/access/AccessControl.sol": {
			"keccak256": "0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308",
			"license": "MIT",
			"urls": [
				"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80",
				"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z"
			]
		},
		"@openzeppelin/contracts/access/IAccessControl.sol": {
			"keccak256": "0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41",
			"license": "MIT",
			"urls": [
				"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26",
				"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol": {
			"keccak256": "0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa",
			"license": "MIT",
			"urls": [
				"bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475",
				"dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol": {
			"keccak256": "0x95d9eb59f21e885406d0e28b0510f9e1a0e7b4abe6636b5c966682927c65cfdd",
			"license": "MIT",
			"urls": [
				"bzz-raw://a1cbff4d620ab51abe0c4ede9e4395bae53bcc3a7edd74e0eb08d7bdef155306",
				"dweb:/ipfs/QmQcnBK28GDH4S5uXWqAcdRY1KcusXH4CxAqp87rYLir6n"
			]
		},
		"@openzeppelin/contracts/interfaces/IERC4626.sol": {
			"keccak256": "0x207f64371bc0fcc5be86713aa5da109a870cc3a6da50e93b64ee881e369b593d",
			"license": "MIT",
			"urls": [
				"bzz-raw://548667cfa76683767c2c610b577f6c2f0675d0ce28f53c3f37b969c84a56b205",
				"dweb:/ipfs/QmUzA1CKC6bDdULuS44wGd7PWBNLiHb6bh7oHwJBDZSLAx"
			]
		},
		"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
			"keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
			"license": "MIT",
			"urls": [
				"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
				"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
			]
		},
		"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
			"license": "MIT",
			"urls": [
				"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
				"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
				"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol": {
			"keccak256": "0x1837547e04d5fe5334eeb77a345683c22995f1e7aa033020757ddf83a80fc72d",
			"license": "MIT",
			"urls": [
				"bzz-raw://40d6031bc0e6f70edceb4e63fd624fe6be09dc48f5201c7a9078c26e6a9ef95f",
				"dweb:/ipfs/QmPTEBH7dmU3NgE6vtjMy7xEK54as9VHSgf9ojupwnvoke"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
				"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
			"keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
			"license": "MIT",
			"urls": [
				"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
				"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
			]
		},
		"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
			"license": "MIT",
			"urls": [
				"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
				"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
			"license": "MIT",
			"urls": [
				"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
				"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
			"keccak256": "0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236",
			"license": "MIT",
			"urls": [
				"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02",
				"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"
			]
		},
		"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
			"keccak256": "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
			"license": "MIT",
			"urls": [
				"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
				"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
			"license": "MIT",
			"urls": [
				"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
				"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
			]
		},
		"@openzeppelin/contracts/utils/math/Math.sol": {
			"keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
			"license": "MIT",
			"urls": [
				"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
				"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
			]
		},
		"contracts/contracts/interfaces/IFlashPoolRewardManager.sol": {
			"keccak256": "0x6902028befafa85fa9125fbfb69270fb4b75de335abaade7c3297befc30cb0ac",
			"license": "MIT",
			"urls": [
				"bzz-raw://6078bfa72d24c6c758246fd0bb3e16efafd14d74b298949f887b2327bc5a7a42",
				"dweb:/ipfs/QmW95cMpCAzU9UKdtyHVzPqKRsmDoXkS178k4sXE9JB2v5"
			]
		},
		"contracts/contracts/interfaces/IInterestModel.sol": {
			"keccak256": "0xcb2b638d0439553f3d89e8a76239c5e2a74888a6b8220627d8ac8df38e10dd97",
			"license": "MIT",
			"urls": [
				"bzz-raw://4fd0676f3b641e6bcceeb9d2658b32752fde1b5767ca8a9af570bb84c97d07a1",
				"dweb:/ipfs/QmT11N5mM22VBSR5pip85GbNWh2Q8a149SbmigMM5apivq"
			]
		},
		"contracts/contracts/interfaces/IPoolOrganizer.sol": {
			"keccak256": "0x0ce052094139df49200b21b6c088c9997ddc2c688f4528d1fcdfb0c0414080a1",
			"license": "MIT",
			"urls": [
				"bzz-raw://4c18bdcccf32a2a9e7fb8e347b80d09032c8fe64dcb02e6b92a4b99c6d7a16a8",
				"dweb:/ipfs/QmVprNk8mRzHy6GWT6bhBPmgtj3U3rkN8LamBAwES92GMh"
			]
		},
		"contracts/contracts/interfaces/IRewardManager.sol": {
			"keccak256": "0x7cc26fedce851c23bbb6543528c2341a9f482d4dbd914861c90c6f18ac2a758a",
			"license": "MIT",
			"urls": [
				"bzz-raw://ab650267dc4615bb32a41f3154a7fbce0b8b7a8f10ff67701f7ab1b0088d6af5",
				"dweb:/ipfs/QmeJWqHULBijdCe3ZEHYZcEYZqtgbo4VrKiwsYi54LjPvP"
			]
		},
		"contracts/contracts/interfaces/IVaultManager.sol": {
			"keccak256": "0xdd866073f1029189ab6d2f04f7cdf481fb48e9e12ef4f9cd2376778674ce1f1e",
			"license": "MIT",
			"urls": [
				"bzz-raw://3d1aef045b26166c370937ef37a8917a00d63021343795f47c30516745e3786d",
				"dweb:/ipfs/QmbAuF7Ufd78MYjnYKUybDtGDVFcn7e6wSNN8hEg6fGFg5"
			]
		},
		"contracts/contracts/protocol/TuliaFlashPool.sol": {
			"keccak256": "0x3ef8642c434be4fb0f96bf1d41a63ff48a29f45fbac100a662580e164f356f2b",
			"license": "MIT",
			"urls": [
				"bzz-raw://e2d80fb10c84199cb35c92309b60287699f2d7f58dcecc9b58fe4c4c8bf96cbd",
				"dweb:/ipfs/QmVCDFcDzADF83eNikbAGfm7iSS7mGQvSNqka4S9i7EALK"
			]
		},
		"contracts/contracts/protocol/TuliaPool.sol": {
			"keccak256": "0x72a5dd2bac825b5661d27eb3700750d529a00442673fcc42b9db2089f656a5ef",
			"license": "MIT",
			"urls": [
				"bzz-raw://2e591d3623136e09669843ca306f8b487a453edd20d4ca59e405d5d2bb22a099",
				"dweb:/ipfs/QmVFQ34bAS34ffUyb5Bi4V1gaiarXi9xdGF6xEhpFJoN2k"
			]
		},
		"contracts/contracts/protocol/TuliaPoolFactory.sol": {
			"keccak256": "0x149c169b79832030a0013d92bf53693aa84234700c896ff39ced1eef2c0c420a",
			"license": "MIT",
			"urls": [
				"bzz-raw://d0187a66b2311781022544ca9e88b74363ccf22a00d40a857d58ea9e2a470fac",
				"dweb:/ipfs/Qmdo79wCU8vQjAkcxsikR7qkxEM2tbBSHDt2Vhfmad87D4"
			]
		},
		"contracts/contracts/protocol/TuliaVault.sol": {
			"keccak256": "0xdfa11ca777bded799c55db7df65fb13b055d21d78ce7522c09f378391e6c20d9",
			"license": "MIT",
			"urls": [
				"bzz-raw://57b6a5332b4eb7b8a792d724ba60dc1ca65e82e7341d28e6389047ebc3addbc2",
				"dweb:/ipfs/Qma9cTB2tEcC32YQqTe95qDxMd55Ab8Wfggajdcundys6D"
			]
		}
	},
	"version": 1
}