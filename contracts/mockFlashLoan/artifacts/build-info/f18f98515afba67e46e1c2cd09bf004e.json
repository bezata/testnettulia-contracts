{
	"id": "f18f98515afba67e46e1c2cd09bf004e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"settings": {
			"viaIR": true,
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/contracts/mockFlashLoan/mockFlashLoan.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.24;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\";\r\nimport \"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\";\r\n\r\ncontract MockFlashLoanBorrower is IERC3156FlashBorrower {\r\n    using SafeERC20 for IERC20;\r\n\r\n    IERC3156FlashLender public lender;\r\n    bytes32 public constant CALLBACK_SUCCESS = keccak256(\"ERC3156FlashBorrower.onFlashLoan\");\r\n\r\n    // Constructor to set the lender\r\n    constructor(address _lender) {\r\n        lender = IERC3156FlashLender(_lender);\r\n    }\r\n\r\n    // Function to initiate a flash loan\r\n    function initiateFlashLoan(address token, uint256 amount) external {\r\n        // Initiating a flash loan\r\n        lender.flashLoan(this, token, amount, bytes(\"Arbitrary data\"));\r\n    }\r\n\r\n    // Callback function that runs after receiving the flash loan\r\n    function onFlashLoan(\r\n        address initiator,\r\n        address token,\r\n        uint256 amount,\r\n        uint256 fee,\r\n        bytes calldata data\r\n    ) external override returns (bytes32) {\r\n        require(msg.sender == address(lender), \"Only lender can call this function\");\r\n        require(initiator == address(this), \"Untrusted loan initiator\");\r\n\r\n        // Here you can place your arbitrary logic with the borrowed amount\r\n        // For instance, conducting an arbitrage, performing swaps, or other operations\r\n\r\n        // Total amount that needs to be repaid to the flash loan provider\r\n        uint256 totalRepayment = amount + fee;\r\n        IERC20(token).safeIncreaseAllowance(address(lender), totalRepayment);\r\n        IERC20(token).safeTransferFrom(address(this), address(lender), totalRepayment);\r\n\r\n        return CALLBACK_SUCCESS;  // Signalling that the flash loan was handled successfully\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC3156FlashLender.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC3156FlashBorrower} from \"./IERC3156FlashBorrower.sol\";\n\n/**\n * @dev Interface of the ERC3156 FlashLender, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n */\ninterface IERC3156FlashLender {\n    /**\n     * @dev The amount of currency available to be lended.\n     * @param token The loan currency.\n     * @return The amount of `token` that can be borrowed.\n     */\n    function maxFlashLoan(address token) external view returns (uint256);\n\n    /**\n     * @dev The fee to be charged for a given loan.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @return The amount of `token` to be charged for the loan, on top of the returned principal.\n     */\n    function flashFee(address token, uint256 amount) external view returns (uint256);\n\n    /**\n     * @dev Initiate a flash loan.\n     * @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\n     */\n    function flashLoan(\n        IERC3156FlashBorrower receiver,\n        address token,\n        uint256 amount,\n        bytes calldata data\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC3156FlashBorrower.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC3156 FlashBorrower, as defined in\n * https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\n */\ninterface IERC3156FlashBorrower {\n    /**\n     * @dev Receive a flash loan.\n     * @param initiator The initiator of the loan.\n     * @param token The loan currency.\n     * @param amount The amount of tokens lent.\n     * @param fee The additional amount of tokens to repay.\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\n     * @return The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\"\n     */\n    function onFlashLoan(\n        address initiator,\n        address token,\n        uint256 amount,\n        uint256 fee,\n        bytes calldata data\n    ) external returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol": {
				"IERC3156FlashBorrower": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initiator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onFlashLoan",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC3156 FlashBorrower, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].",
						"kind": "dev",
						"methods": {
							"onFlashLoan(address,address,uint256,uint256,bytes)": {
								"details": "Receive a flash loan.",
								"params": {
									"amount": "The amount of tokens lent.",
									"data": "Arbitrary data structure, intended to contain user-defined parameters.",
									"fee": "The additional amount of tokens to repay.",
									"initiator": "The initiator of the loan.",
									"token": "The loan currency."
								},
								"returns": {
									"_0": "The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\""
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onFlashLoan(address,address,uint256,uint256,bytes)": "23e30c8b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC3156 FlashBorrower, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\",\"kind\":\"dev\",\"methods\":{\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"details\":\"Receive a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"fee\":\"The additional amount of tokens to repay.\",\"initiator\":\"The initiator of the loan.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The keccak256 hash of \\\"ERC3156FlashBorrower.onFlashLoan\\\"\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":\"IERC3156FlashBorrower\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475\",\"dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol": {
				"IERC3156FlashLender": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "flashFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC3156FlashBorrower",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flashLoan",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "maxFlashLoan",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC3156 FlashLender, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].",
						"kind": "dev",
						"methods": {
							"flashFee(address,uint256)": {
								"details": "The fee to be charged for a given loan.",
								"params": {
									"amount": "The amount of tokens lent.",
									"token": "The loan currency."
								},
								"returns": {
									"_0": "The amount of `token` to be charged for the loan, on top of the returned principal."
								}
							},
							"flashLoan(address,address,uint256,bytes)": {
								"details": "Initiate a flash loan.",
								"params": {
									"amount": "The amount of tokens lent.",
									"data": "Arbitrary data structure, intended to contain user-defined parameters.",
									"receiver": "The receiver of the tokens in the loan, and the receiver of the callback.",
									"token": "The loan currency."
								}
							},
							"maxFlashLoan(address)": {
								"details": "The amount of currency available to be lended.",
								"params": {
									"token": "The loan currency."
								},
								"returns": {
									"_0": "The amount of `token` that can be borrowed."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"flashFee(address,uint256)": "d9d98ce4",
							"flashLoan(address,address,uint256,bytes)": "5cffe9de",
							"maxFlashLoan(address)": "613255ab"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC3156 FlashLender, as defined in https://eips.ethereum.org/EIPS/eip-3156[ERC-3156].\",\"kind\":\"dev\",\"methods\":{\"flashFee(address,uint256)\":{\"details\":\"The fee to be charged for a given loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` to be charged for the loan, on top of the returned principal.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Initiate a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"receiver\":\"The receiver of the tokens in the loan, and the receiver of the callback.\",\"token\":\"The loan currency.\"}},\"maxFlashLoan(address)\":{\"details\":\"The amount of currency available to be lended.\",\"params\":{\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` that can be borrowed.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":\"IERC3156FlashLender\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475\",\"dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x95d9eb59f21e885406d0e28b0510f9e1a0e7b4abe6636b5c966682927c65cfdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1cbff4d620ab51abe0c4ede9e4395bae53bcc3a7edd74e0eb08d7bdef155306\",\"dweb:/ipfs/QmQcnBK28GDH4S5uXWqAcdRY1KcusXH4CxAqp87rYLir6n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ea331b81ad54b34a4fb748471165351a06d9ffe55f0a02562b775ae3ef6f7f3864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220ea331b81ad54b34a4fb748471165351a06d9ffe55f0a02562b775ae3ef6f7f3864736f6c63430008180033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA CALLER SHL DUP2 0xAD SLOAD 0xB3 BLOBBASEFEE 0x4F 0xB7 BASEFEE SELFBALANCE GT PUSH6 0x351A06D9FFE5 PUSH0 EXP MUL JUMP 0x2B PUSH24 0x5AE3EF6F7F3864736F6C6343000818003300000000000000 ",
							"sourceMap": "751:5018:4:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea2646970667358221220ea331b81ad54b34a4fb748471165351a06d9ffe55f0a02562b775ae3ef6f7f3864736f6c63430008180033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA CALLER SHL DUP2 0xAD SLOAD 0xB3 BLOBBASEFEE 0x4F 0xB7 BASEFEE SELFBALANCE GT PUSH6 0x351A06D9FFE5 PUSH0 EXP MUL JUMP 0x2B PUSH24 0x5AE3EF6F7F3864736F6C6343000818003300000000000000 ",
							"sourceMap": "751:5018:4:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "library_deploy_address"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ea331b81ad54b34a4fb748471165351a06d9ffe55f0a02562b775ae3ef6f7f3864736f6c63430008180033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol",
								"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/contracts/mockFlashLoan/mockFlashLoan.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_1, callvalue)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  address\n  dup2\n  assignImmutable(\"0xcd5a02d485074f67d63783a7acdae578618045c23ccf47fa4e3f1a01c11714ad\")\n  return\ntag_1:\n  0x00\n  dup1\n  revert\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122018564dcf9264c62269f91b4781b08de18b8e161cf98282074b347684064cd0a964736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122018564dcf9264c62269f91b4781b08de18b8e161cf98282074b347684064cd0a964736f6c63430008180033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR JUMP 0x4D 0xCF SWAP3 PUSH5 0xC62269F91B SELFBALANCE DUP2 0xB0 DUP14 0xE1 DUP12 DUP15 AND SHR 0xF9 DUP3 DUP3 SMOD 0x4B CALLVALUE PUSH23 0x84064CD0A964736F6C6343000818003300000000000000 ",
							"sourceMap": "195:6066:5:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "5f80fdfea264697066735822122018564dcf9264c62269f91b4781b08de18b8e161cf98282074b347684064cd0a964736f6c63430008180033",
							"opcodes": "PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR JUMP 0x4D 0xCF SWAP3 PUSH5 0xC62269F91B SELFBALANCE DUP2 0xB0 DUP14 0xE1 DUP12 DUP15 AND SHR 0xF9 DUP3 DUP3 SMOD 0x4B CALLVALUE PUSH23 0x84064CD0A964736F6C6343000818003300000000000000 ",
							"sourceMap": "195:6066:5:-:0;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "library_deploy_address"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122018564dcf9264c62269f91b4781b08de18b8e161cf98282074b347684064cd0a964736f6c63430008180033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol",
								"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/contracts/mockFlashLoan/mockFlashLoan.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/mockFlashLoan/mockFlashLoan.sol": {
				"MockFlashLoanBorrower": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_lender",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CALLBACK_SUCCESS",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "initiateFlashLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lender",
							"outputs": [
								{
									"internalType": "contract IERC3156FlashLender",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initiator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onFlashLoan",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"onFlashLoan(address,address,uint256,uint256,bytes)": {
								"details": "Receive a flash loan.",
								"params": {
									"amount": "The amount of tokens lent.",
									"data": "Arbitrary data structure, intended to contain user-defined parameters.",
									"fee": "The additional amount of tokens to repay.",
									"initiator": "The initiator of the loan.",
									"token": "The loan currency."
								},
								"returns": {
									"_0": "The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\""
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n  0x80\n  jumpi(tag_7, callvalue)\n  0x1f\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap2\n  dup3\n  add\n  not(0x1f)\n  and\n  dup4\n  add\n  swap2\n  sub(shl(0x40, 0x01), 0x01)\n  dup4\n  gt\n  dup5\n  dup5\n  lt\n  or\n  tag_3\n  jumpi\n  dup1\n  dup5\n  swap3\n  0x20\n  swap5\n  0x40\n  mstore\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_7\n  jumpi\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup2\n  and\n  swap1\n  dup2\n  swap1\n  sub\n  tag_7\n  jumpi\n  0x00\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_7:\n  0x00\n  dup1\n  revert\ntag_3:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      0x80\n      0x40\n      swap1\n      dup1\n      dup3\n      mstore\n      0x04\n      dup1\n      calldatasize\n      lt\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      shr(0xe0, calldataload(0x00))\n      swap2\n      dup3\n      0x23e30c8b\n      eq\n      tag_11\n      jumpi\n      pop\n      dup2\n      0x5e2c1b3a\n      eq\n      tag_13\n      jumpi\n      pop\n      dup1\n      0x8237e538\n      eq\n      tag_15\n      jumpi\n      0xbcead63e\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      jumpi(tag_21, callvalue)\n      jumpi(tag_21, slt(add(not(0x03), calldatasize), 0x00))\n      sload(0x00)\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_21:\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      jumpi(tag_21, callvalue)\n      jumpi(tag_21, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      swap1\n      mload\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":510:555  keccak256(\"ERC3156FlashBorrower.onFlashLoan\") */\n      0x439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      dup2\n      mstore\n      return\n    tag_13:\n      swap1\n      pop\n      jumpi(tag_21, callvalue)\n      dup2\n      add(calldatasize, not(0x03))\n      slt\n      tag_21\n      jumpi\n      tag_31\n      tag_1\n      jump\t// in\n    tag_31:\n      sload(0x00)\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      swap3\n      swap2\n      dup6\n      and\n      swap1\n      dup1\n      dup5\n      add\n      0xffffffffffffffff\n      dup2\n      gt\n      dup3\n      dup3\n      lt\n      or\n      tag_32\n      jumpi\n      dup5\n      swap7\n      swap4\n      swap6\n      swap3\n      swap2\n      swap7\n      mstore\n      0x0e\n      dup7\n      mstore\n      0x20\n      swap6\n      dup7\n      swap4\n      shl(0x90, 0x4172626974726172792064617461)\n      dup6\n      dup4\n      add\n      mstore\n      dup6\n      mload\n      swap7\n      dup8\n      swap5\n      shl(0xe1, 0x2e7ff4ef)\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":851:913  lender.flashLoan(this, token, amount, bytes(\"Arbitrary data\")) */\n      dup7\n      mstore\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":868:872  this */\n      address\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":851:913  lender.flashLoan(this, token, amount, bytes(\"Arbitrary data\")) */\n      swap1\n      dup7\n      add\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      mstore\n      and\n      0x24\n      dup5\n      add\n      mstore\n      calldataload(0x24)\n      0x44\n      dup5\n      add\n      mstore\n      0x80\n      0x64\n      dup5\n      add\n      mstore\n      dup1\n      mload\n      swap1\n      dup2\n      0x84\n      dup6\n      add\n      mstore\n      dup5\n      0x00\n    tag_34:\n      dup4\n      dup2\n      lt\n      tag_35\n      jumpi\n      pop\n      pop\n      pop\n      0x00\n      0xa4\n      dup5\n      dup4\n      dup4\n      dup4\n      dup4\n      swap7\n      dup5\n      add\n      add\n      mstore\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":851:913  lender.flashLoan(this, token, amount, bytes(\"Arbitrary data\")) */\n      sub\n      add\n      swap3\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_37\n      jumpi\n      pop\n      tag_39\n      jumpi\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      stop\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":851:913  lender.flashLoan(this, token, amount, bytes(\"Arbitrary data\")) */\n    tag_39:\n      dup2\n      tag_41\n      swap3\n      swap1\n      returndatasize\n      lt\n      tag_42\n      jumpi\n    tag_43:\n      tag_44\n      dup2\n      dup4\n      tag_4\n      jump\t// in\n    tag_44:\n      dup2\n      add\n      swap1\n      tag_5\n      jump\t// in\n    tag_41:\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      stop\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":851:913  lender.flashLoan(this, token, amount, bytes(\"Arbitrary data\")) */\n    tag_42:\n      pop\n      returndatasize\n      jump(tag_43)\n    tag_37:\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      mload\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_35:\n      dup3\n      dup2\n      add\n      dup3\n      add\n      mload\n      dup10\n      dup3\n      add\n      0xa4\n      add\n      mstore\n      dup9\n      swap6\n      pop\n      dup7\n      swap2\n      add\n      jump(tag_34)\n    tag_32:\n      0x41\n      dup7\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore\n      revert(0x00, 0x24)\n    tag_11:\n      dup4\n      jumpi(tag_21, callvalue)\n      jumpi(tag_21, slt(add(not(0x03), calldatasize), 0xa0))\n      tag_49\n      tag_1\n      jump\t// in\n    tag_49:\n      0x24\n      swap4\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      dup6\n      calldataload\n      dup4\n      dup2\n      and\n      swap3\n      swap1\n      dup4\n      swap1\n      sub\n      tag_21\n      jumpi\n      0x44\n      swap4\n      0xffffffffffffffff\n      swap3\n      calldataload(0x84)\n      dup5\n      dup2\n      gt\n      tag_21\n      jumpi\n      calldatasize\n      0x23\n      dup3\n      add\n      slt\n      iszero\n      tag_21\n      jumpi\n      dup1\n      dup5\n      add\n      calldataload\n      dup6\n      dup2\n      gt\n      tag_21\n      jumpi\n      calldatasize\n      swap2\n      add\n      dup11\n      add\n      gt\n      tag_21\n      jumpi\n      dup2\n      sload(0x00)\n      and\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":1208:1218  msg.sender */\n      swap8\n      dup9\n      caller\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":1208:1237  msg.sender == address(lender) */\n      sub\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      tag_60\n      jumpi\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":1316:1320  this */\n      pop\n      dup2\n      address\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      swap2\n      and\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":1295:1321  initiator == address(this) */\n      sub\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      tag_62\n      jumpi\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":1632:1644  amount + fee */\n      tag_64\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      calldataload(0x64)\n      dup7\n      calldataload\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":1632:1644  amount + fee */\n      tag_2\n      jump\t// in\n    tag_64:\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      swap1\n      dup7\n      mload\n      swap8\n      shl(0xe1, 0x6eb1769f)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2200:2239  token.allowance(address(this), spender) */\n      dup10\n      mstore\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":1316:1320  this */\n      address\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2200:2239  token.allowance(address(this), spender) */\n      dup5\n      dup11\n      add\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      mstore\n      dup1\n      dup11\n      dup11\n      add\n      mstore\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2200:2239  token.allowance(address(this), spender) */\n      swap9\n      dup10\n      dup2\n      dup10\n      dup2\n      dup11\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_65\n      jumpi\n      dup12\n      swap3\n      swap2\n      dup6\n      swap2\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2200:2239  token.allowance(address(this), spender) */\n      swap2\n      tag_67\n      jumpi\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2278:2298  oldAllowance + value */\n      pop\n      swap1\n      tag_69\n      swap2\n      tag_2\n      jump\t// in\n    tag_69:\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      swap1\n      0x00\n      dup1\n      dup12\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3411:3458  abi.encodeCall(token.approve, (spender, value)) */\n      swap4\n      dup14\n      dup6\n      add\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      swap1\n      dup5\n      shl(0xe0, 0x095ea7b3)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3411:3458  abi.encodeCall(token.approve, (spender, value)) */\n      swap8\n      dup9\n      dup5\n      mstore\n      dup8\n      add\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      mstore\n      dup13\n      dup7\n      add\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3411:3458  abi.encodeCall(token.approve, (spender, value)) */\n      dup12\n      dup6\n      mstore\n      tag_70\n      dup6\n      tag_3\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5615:5640  address(token).call(data) */\n      dup5\n      mload\n      swap1\n      dup3\n      dup13\n      gas\n      call\n      tag_71\n      tag_7\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5657:5726  success && (returndata.length == 0 || abi.decode(returndata, (bool))) */\n      dup2\n      tag_72\n      jumpi\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5657:5760  success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0 */\n      pop\n      dup1\n      tag_74\n      jumpi\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3473:3518  !_callOptionalReturnBool(token, approvalCall) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3469:3670  if (!_callOptionalReturnBool(token, approvalCall)) {... */\n      tag_76\n      jumpi\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n    tag_77:\n      pop\n      pop\n      pop\n      sload(0x00)\n      and\n      dup7\n      mload\n      swap6\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      dup10\n      dup9\n      add\n      mstore\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":1316:1320  this */\n      address\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      dup11\n      dup9\n      add\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      mstore\n      dup7\n      add\n      mstore\n      0x64\n      dup6\n      add\n      mstore\n      0x64\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      dup5\n      mstore\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      0xa0\n      dup5\n      add\n      swap2\n      dup5\n      dup4\n      lt\n      swap1\n      dup4\n      gt\n      or\n      tag_78\n      jumpi\n      pop\n      dup4\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      tag_80\n      swap2\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      tag_6\n      jump\t// in\n    tag_80:\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      mload\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":510:555  keccak256(\"ERC3156FlashBorrower.onFlashLoan\") */\n      0x439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      dup2\n      mstore\n      return\n    tag_78:\n      0x41\n      dup8\n      swap2\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore\n      0x00\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3469:3670  if (!_callOptionalReturnBool(token, approvalCall)) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3646:3658  approvalCall */\n      tag_81\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3561:3604  abi.encodeCall(token.approve, (spender, 0)) */\n      tag_82\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      swap2\n      dup12\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3561:3604  abi.encodeCall(token.approve, (spender, 0)) */\n      swap2\n      dup14\n      dup4\n      add\n      mstore\n      dup14\n      dup3\n      add\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      mstore\n      0x00\n      dup11\n      dup3\n      add\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3561:3604  abi.encodeCall(token.approve, (spender, 0)) */\n      dup10\n      dup2\n      mstore\n      tag_83\n      dup2\n      tag_3\n      jump\t// in\n    tag_83:\n      dup9\n      tag_6\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3646:3658  approvalCall */\n      dup7\n      tag_6\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3469:3670  if (!_callOptionalReturnBool(token, approvalCall)) {... */\n      dup10\n      dup1\n      dup1\n      jump(tag_77)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5657:5760  success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0 */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5730:5756  address(token).code.length */\n      pop\n      dup8\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5730:5760  address(token).code.length > 0 */\n      iszero\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5657:5760  success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0 */\n      jump(tag_75)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5657:5726  success && (returndata.length == 0 || abi.decode(returndata, (bool))) */\n    tag_72:\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5669:5691  returndata.length == 0 */\n      dup1\n      iszero\n      swap3\n      pop\n      dup14\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5669:5725  returndata.length == 0 || abi.decode(returndata, (bool)) */\n      dup4\n      iszero\n      tag_84\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5657:5726  success && (returndata.length == 0 || abi.decode(returndata, (bool))) */\n    tag_85:\n      pop\n      pop\n      pop\n      dup14\n      jump(tag_73)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5669:5725  returndata.length == 0 || abi.decode(returndata, (bool)) */\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5695:5725  abi.decode(returndata, (bool)) */\n      tag_86\n      swap4\n      pop\n      dup3\n      add\n      dup2\n      add\n      swap2\n      add\n      tag_5\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5669:5725  returndata.length == 0 || abi.decode(returndata, (bool)) */\n      dup14\n      dup13\n      dup2\n      jump(tag_85)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2200:2239  token.allowance(address(this), spender) */\n    tag_67:\n      swap4\n      pop\n      pop\n      pop\n      dup10\n      dup3\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_87\n      jumpi\n    tag_88:\n      tag_89\n      dup2\n      dup4\n      tag_4\n      jump\t// in\n    tag_89:\n      dup2\n      add\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      sub\n      slt\n      tag_21\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2278:2298  oldAllowance + value */\n      tag_69\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      dup5\n      dup13\n      swap4\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2200:2239  token.allowance(address(this), spender) */\n      swap1\n      swap2\n      jump(tag_68)\n    tag_87:\n      pop\n      returndatasize\n      jump(tag_88)\n    tag_65:\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      dup10\n      mload\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_62:\n      dup6\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      dup2\n      dup5\n      add\n      mstore\n      0x18\n      dup2\n      dup11\n      add\n      mstore\n      0x556e74727573746564206c6f616e20696e69746961746f720000000000000000\n      dup2\n      dup8\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_60:\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      dup5\n      dup3\n      add\n      mstore\n      0x22\n      dup11\n      dup3\n      add\n      mstore\n      0x4f6e6c79206c656e6465722063616e2063616c6c20746869732066756e637469\n      dup8\n      dup3\n      add\n      mstore\n      shl(0xf1, 0x37b7)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_1:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_21\n      jumpi\n      jump\t// out\n    tag_2:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_94\n      jumpi\n      jump\t// out\n    tag_94:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_3:\n      0x80\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_96\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_96:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_4:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_96\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_5:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_21\n      jumpi\n      mload\n      dup1\n      iszero\n      iszero\n      dup2\n      sub\n      tag_21\n      jumpi\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      swap3\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      swap4\n      0x20\n      dup2\n      mload\n      swap2\n      add\n      dup3\n      dup7\n      gas\n      call\n      tag_105\n      tag_7\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      swap1\n      dup4\n      tag_8\n      jump\t// in\n    tag_104:\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      swap1\n      dup2\n      iszero\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      swap2\n      dup3\n      tag_106\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      pop\n      pop\n      tag_108\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_108:\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      0x24\n      swap1\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      swap1\n      shl(0xe0, 0x5274afe7)\n      dup3\n      mstore\n      0x04\n      dup3\n      add\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      tag_110\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      swap2\n      dup4\n      add\n      add\n      swap2\n      add\n      tag_5\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      0x00\n      dup1\n      jump(tag_107)\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n    tag_7:\n      jumpi(tag_111, iszero(returndatasize))\n      returndatasize\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_96\n      jumpi\n      mload(0x40)\n      swap2\n      tag_115\n      0x1f\n      dup3\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup5\n      tag_4\n      jump\t// in\n    tag_115:\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump\t// out\n    tag_111:\n      0x60\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_8:\n      swap1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4797:4805  !success */\n      tag_117\n      jumpi\n      pop\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      tag_119\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6046:6188  assembly {... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_119:\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      dup2\n      mstore\n      0x04\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_117:\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      tag_121\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      tag_123\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      pop\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_123:\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":329:1919  contract MockFlashLoanBorrower is IERC3156FlashBorrower {... */\n      mstore\n      0x24\n      swap1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_121:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      pop\n      dup1\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      jump(tag_122)\n\n    auxdata: 0xa26469706673582212203b9e0ae2cc812465e6a00f60d256a0480856c798acb590d45e32922ff80252eb64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60803461007357601f61072538819003918201601f19168301916001600160401b038311848410176100775780849260209460405283398101031261007357516001600160a01b03811690819003610073575f80546001600160a01b031916919091179055604051610699908161008c8239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080604090808252600480361015610015575f80fd5b5f3560e01c91826323e30c8b146101dd575081635e2c1b3a146100b0575080638237e538146100765763bcead63e1461004c575f80fd5b34610072575f366003190112610072575f5490516001600160a01b039091168152602090f35b5f80fd5b5034610072575f36600319011261007257602090517f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd98152f35b9050346100725781600319360112610072576100ca6104af565b5f5483516001600160a01b0394929185169080840167ffffffffffffffff8111828210176101ca578496939592919652600e865260209586936d417262697472617279206461746160901b858301528551968794632e7ff4ef60e11b86523090860152166024840152602435604484015260806064840152805190816084850152845f5b8381106101b2575050505f60a484838383839684010152601f801991011681010301925af19081156101a9575061018157005b816101a092903d106101a2575b6101988183610516565b810190610538565b005b503d61018e565b513d5f823e3d90fd5b82810182015189820160a4015288955086910161014e565b604186634e487b7160e01b5f525260245ffd5b83346100725760a0366003190112610072576101f76104af565b6024936001600160a01b0391853583811692908390036100725760449367ffffffffffffffff9260843584811161007257366023820112156100725780840135858111610072573691018a011161007257815f541697883303610465575081309116036104245761026b60643586356104c5565b90865197636eb1769f60e11b895230848a0152808a8a0152602098898189818a5afa90811561041a578b929185915f916103e4575b50906102ab916104c5565b905f808b51938d8501908463095ea7b360e01b978884528701528c8601528b85526102d5856104e6565b845190828c5af16102e46105c1565b816103b4575b50806103aa575b15610372575b5050505f54168651956323b872dd60e01b89880152308a88015286015260648501526064845260a0840191848310908311176103605750835261033a9190610550565b517f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd98152f35b60418791634e487b7160e01b5f52525ffd5b6103a29261039c918b51918d8301528d8201525f8a820152898152610396816104e6565b88610550565b86610550565b8980806102f7565b50873b15156102f1565b8051801592508d9083156103cc575b5050508d6102ea565b6103dc9350820181019101610538565b8d8c816103c3565b935050508982813d8311610413575b6103fd8183610516565b81010312610072576102ab848c935190916102a0565b503d6103f3565b89513d5f823e3d90fd5b855162461bcd60e51b81526020818401526018818a01527f556e74727573746564206c6f616e20696e69746961746f72000000000000000081870152606490fd5b62461bcd60e51b815260208482015260228a8201527f4f6e6c79206c656e6465722063616e2063616c6c20746869732066756e637469878201526137b760f11b6064820152608490fd5b600435906001600160a01b038216820361007257565b919082018092116104d257565b634e487b7160e01b5f52601160045260245ffd5b6080810190811067ffffffffffffffff82111761050257604052565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff82111761050257604052565b90816020910312610072575180151581036100725790565b5f806105789260018060a01b03169360208151910182865af16105716105c1565b9083610600565b80519081151591826105a6575b505061058e5750565b60249060405190635274afe760e01b82526004820152fd5b6105b99250602080918301019101610538565b155f80610585565b3d156105fb573d9067ffffffffffffffff821161050257604051916105f0601f8201601f191660200184610516565b82523d5f602084013e565b606090565b90610627575080511561061557805190602001fd5b604051630a12f52160e11b8152600490fd5b8151158061065a575b610638575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b1561063056fea26469706673582212203b9e0ae2cc812465e6a00f60d256a0480856c798acb590d45e32922ff80252eb64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x73 JUMPI PUSH1 0x1F PUSH2 0x725 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x77 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x73 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x73 JUMPI PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x699 SWAP1 DUP2 PUSH2 0x8C DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x23E30C8B EQ PUSH2 0x1DD JUMPI POP DUP2 PUSH4 0x5E2C1B3A EQ PUSH2 0xB0 JUMPI POP DUP1 PUSH4 0x8237E538 EQ PUSH2 0x76 JUMPI PUSH4 0xBCEAD63E EQ PUSH2 0x4C JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x72 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x72 JUMPI PUSH0 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x72 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x72 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x72 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x72 JUMPI PUSH2 0xCA PUSH2 0x4AF JUMP JUMPDEST PUSH0 SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP3 SWAP2 DUP6 AND SWAP1 DUP1 DUP5 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR PUSH2 0x1CA JUMPI DUP5 SWAP7 SWAP4 SWAP6 SWAP3 SWAP2 SWAP7 MSTORE PUSH1 0xE DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 SWAP4 PUSH14 0x4172626974726172792064617461 PUSH1 0x90 SHL DUP6 DUP4 ADD MSTORE DUP6 MLOAD SWAP7 DUP8 SWAP5 PUSH4 0x2E7FF4EF PUSH1 0xE1 SHL DUP7 MSTORE ADDRESS SWAP1 DUP7 ADD MSTORE AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE DUP1 MLOAD SWAP1 DUP2 PUSH1 0x84 DUP6 ADD MSTORE DUP5 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1B2 JUMPI POP POP POP PUSH0 PUSH1 0xA4 DUP5 DUP4 DUP4 DUP4 DUP4 SWAP7 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1A9 JUMPI POP PUSH2 0x181 JUMPI STOP JUMPDEST DUP2 PUSH2 0x1A0 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x1A2 JUMPI JUMPDEST PUSH2 0x198 DUP2 DUP4 PUSH2 0x516 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x538 JUMP JUMPDEST STOP JUMPDEST POP RETURNDATASIZE PUSH2 0x18E JUMP JUMPDEST MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 ADD DUP3 ADD MLOAD DUP10 DUP3 ADD PUSH1 0xA4 ADD MSTORE DUP9 SWAP6 POP DUP7 SWAP2 ADD PUSH2 0x14E JUMP JUMPDEST PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x72 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x72 JUMPI PUSH2 0x1F7 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x24 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP6 CALLDATALOAD DUP4 DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x72 JUMPI PUSH1 0x44 SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 PUSH1 0x84 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x72 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x72 JUMPI DUP1 DUP5 ADD CALLDATALOAD DUP6 DUP2 GT PUSH2 0x72 JUMPI CALLDATASIZE SWAP2 ADD DUP11 ADD GT PUSH2 0x72 JUMPI DUP2 PUSH0 SLOAD AND SWAP8 DUP9 CALLER SUB PUSH2 0x465 JUMPI POP DUP2 ADDRESS SWAP2 AND SUB PUSH2 0x424 JUMPI PUSH2 0x26B PUSH1 0x64 CALLDATALOAD DUP7 CALLDATALOAD PUSH2 0x4C5 JUMP JUMPDEST SWAP1 DUP7 MLOAD SWAP8 PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP10 MSTORE ADDRESS DUP5 DUP11 ADD MSTORE DUP1 DUP11 DUP11 ADD MSTORE PUSH1 0x20 SWAP9 DUP10 DUP2 DUP10 DUP2 DUP11 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x41A JUMPI DUP12 SWAP3 SWAP2 DUP6 SWAP2 PUSH0 SWAP2 PUSH2 0x3E4 JUMPI JUMPDEST POP SWAP1 PUSH2 0x2AB SWAP2 PUSH2 0x4C5 JUMP JUMPDEST SWAP1 PUSH0 DUP1 DUP12 MLOAD SWAP4 DUP14 DUP6 ADD SWAP1 DUP5 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL SWAP8 DUP9 DUP5 MSTORE DUP8 ADD MSTORE DUP13 DUP7 ADD MSTORE DUP12 DUP6 MSTORE PUSH2 0x2D5 DUP6 PUSH2 0x4E6 JUMP JUMPDEST DUP5 MLOAD SWAP1 DUP3 DUP13 GAS CALL PUSH2 0x2E4 PUSH2 0x5C1 JUMP JUMPDEST DUP2 PUSH2 0x3B4 JUMPI JUMPDEST POP DUP1 PUSH2 0x3AA JUMPI JUMPDEST ISZERO PUSH2 0x372 JUMPI JUMPDEST POP POP POP PUSH0 SLOAD AND DUP7 MLOAD SWAP6 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP10 DUP9 ADD MSTORE ADDRESS DUP11 DUP9 ADD MSTORE DUP7 ADD MSTORE PUSH1 0x64 DUP6 ADD MSTORE PUSH1 0x64 DUP5 MSTORE PUSH1 0xA0 DUP5 ADD SWAP2 DUP5 DUP4 LT SWAP1 DUP4 GT OR PUSH2 0x360 JUMPI POP DUP4 MSTORE PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x550 JUMP JUMPDEST MLOAD PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x41 DUP8 SWAP2 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST PUSH2 0x3A2 SWAP3 PUSH2 0x39C SWAP2 DUP12 MLOAD SWAP2 DUP14 DUP4 ADD MSTORE DUP14 DUP3 ADD MSTORE PUSH0 DUP11 DUP3 ADD MSTORE DUP10 DUP2 MSTORE PUSH2 0x396 DUP2 PUSH2 0x4E6 JUMP JUMPDEST DUP9 PUSH2 0x550 JUMP JUMPDEST DUP7 PUSH2 0x550 JUMP JUMPDEST DUP10 DUP1 DUP1 PUSH2 0x2F7 JUMP JUMPDEST POP DUP8 EXTCODESIZE ISZERO ISZERO PUSH2 0x2F1 JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO SWAP3 POP DUP14 SWAP1 DUP4 ISZERO PUSH2 0x3CC JUMPI JUMPDEST POP POP POP DUP14 PUSH2 0x2EA JUMP JUMPDEST PUSH2 0x3DC SWAP4 POP DUP3 ADD DUP2 ADD SWAP2 ADD PUSH2 0x538 JUMP JUMPDEST DUP14 DUP13 DUP2 PUSH2 0x3C3 JUMP JUMPDEST SWAP4 POP POP POP DUP10 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x413 JUMPI JUMPDEST PUSH2 0x3FD DUP2 DUP4 PUSH2 0x516 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x72 JUMPI PUSH2 0x2AB DUP5 DUP13 SWAP4 MLOAD SWAP1 SWAP2 PUSH2 0x2A0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3F3 JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x18 DUP2 DUP11 ADD MSTORE PUSH32 0x556E74727573746564206C6F616E20696E69746961746F720000000000000000 DUP2 DUP8 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP5 DUP3 ADD MSTORE PUSH1 0x22 DUP11 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206C656E6465722063616E2063616C6C20746869732066756E637469 DUP8 DUP3 ADD MSTORE PUSH2 0x37B7 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x72 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x4D2 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x502 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x502 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x72 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x72 JUMPI SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x578 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP3 DUP7 GAS CALL PUSH2 0x571 PUSH2 0x5C1 JUMP JUMPDEST SWAP1 DUP4 PUSH2 0x600 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 ISZERO ISZERO SWAP2 DUP3 PUSH2 0x5A6 JUMPI JUMPDEST POP POP PUSH2 0x58E JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x5B9 SWAP3 POP PUSH1 0x20 DUP1 SWAP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x538 JUMP JUMPDEST ISZERO PUSH0 DUP1 PUSH2 0x585 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x5FB JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x502 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x5F0 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x516 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x627 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x615 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x65A JUMPI JUMPDEST PUSH2 0x638 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x630 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE SWAP15 EXP 0xE2 0xCC DUP2 0x24 PUSH6 0xE6A00F60D256 LOG0 BASEFEE ADDMOD JUMP 0xC7 SWAP9 0xAC 0xB5 SWAP1 0xD4 MCOPY ORIGIN SWAP3 0x2F 0xF8 MUL MSTORE 0xEB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "329:1590:6:-:0;;;;;;;;;;;;;-1:-1:-1;;329:1590:6;;;;-1:-1:-1;;;;;329:1590:6;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;329:1590:6;;;;;;;;-1:-1:-1;329:1590:6;;-1:-1:-1;;;;;;329:1590:6;;;;;;;;;;;;;;;;;-1:-1:-1;329:1590:6;;;;;;-1:-1:-1;329:1590:6;;;;;-1:-1:-1;329:1590:6"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 1199,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_bool_fromMemory": {
									"entryPoint": 1336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 1221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_returndata": {
									"entryPoint": 1473,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_5263": {
									"entryPoint": 1254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_callOptionalReturn": {
									"entryPoint": 1360,
									"id": 412,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_verifyCallResultFromTarget": {
									"entryPoint": 1536,
									"id": 674,
									"parameterSlots": 3,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604090808252600480361015610015575f80fd5b5f3560e01c91826323e30c8b146101dd575081635e2c1b3a146100b0575080638237e538146100765763bcead63e1461004c575f80fd5b34610072575f366003190112610072575f5490516001600160a01b039091168152602090f35b5f80fd5b5034610072575f36600319011261007257602090517f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd98152f35b9050346100725781600319360112610072576100ca6104af565b5f5483516001600160a01b0394929185169080840167ffffffffffffffff8111828210176101ca578496939592919652600e865260209586936d417262697472617279206461746160901b858301528551968794632e7ff4ef60e11b86523090860152166024840152602435604484015260806064840152805190816084850152845f5b8381106101b2575050505f60a484838383839684010152601f801991011681010301925af19081156101a9575061018157005b816101a092903d106101a2575b6101988183610516565b810190610538565b005b503d61018e565b513d5f823e3d90fd5b82810182015189820160a4015288955086910161014e565b604186634e487b7160e01b5f525260245ffd5b83346100725760a0366003190112610072576101f76104af565b6024936001600160a01b0391853583811692908390036100725760449367ffffffffffffffff9260843584811161007257366023820112156100725780840135858111610072573691018a011161007257815f541697883303610465575081309116036104245761026b60643586356104c5565b90865197636eb1769f60e11b895230848a0152808a8a0152602098898189818a5afa90811561041a578b929185915f916103e4575b50906102ab916104c5565b905f808b51938d8501908463095ea7b360e01b978884528701528c8601528b85526102d5856104e6565b845190828c5af16102e46105c1565b816103b4575b50806103aa575b15610372575b5050505f54168651956323b872dd60e01b89880152308a88015286015260648501526064845260a0840191848310908311176103605750835261033a9190610550565b517f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd98152f35b60418791634e487b7160e01b5f52525ffd5b6103a29261039c918b51918d8301528d8201525f8a820152898152610396816104e6565b88610550565b86610550565b8980806102f7565b50873b15156102f1565b8051801592508d9083156103cc575b5050508d6102ea565b6103dc9350820181019101610538565b8d8c816103c3565b935050508982813d8311610413575b6103fd8183610516565b81010312610072576102ab848c935190916102a0565b503d6103f3565b89513d5f823e3d90fd5b855162461bcd60e51b81526020818401526018818a01527f556e74727573746564206c6f616e20696e69746961746f72000000000000000081870152606490fd5b62461bcd60e51b815260208482015260228a8201527f4f6e6c79206c656e6465722063616e2063616c6c20746869732066756e637469878201526137b760f11b6064820152608490fd5b600435906001600160a01b038216820361007257565b919082018092116104d257565b634e487b7160e01b5f52601160045260245ffd5b6080810190811067ffffffffffffffff82111761050257604052565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff82111761050257604052565b90816020910312610072575180151581036100725790565b5f806105789260018060a01b03169360208151910182865af16105716105c1565b9083610600565b80519081151591826105a6575b505061058e5750565b60249060405190635274afe760e01b82526004820152fd5b6105b99250602080918301019101610538565b155f80610585565b3d156105fb573d9067ffffffffffffffff821161050257604051916105f0601f8201601f191660200184610516565b82523d5f602084013e565b606090565b90610627575080511561061557805190602001fd5b604051630a12f52160e11b8152600490fd5b8151158061065a575b610638575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b1561063056fea26469706673582212203b9e0ae2cc812465e6a00f60d256a0480856c798acb590d45e32922ff80252eb64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x23E30C8B EQ PUSH2 0x1DD JUMPI POP DUP2 PUSH4 0x5E2C1B3A EQ PUSH2 0xB0 JUMPI POP DUP1 PUSH4 0x8237E538 EQ PUSH2 0x76 JUMPI PUSH4 0xBCEAD63E EQ PUSH2 0x4C JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x72 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x72 JUMPI PUSH0 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x72 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x72 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x72 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x72 JUMPI PUSH2 0xCA PUSH2 0x4AF JUMP JUMPDEST PUSH0 SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP3 SWAP2 DUP6 AND SWAP1 DUP1 DUP5 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR PUSH2 0x1CA JUMPI DUP5 SWAP7 SWAP4 SWAP6 SWAP3 SWAP2 SWAP7 MSTORE PUSH1 0xE DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 SWAP4 PUSH14 0x4172626974726172792064617461 PUSH1 0x90 SHL DUP6 DUP4 ADD MSTORE DUP6 MLOAD SWAP7 DUP8 SWAP5 PUSH4 0x2E7FF4EF PUSH1 0xE1 SHL DUP7 MSTORE ADDRESS SWAP1 DUP7 ADD MSTORE AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE DUP1 MLOAD SWAP1 DUP2 PUSH1 0x84 DUP6 ADD MSTORE DUP5 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1B2 JUMPI POP POP POP PUSH0 PUSH1 0xA4 DUP5 DUP4 DUP4 DUP4 DUP4 SWAP7 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1A9 JUMPI POP PUSH2 0x181 JUMPI STOP JUMPDEST DUP2 PUSH2 0x1A0 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x1A2 JUMPI JUMPDEST PUSH2 0x198 DUP2 DUP4 PUSH2 0x516 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x538 JUMP JUMPDEST STOP JUMPDEST POP RETURNDATASIZE PUSH2 0x18E JUMP JUMPDEST MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 ADD DUP3 ADD MLOAD DUP10 DUP3 ADD PUSH1 0xA4 ADD MSTORE DUP9 SWAP6 POP DUP7 SWAP2 ADD PUSH2 0x14E JUMP JUMPDEST PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x72 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x72 JUMPI PUSH2 0x1F7 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x24 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP6 CALLDATALOAD DUP4 DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x72 JUMPI PUSH1 0x44 SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 PUSH1 0x84 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x72 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x72 JUMPI DUP1 DUP5 ADD CALLDATALOAD DUP6 DUP2 GT PUSH2 0x72 JUMPI CALLDATASIZE SWAP2 ADD DUP11 ADD GT PUSH2 0x72 JUMPI DUP2 PUSH0 SLOAD AND SWAP8 DUP9 CALLER SUB PUSH2 0x465 JUMPI POP DUP2 ADDRESS SWAP2 AND SUB PUSH2 0x424 JUMPI PUSH2 0x26B PUSH1 0x64 CALLDATALOAD DUP7 CALLDATALOAD PUSH2 0x4C5 JUMP JUMPDEST SWAP1 DUP7 MLOAD SWAP8 PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP10 MSTORE ADDRESS DUP5 DUP11 ADD MSTORE DUP1 DUP11 DUP11 ADD MSTORE PUSH1 0x20 SWAP9 DUP10 DUP2 DUP10 DUP2 DUP11 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x41A JUMPI DUP12 SWAP3 SWAP2 DUP6 SWAP2 PUSH0 SWAP2 PUSH2 0x3E4 JUMPI JUMPDEST POP SWAP1 PUSH2 0x2AB SWAP2 PUSH2 0x4C5 JUMP JUMPDEST SWAP1 PUSH0 DUP1 DUP12 MLOAD SWAP4 DUP14 DUP6 ADD SWAP1 DUP5 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL SWAP8 DUP9 DUP5 MSTORE DUP8 ADD MSTORE DUP13 DUP7 ADD MSTORE DUP12 DUP6 MSTORE PUSH2 0x2D5 DUP6 PUSH2 0x4E6 JUMP JUMPDEST DUP5 MLOAD SWAP1 DUP3 DUP13 GAS CALL PUSH2 0x2E4 PUSH2 0x5C1 JUMP JUMPDEST DUP2 PUSH2 0x3B4 JUMPI JUMPDEST POP DUP1 PUSH2 0x3AA JUMPI JUMPDEST ISZERO PUSH2 0x372 JUMPI JUMPDEST POP POP POP PUSH0 SLOAD AND DUP7 MLOAD SWAP6 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP10 DUP9 ADD MSTORE ADDRESS DUP11 DUP9 ADD MSTORE DUP7 ADD MSTORE PUSH1 0x64 DUP6 ADD MSTORE PUSH1 0x64 DUP5 MSTORE PUSH1 0xA0 DUP5 ADD SWAP2 DUP5 DUP4 LT SWAP1 DUP4 GT OR PUSH2 0x360 JUMPI POP DUP4 MSTORE PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x550 JUMP JUMPDEST MLOAD PUSH32 0x439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x41 DUP8 SWAP2 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST PUSH2 0x3A2 SWAP3 PUSH2 0x39C SWAP2 DUP12 MLOAD SWAP2 DUP14 DUP4 ADD MSTORE DUP14 DUP3 ADD MSTORE PUSH0 DUP11 DUP3 ADD MSTORE DUP10 DUP2 MSTORE PUSH2 0x396 DUP2 PUSH2 0x4E6 JUMP JUMPDEST DUP9 PUSH2 0x550 JUMP JUMPDEST DUP7 PUSH2 0x550 JUMP JUMPDEST DUP10 DUP1 DUP1 PUSH2 0x2F7 JUMP JUMPDEST POP DUP8 EXTCODESIZE ISZERO ISZERO PUSH2 0x2F1 JUMP JUMPDEST DUP1 MLOAD DUP1 ISZERO SWAP3 POP DUP14 SWAP1 DUP4 ISZERO PUSH2 0x3CC JUMPI JUMPDEST POP POP POP DUP14 PUSH2 0x2EA JUMP JUMPDEST PUSH2 0x3DC SWAP4 POP DUP3 ADD DUP2 ADD SWAP2 ADD PUSH2 0x538 JUMP JUMPDEST DUP14 DUP13 DUP2 PUSH2 0x3C3 JUMP JUMPDEST SWAP4 POP POP POP DUP10 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x413 JUMPI JUMPDEST PUSH2 0x3FD DUP2 DUP4 PUSH2 0x516 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x72 JUMPI PUSH2 0x2AB DUP5 DUP13 SWAP4 MLOAD SWAP1 SWAP2 PUSH2 0x2A0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3F3 JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x18 DUP2 DUP11 ADD MSTORE PUSH32 0x556E74727573746564206C6F616E20696E69746961746F720000000000000000 DUP2 DUP8 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP5 DUP3 ADD MSTORE PUSH1 0x22 DUP11 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206C656E6465722063616E2063616C6C20746869732066756E637469 DUP8 DUP3 ADD MSTORE PUSH2 0x37B7 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x72 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x4D2 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x502 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x502 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x72 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x72 JUMPI SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x578 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP3 DUP7 GAS CALL PUSH2 0x571 PUSH2 0x5C1 JUMP JUMPDEST SWAP1 DUP4 PUSH2 0x600 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 ISZERO ISZERO SWAP2 DUP3 PUSH2 0x5A6 JUMPI JUMPDEST POP POP PUSH2 0x58E JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x5B9 SWAP3 POP PUSH1 0x20 DUP1 SWAP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0x538 JUMP JUMPDEST ISZERO PUSH0 DUP1 PUSH2 0x585 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x5FB JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x502 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x5F0 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x516 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x627 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x615 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x65A JUMPI JUMPDEST PUSH2 0x638 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x630 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE SWAP15 EXP 0xE2 0xCC DUP2 0x24 PUSH6 0xE6A00F60D256 LOG0 BASEFEE ADDMOD JUMP 0xC7 SWAP9 0xAC 0xB5 SWAP1 0xD4 MCOPY ORIGIN SWAP3 0x2F 0xF8 MUL MSTORE 0xEB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "329:1590:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;329:1590:6;;;;;;;;-1:-1:-1;;;;;329:1590:6;;;;;;;;;;;;;;;;;;;-1:-1:-1;;329:1590:6;;;;;;;510:45;329:1590;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;329:1590:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;329:1590:6;;;;;;;;;;;;851:62;;868:4;851:62;;;329:1590;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;851:62;;;;;;;;;;;;;329:1590;851:62;;;;;;-1:-1:-1;851:62:6;;;;;;;:::i;:::-;;;;;:::i;:::-;329:1590;851:62;;;;;;329:1590;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;329:1590:6;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;329:1590:6;;;;;;:::i;:::-;;;-1:-1:-1;;;;;329:1590:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1208:10;;;:29;329:1590;;1316:4;;;329:1590;;1295:26;329:1590;;1632:12;329:1590;;;;1632:12;:::i;:::-;329:1590;;;;;;;2200:39:4;;1316:4:6;2200:39:4;;;329:1590:6;;;;;;;2200:39:4;;;;;;;;;;;;;;;;;;329:1590:6;2200:39:4;;;329:1590:6;2278:20:4;;;;;:::i;:::-;329:1590:6;;;;;3411:47:4;;;;329:1590:6;;;;;3411:47:4;;;;;;329:1590:6;;;;;3411:47:4;;;;;;:::i;:::-;5615:25;;;;;;;;;:::i;:::-;5657:69;;;329:1590:6;5657:103:4;;;;329:1590:6;3473:45:4;3469:201;;329:1590:6;;;;;;;;;;;;;1829:53:4;;;;1316:4:6;1829:53:4;;;329:1590:6;;;;;;;;;1829:53:4;;329:1590:6;;;;;;;;;;;;;-1:-1:-1;329:1590:6;;1829:53:4;;329:1590:6;1829:53:4;:::i;:::-;329:1590:6;510:45;329:1590;;;;;;;;;;;;;;;3469:201:4;3646:12;329:1590:6;3561:43:4;329:1590:6;;;3561:43:4;;;;;;;;329:1590:6;;;;;;3561:43:4;;;;;;:::i;:::-;;;:::i;:::-;3646:12;;:::i;:::-;3469:201;;;;;5657:103;5730:26;;;:30;;5657:103;;:69;329:1590:6;;5669:22:4;;;-1:-1:-1;5669:22:4;;:56;;;;5657:69;;;;;;;5669:56;5695:30;;-1:-1:-1;5695:30:4;;;;;;;:::i;:::-;5669:56;;;;;2200:39;;;;;;;;;;;;;;;;;;:::i;:::-;;;329:1590:6;;;;2278:20:4;329:1590:6;;;;2200:39:4;;;;;;;;;;329:1590:6;;;;;;;;;;;;-1:-1:-1;;;329:1590:6;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;329:1590:6;;;;;;;;;;;;;;;;;-1:-1:-1;;;329:1590:6;;;;;;;;;;;-1:-1:-1;;;;;329:1590:6;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;4059:629:4:-;2847:1:5;4059:629:4;3510:55:5;4059:629:4;329:1590:6;;;;;;3462:31:5;;;;;;;;;;;;:::i;:::-;3510:55;;;:::i;:::-;329:1590:6;;4551:22:4;;;;:57;;;;4059:629;4547:135;;;;4059:629;:::o;4547:135::-;329:1590:6;;;;4631:40:4;;;;;;;;;329:1590:6;4631:40:4;4551:57;4578:30;;;3462:31:5;4578:30:4;;;;;;;;:::i;:::-;4577:31;4551:57;;;;329:1590:6;;;;;;;;;;;;;;;;;;;-1:-1:-1;;329:1590:6;;;;;:::i;:::-;;;;-1:-1:-1;329:1590:6;;;;:::o;:::-;;;:::o;4625:582:5:-;;4797:8;;-1:-1:-1;329:1590:6;;5874:21:5;:17;;6046:142;;;;;;5870:383;329:1590:6;;-1:-1:-1;;;6225:17:5;;;;;4793:408;329:1590:6;;5045:22:5;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;329:1590:6;;-1:-1:-1;;;5121:24:5;;-1:-1:-1;;;;;329:1590:6;;;5121:24:5;;;329:1590:6;;;5121:24:5;5045:49;5071:18;;;:23;5045:49;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "337800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CALLBACK_SUCCESS()": "210",
								"initiateFlashLoan(address,uint256)": "infinite",
								"lender()": "2353",
								"onFlashLoan(address,address,uint256,uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 329,
									"end": 1919,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "RETURN",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 329,
									"end": 1919,
									"name": "REVERT",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203b9e0ae2cc812465e6a00f60d256a0480856c798acb590d45e32922ff80252eb64736f6c63430008180033",
									".code": [
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "23E30C8B"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "5E2C1B3A"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "8237E538"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "BCEAD63E"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 510,
											"end": 555,
											"name": "PUSH",
											"source": 6,
											"value": "439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 329,
											"end": 1919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4172626974726172792064617461"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "2E7FF4EF"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "E1"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 868,
											"end": 872,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "A4"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 851,
											"end": 913,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 851,
											"end": 913,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 851,
											"end": 913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 851,
											"end": 913,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 851,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 851,
											"end": 913,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 851,
											"end": 913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 851,
											"end": 913,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 851,
											"end": 913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 851,
											"end": 913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 851,
											"end": 913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 851,
											"end": 913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 851,
											"end": 913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 851,
											"end": 913,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 851,
											"end": 913,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 851,
											"end": 913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "A4"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 329,
											"end": 1919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1218,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1218,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1218,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1237,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1320,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1320,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1320,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1295,
											"end": 1321,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1632,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1644,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1632,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "6EB1769F"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "E1"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1320,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2278,
											"end": 2298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3411,
											"end": 3458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5615,
											"end": 5640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 5615,
											"end": 5640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5657,
											"end": 5760,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5657,
											"end": 5760,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5657,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 5657,
											"end": 5760,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3518,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3469,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3469,
											"end": 3670,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1320,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 510,
											"end": 555,
											"name": "PUSH",
											"source": 6,
											"value": "439148F0BBC682CA079E46D6E2C2F0C1E3B820F1A291B069D8882ABF8CF18DD9"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3469,
											"end": 3670,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3469,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3646,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3561,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3561,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3561,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3646,
											"end": 3658,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3646,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3646,
											"end": 3658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3646,
											"end": 3658,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3646,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3469,
											"end": 3670,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 3469,
											"end": 3670,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3469,
											"end": 3670,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3469,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3469,
											"end": 3670,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5657,
											"end": 5760,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 5657,
											"end": 5760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5730,
											"end": 5756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5730,
											"end": 5756,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5730,
											"end": 5756,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5730,
											"end": 5760,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5730,
											"end": 5760,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5657,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5657,
											"end": 5760,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5669,
											"end": 5691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 5691,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 5691,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5669,
											"end": 5691,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 5691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 5725,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 5725,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5669,
											"end": 5725,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 5657,
											"end": 5726,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 5725,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5669,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 5695,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 5725,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 5725,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 5725,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5669,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 5669,
											"end": 5725,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2200,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "556E74727573746564206C6F616E20696E69746961746F720000000000000000"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "4F6E6C79206C656E6465722063616E2063616C6C20746869732066756E637469"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 4,
											"value": "5274AFE7"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 329,
											"end": 1919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4797,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4797,
											"end": 4805,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6046,
											"end": 6188,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6046,
											"end": 6188,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6046,
											"end": 6188,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6046,
											"end": 6188,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6046,
											"end": 6188,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6046,
											"end": 6188,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 329,
											"end": 1919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol",
								"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/contracts/mockFlashLoan/mockFlashLoan.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CALLBACK_SUCCESS()": "8237e538",
							"initiateFlashLoan(address,uint256)": "5e2c1b3a",
							"lender()": "bcead63e",
							"onFlashLoan(address,address,uint256,uint256,bytes)": "23e30c8b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lender\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CALLBACK_SUCCESS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"initiateFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lender\",\"outputs\":[{\"internalType\":\"contract IERC3156FlashLender\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"onFlashLoan(address,address,uint256,uint256,bytes)\":{\"details\":\"Receive a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"fee\":\"The additional amount of tokens to repay.\",\"initiator\":\"The initiator of the loan.\",\"token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The keccak256 hash of \\\"ERC3156FlashBorrower.onFlashLoan\\\"\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":\"MockFlashLoanBorrower\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475\",\"dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy\"]},\"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x95d9eb59f21e885406d0e28b0510f9e1a0e7b4abe6636b5c966682927c65cfdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1cbff4d620ab51abe0c4ede9e4395bae53bcc3a7edd74e0eb08d7bdef155306\",\"dweb:/ipfs/QmQcnBK28GDH4S5uXWqAcdRY1KcusXH4CxAqp87rYLir6n\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"contracts/contracts/mockFlashLoan/mockFlashLoan.sol\":{\"keccak256\":\"0xe5864cdfb19d2573e3f658dd124e84c9737ee35a850b5d1d88f10b858feb674e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fabdb871296ff3c651f02548157a6b61fe7f7de0ece1d1f214b32b54fbdf8a1\",\"dweb:/ipfs/Qme1hyJ3MjTj84767RGJJiGeHVFAvocktJ5Kz6MMeXi3AE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 730,
								"contract": "contracts/contracts/mockFlashLoan/mockFlashLoan.sol:MockFlashLoanBorrower",
								"label": "lender",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC3156FlashLender)58"
							}
						],
						"types": {
							"t_contract(IERC3156FlashLender)58": {
								"encoding": "inplace",
								"label": "contract IERC3156FlashLender",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/contracts/mockFlashLoan/mockFlashLoan.sol:32:9:\n   |\n32 |         bytes calldata data\n   |         ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1145,
					"file": "contracts/contracts/mockFlashLoan/mockFlashLoan.sol",
					"start": 1126
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol",
					"exportedSymbols": {
						"IERC3156FlashBorrower": [
							19
						]
					},
					"id": 20,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "120:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC3156FlashBorrower",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "146:123:0",
								"text": " @dev Interface of the ERC3156 FlashBorrower, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]."
							},
							"fullyImplemented": false,
							"id": 19,
							"linearizedBaseContracts": [
								19
							],
							"name": "IERC3156FlashBorrower",
							"nameLocation": "280:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "308:405:0",
										"text": " @dev Receive a flash loan.\n @param initiator The initiator of the loan.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @param fee The additional amount of tokens to repay.\n @param data Arbitrary data structure, intended to contain user-defined parameters.\n @return The keccak256 hash of \"ERC3156FlashBorrower.onFlashLoan\""
									},
									"functionSelector": "23e30c8b",
									"id": 18,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onFlashLoan",
									"nameLocation": "727:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "initiator",
												"nameLocation": "756:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "748:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "783:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "775:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "806:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "798:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "830:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "822:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "858:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "843:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "843:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:130:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "887:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 15,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "886:9:0"
									},
									"scope": 19,
									"src": "718:178:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 20,
							"src": "270:628:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "120:779:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol",
					"exportedSymbols": {
						"IERC3156FlashBorrower": [
							19
						],
						"IERC3156FlashLender": [
							58
						]
					},
					"id": 59,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 21,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol",
							"file": "./IERC3156FlashBorrower.sol",
							"id": 23,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 59,
							"sourceUnit": 20,
							"src": "144:66:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 22,
										"name": "IERC3156FlashBorrower",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 19,
										"src": "152:21:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC3156FlashLender",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 24,
								"nodeType": "StructuredDocumentation",
								"src": "212:121:1",
								"text": " @dev Interface of the ERC3156 FlashLender, as defined in\n https://eips.ethereum.org/EIPS/eip-3156[ERC-3156]."
							},
							"fullyImplemented": false,
							"id": 58,
							"linearizedBaseContracts": [
								58
							],
							"name": "IERC3156FlashLender",
							"nameLocation": "344:19:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "370:168:1",
										"text": " @dev The amount of currency available to be lended.\n @param token The loan currency.\n @return The amount of `token` that can be borrowed."
									},
									"functionSelector": "613255ab",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxFlashLoan",
									"nameLocation": "552:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "573:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "565:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:15:1"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "603:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "602:9:1"
									},
									"scope": 58,
									"src": "543:69:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "618:249:1",
										"text": " @dev The fee to be charged for a given loan.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @return The amount of `token` to be charged for the loan, on top of the returned principal."
									},
									"functionSelector": "d9d98ce4",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashFee",
									"nameLocation": "881:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "898:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "890:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "913:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "905:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "905:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:31:1"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "944:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "944:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "943:9:1"
									},
									"scope": 58,
									"src": "872:81:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "959:320:1",
										"text": " @dev Initiate a flash loan.\n @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\n @param token The loan currency.\n @param amount The amount of tokens lent.\n @param data Arbitrary data structure, intended to contain user-defined parameters."
									},
									"functionSelector": "5cffe9de",
									"id": 57,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoan",
									"nameLocation": "1293:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1334:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1312:30:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$19",
													"typeString": "contract IERC3156FlashBorrower"
												},
												"typeName": {
													"id": 45,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 44,
														"name": "IERC3156FlashBorrower",
														"nameLocations": [
															"1312:21:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 19,
														"src": "1312:21:1"
													},
													"referencedDeclaration": 19,
													"src": "1312:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC3156FlashBorrower_$19",
														"typeString": "contract IERC3156FlashBorrower"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1360:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1352:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1383:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1375:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1375:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1414:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1399:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 51,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1399:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1302:122:1"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1443:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 54,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1443:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:6:1"
									},
									"scope": 58,
									"src": "1284:165:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 59,
							"src": "334:1117:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:1334:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							136
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 60,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 61,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 70,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 79,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 85,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 136,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 136,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 100,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 136,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 136,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 120,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 136,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 132,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 136,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 137,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								70,
								79
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							172
						]
					},
					"id": 173,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 139,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:3",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 172,
							"linearizedBaseContracts": [
								172
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:3",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3022:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3045:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3070:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3093:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3119:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 149,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3136:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 151,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3155:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 153,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:3"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:3"
									},
									"scope": 172,
									"src": "2997:183:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:3",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "3501:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:3"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "3539:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:3"
									},
									"scope": 172,
									"src": "3485:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:3",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:3"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3791:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:3"
									},
									"scope": 172,
									"src": "3740:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 173,
							"src": "2113:1689:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							715
						],
						"IERC20": [
							136
						],
						"IERC20Permit": [
							172
						],
						"SafeERC20": [
							462
						]
					},
					"id": 463,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 174,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 176,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 463,
							"sourceUnit": 137,
							"src": "141:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 175,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 136,
										"src": "149:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 178,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 463,
							"sourceUnit": 173,
							"src": "179:60:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 177,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 172,
										"src": "187:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 463,
							"sourceUnit": 716,
							"src": "240:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 179,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 715,
										"src": "248:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 181,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 462,
							"linearizedBaseContracts": [
								462
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 184,
									"libraryName": {
										"id": 182,
										"name": "Address",
										"nameLocations": [
											"781:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 715,
										"src": "781:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:4",
									"typeName": {
										"id": 183,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:4",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 189,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "907:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:4"
									},
									"src": "876:46:4"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:4",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 198,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1043:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1060:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1086:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:4"
									},
									"src": "1004:109:4"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "1375:88:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 210,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "1405:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$136",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 213,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "1427:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$136",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 103,
																	"src": "1427:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 215,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 204,
																			"src": "1444:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 216,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 206,
																			"src": "1448:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 217,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 211,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$136",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 209,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "1385:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$136_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:4"
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:4",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "1325:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$136",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 201,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 200,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 136,
														"src": "1325:6:4"
													},
													"referencedDeclaration": 136,
													"src": "1325:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$136",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "1339:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "1351:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:4"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:4"
									},
									"scope": 462,
									"src": "1303:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "1792:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 236,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "1822:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$136",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 239,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 226,
																		"src": "1844:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$136",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 135,
																	"src": "1844:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 241,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 228,
																			"src": "1865:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 242,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 230,
																			"src": "1871:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 243,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 232,
																			"src": "1875:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 244,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 237,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$136",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 235,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "1802:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$136_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:4"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:4",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "1728:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$136",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 225,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 224,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 136,
														"src": "1728:6:4"
													},
													"referencedDeclaration": 136,
													"src": "1728:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$136",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "1742:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "1756:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "1768:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:4"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:4"
									},
									"scope": 462,
									"src": "1702:188:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "2167:139:4",
										"statements": [
											{
												"assignments": [
													261
												],
												"declarations": [
													{
														"constant": false,
														"id": 261,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 279,
														"src": "2177:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 260,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 270,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 266,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$462",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$462",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 264,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 268,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "2231:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 262,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "2200:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$136",
																"typeString": "contract IERC20"
															}
														},
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:4",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 113,
														"src": "2200:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 272,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "2262:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$136",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 273,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "2269:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 274,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "2278:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 275,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "2293:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$136",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 271,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "2249:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$136_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:4"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:4",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "2112:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$136",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 252,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 251,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 136,
														"src": "2112:6:4"
													},
													"referencedDeclaration": 136,
													"src": "2112:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$136",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "2126:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "2143:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:4"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:4"
									},
									"scope": 462,
									"src": "2081:225:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "2607:370:4",
										"statements": [
											{
												"id": 321,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:4",
												"statements": [
													{
														"assignments": [
															292
														],
														"declarations": [
															{
																"constant": false,
																"id": 292,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:4",
																"nodeType": "VariableDeclaration",
																"scope": 321,
																"src": "2641:24:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 291,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 301,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 297,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$462",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$462",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 295,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 299,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "2699:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 293,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "2668:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$136",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 113,
																"src": "2668:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 302,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 292,
																"src": "2725:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 303,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "2744:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 312,
														"nodeType": "IfStatement",
														"src": "2721:160:4",
														"trueBody": {
															"id": 311,
															"nodeType": "Block",
															"src": "2763:118:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 306,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 286,
																				"src": "2821:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 307,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 292,
																				"src": "2830:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 308,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 288,
																				"src": "2848:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 305,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 198,
																			"src": "2788:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 310,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:4"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 314,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "2907:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$136",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 315,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "2914:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 316,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "2923:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 317,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "2942:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$136",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 313,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "2894:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$136_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 320,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:4",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "2540:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$136",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 283,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 282,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 136,
														"src": "2540:6:4"
													},
													"referencedDeclaration": 136,
													"src": "2540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$136",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "2554:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "2571:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:4"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:4"
									},
									"scope": 462,
									"src": "2509:468:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "3373:303:4",
										"statements": [
											{
												"assignments": [
													335
												],
												"declarations": [
													{
														"constant": false,
														"id": 335,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 369,
														"src": "3383:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 334,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 344,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 338,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "3426:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$136",
																	"typeString": "contract IERC20"
																}
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:4",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 123,
															"src": "3426:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 340,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "3442:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 341,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "3451:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 342,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 336,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:4",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:4"
											},
											{
												"condition": {
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:4",
													"subExpression": {
														"arguments": [
															{
																"id": 346,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "3498:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$136",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 347,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "3505:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$136",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 345,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3474:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$136_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "3469:201:4",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "3520:150:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 351,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "3554:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$136",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 354,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 327,
																					"src": "3576:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$136",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 123,
																				"src": "3576:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 356,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 329,
																						"src": "3592:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 357,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 358,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 352,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:4",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$136",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 350,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 412,
																	"src": "3534:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$136_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 361,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 363,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "3639:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$136",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 364,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 335,
																		"src": "3646:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$136",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 362,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 412,
																	"src": "3619:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$136_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 366,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:4",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3318:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$136",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 326,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 325,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 136,
														"src": "3318:6:4"
													},
													"referencedDeclaration": 136,
													"src": "3318:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$136",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3332:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3349:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:4"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:4"
									},
									"scope": 462,
									"src": "3296:380:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "4129:559:4",
										"statements": [
											{
												"assignments": [
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 411,
														"src": "4478:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 379,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 388,
												"initialValue": {
													"arguments": [
														{
															"id": 386,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "4532:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 383,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "4512:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$136",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$136",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 381,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:4",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 536,
														"src": "4504:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 389,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "4551:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 395,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "4589:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 396,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:4",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 398,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 393,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:4",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 410,
												"nodeType": "IfStatement",
												"src": "4547:135:4",
												"trueBody": {
													"id": 409,
													"nodeType": "Block",
													"src": "4610:72:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 405,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 374,
																				"src": "4664:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$136",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$136",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 403,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 402,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "4631:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 408,
															"nodeType": "RevertStatement",
															"src": "4624:47:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "4088:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$136",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 373,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 372,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 136,
														"src": "4088:6:4"
													},
													"referencedDeclaration": 136,
													"src": "4088:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$136",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "4102:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 375,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:4"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:4"
									},
									"scope": 462,
									"src": "4059:629:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "5278:489:4",
										"statements": [
											{
												"assignments": [
													424,
													426
												],
												"declarations": [
													{
														"constant": false,
														"id": 424,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 460,
														"src": "5574:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 423,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 426,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 460,
														"src": "5588:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 425,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"arguments": [
														{
															"id": 432,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "5635:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 429,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 416,
																	"src": "5623:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$136",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$136",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 427,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:4",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 435,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "5657:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 436,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 426,
																				"src": "5669:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:4",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 442,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 426,
																				"src": "5706:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 444,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 443,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 445,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 440,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:4",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 448,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 452,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 416,
																			"src": "5738:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$136",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$136",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 450,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:4",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 422,
												"id": 459,
												"nodeType": "Return",
												"src": "5650:110:4"
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "5222:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$136",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 415,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 414,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 136,
														"src": "5222:6:4"
													},
													"referencedDeclaration": 136,
													"src": "5222:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$136",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "5236:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 417,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:4"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "5272:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:4"
									},
									"scope": 462,
									"src": "5189:578:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 463,
							"src": "751:5018:4",
							"usedErrors": [
								189,
								198
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							715
						]
					},
					"id": 716,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 464,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 465,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 715,
							"linearizedBaseContracts": [
								715
							],
							"name": "Address",
							"nameLocation": "203:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:5",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 470,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "349:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:5"
									},
									"src": "316:50:5"
								},
								{
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:5",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 475,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "475:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:5"
									},
									"src": "452:39:5"
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:5",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 478,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:5"
									},
									"src": "591:24:5"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "1602:260:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 488,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$715",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$715",
																		"typeString": "library Address"
																	}
																],
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 486,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 491,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "1640:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 501,
												"nodeType": "IfStatement",
												"src": "1612:109:5",
												"trueBody": {
													"id": 500,
													"nodeType": "Block",
													"src": "1648:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 496,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$715",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$715",
																					"typeString": "library Address"
																				}
																			],
																			"id": 495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 494,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 493,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "1669:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 499,
															"nodeType": "RevertStatement",
															"src": "1662:48:5"
														}
													]
												}
											},
											{
												"assignments": [
													503,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 503,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 518,
														"src": "1732:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 502,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 510,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 504,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "1750:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 506,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "1772:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:5"
											},
											{
												"condition": {
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:5",
													"subExpression": {
														"id": 511,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "1798:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 517,
												"nodeType": "IfStatement",
												"src": "1793:63:5",
												"trueBody": {
													"id": 516,
													"nodeType": "Block",
													"src": "1807:49:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 513,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "1828:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 515,
															"nodeType": "RevertStatement",
															"src": "1821:24:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "1550:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "1577:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:5"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:5"
									},
									"scope": 715,
									"src": "1531:331:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "2794:62:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "2833:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "2841:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 529,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "2811:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 528,
												"id": 534,
												"nodeType": "Return",
												"src": "2804:45:5"
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2727:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2743:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 523,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:5"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2780:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:5"
									},
									"scope": 715,
									"src": "2705:151:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "3293:279:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 550,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$715",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$715",
																		"typeString": "library Address"
																	}
																],
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 548,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 553,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "3331:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 563,
												"nodeType": "IfStatement",
												"src": "3303:108:5",
												"trueBody": {
													"id": 562,
													"nodeType": "Block",
													"src": "3338:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 558,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$715",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$715",
																					"typeString": "library Address"
																				}
																			],
																			"id": 557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 556,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 555,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "3359:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 561,
															"nodeType": "RevertStatement",
															"src": "3352:48:5"
														}
													]
												}
											},
											{
												"assignments": [
													565,
													567
												],
												"declarations": [
													{
														"constant": false,
														"id": 565,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "3421:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 564,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 567,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "3435:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 566,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 574,
												"initialValue": {
													"arguments": [
														{
															"id": 572,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "3488:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 568,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "3462:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 570,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "3481:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "3537:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "3545:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 578,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "3554:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 575,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "3510:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 547,
												"id": 580,
												"nodeType": "Return",
												"src": "3503:62:5"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3211:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3227:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 540,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3246:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:5"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3279:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 545,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:5"
									},
									"scope": 715,
									"src": "3180:392:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "3811:154:5",
										"statements": [
											{
												"assignments": [
													593,
													595
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "3822:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 592,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 595,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "3836:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 594,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 600,
												"initialValue": {
													"arguments": [
														{
															"id": 598,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "3881:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 596,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "3863:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 602,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "3930:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 603,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "3938:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 604,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "3947:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 601,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "3903:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 591,
												"id": 606,
												"nodeType": "Return",
												"src": "3896:62:5"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "3739:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "3755:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 586,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:5"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "3797:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 589,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:5"
									},
									"scope": 715,
									"src": "3711:254:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 633,
										"nodeType": "Block",
										"src": "4203:156:5",
										"statements": [
											{
												"assignments": [
													619,
													621
												],
												"declarations": [
													{
														"constant": false,
														"id": 619,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 633,
														"src": "4214:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 618,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 621,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 633,
														"src": "4228:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 620,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 626,
												"initialValue": {
													"arguments": [
														{
															"id": 624,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "4275:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 622,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "4255:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 628,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "4324:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 629,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "4332:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 630,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "4341:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 627,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "4297:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 617,
												"id": 632,
												"nodeType": "Return",
												"src": "4290:62:5"
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "4136:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "4152:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:5"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "4189:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 615,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:5"
									},
									"scope": 715,
									"src": "4106:253:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "4783:424:5",
										"statements": [
											{
												"condition": {
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:5",
													"subExpression": {
														"id": 646,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "4798:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 671,
													"nodeType": "Block",
													"src": "4857:344:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 653,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 641,
																			"src": "5045:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 657,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 637,
																				"src": "5071:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 668,
															"nodeType": "IfStatement",
															"src": "5041:119:5",
															"trueBody": {
																"id": 667,
																"nodeType": "Block",
																"src": "5096:64:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 664,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 637,
																					"src": "5138:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 663,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 475,
																				"src": "5121:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 666,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 669,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "5180:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 645,
															"id": 670,
															"nodeType": "Return",
															"src": "5173:17:5"
														}
													]
												},
												"id": 672,
												"nodeType": "IfStatement",
												"src": "4793:408:5",
												"trueBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "4807:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 649,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 641,
																		"src": "4829:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 648,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 714,
																	"src": "4821:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "4670:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "4694:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 638,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "4716:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 640,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:5"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "4769:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 643,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:5"
									},
									"scope": 715,
									"src": "4625:582:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "5509:122:5",
										"statements": [
											{
												"condition": {
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:5",
													"subExpression": {
														"id": 684,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "5524:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 693,
													"nodeType": "Block",
													"src": "5583:42:5",
													"statements": [
														{
															"expression": {
																"id": 691,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "5604:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 683,
															"id": 692,
															"nodeType": "Return",
															"src": "5597:17:5"
														}
													]
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "5519:106:5",
												"trueBody": {
													"id": 690,
													"nodeType": "Block",
													"src": "5533:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 687,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "5555:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 686,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 714,
																	"src": "5547:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 689,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:5",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "5433:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 676,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "5447:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:5"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "5495:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 681,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:5"
									},
									"scope": 715,
									"src": "5407:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "5798:461:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 702,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "5874:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 711,
													"nodeType": "Block",
													"src": "6204:49:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 708,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "6225:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 710,
															"nodeType": "RevertStatement",
															"src": "6218:24:5"
														}
													]
												},
												"id": 712,
												"nodeType": "IfStatement",
												"src": "5870:383:5",
												"trueBody": {
													"id": 707,
													"nodeType": "Block",
													"src": "5897:301:5",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:5",
																"nodeType": "YulBlock",
																"src": "6055:133:5",
																"statements": [
																	{
																		"nativeSrc": "6073:40:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:5"
																			},
																			"nativeSrc": "6096:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:5",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:5",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:5"
																					},
																					"nativeSrc": "6137:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:5",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:5"
																			},
																			"nativeSrc": "6130:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:5"
																		},
																		"nativeSrc": "6130:44:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 699,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 699,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:5",
																	"valueSize": 1
																}
															],
															"id": 706,
															"nodeType": "InlineAssembly",
															"src": "6046:142:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:5",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "5760:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 698,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:5"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:5"
									},
									"scope": 715,
									"src": "5743:516:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 716,
							"src": "195:6066:5",
							"usedErrors": [
								470,
								475,
								478
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:5"
				},
				"id": 5
			},
			"contracts/contracts/mockFlashLoan/mockFlashLoan.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/mockFlashLoan/mockFlashLoan.sol",
					"exportedSymbols": {
						"Address": [
							715
						],
						"IERC20": [
							136
						],
						"IERC20Permit": [
							172
						],
						"IERC3156FlashBorrower": [
							19
						],
						"IERC3156FlashLender": [
							58
						],
						"MockFlashLoanBorrower": [
							840
						],
						"SafeERC20": [
							462
						]
					},
					"id": 841,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 717,
							"literals": [
								"solidity",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 718,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 841,
							"sourceUnit": 137,
							"src": "60:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 719,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 841,
							"sourceUnit": 463,
							"src": "118:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol",
							"id": 720,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 841,
							"sourceUnit": 20,
							"src": "185:70:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol",
							"id": 721,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 841,
							"sourceUnit": 59,
							"src": "257:68:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 722,
										"name": "IERC3156FlashBorrower",
										"nameLocations": [
											"363:21:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 19,
										"src": "363:21:6"
									},
									"id": 723,
									"nodeType": "InheritanceSpecifier",
									"src": "363:21:6"
								}
							],
							"canonicalName": "MockFlashLoanBorrower",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 840,
							"linearizedBaseContracts": [
								840,
								19
							],
							"name": "MockFlashLoanBorrower",
							"nameLocation": "338:21:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 727,
									"libraryName": {
										"id": 724,
										"name": "SafeERC20",
										"nameLocations": [
											"398:9:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "398:9:6"
									},
									"nodeType": "UsingForDirective",
									"src": "392:27:6",
									"typeName": {
										"id": 726,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 725,
											"name": "IERC20",
											"nameLocations": [
												"412:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 136,
											"src": "412:6:6"
										},
										"referencedDeclaration": 136,
										"src": "412:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$136",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "bcead63e",
									"id": 730,
									"mutability": "mutable",
									"name": "lender",
									"nameLocation": "454:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 840,
									"src": "427:33:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC3156FlashLender_$58",
										"typeString": "contract IERC3156FlashLender"
									},
									"typeName": {
										"id": 729,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 728,
											"name": "IERC3156FlashLender",
											"nameLocations": [
												"427:19:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 58,
											"src": "427:19:6"
										},
										"referencedDeclaration": 58,
										"src": "427:19:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC3156FlashLender_$58",
											"typeString": "contract IERC3156FlashLender"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "8237e538",
									"id": 735,
									"mutability": "constant",
									"name": "CALLBACK_SUCCESS",
									"nameLocation": "491:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 840,
									"src": "467:88:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 731,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "467:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "45524333313536466c617368426f72726f7765722e6f6e466c6173684c6f616e",
												"id": 733,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "520:34:6",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9",
													"typeString": "literal_string \"ERC3156FlashBorrower.onFlashLoan\""
												},
												"value": "ERC3156FlashBorrower.onFlashLoan"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9",
													"typeString": "literal_string \"ERC3156FlashBorrower.onFlashLoan\""
												}
											],
											"id": 732,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "510:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 734,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "510:45:6",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "631:56:6",
										"statements": [
											{
												"expression": {
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 740,
														"name": "lender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "642:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC3156FlashLender_$58",
															"typeString": "contract IERC3156FlashLender"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 742,
																"name": "_lender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "671:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 741,
															"name": "IERC3156FlashLender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "651:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC3156FlashLender_$58_$",
																"typeString": "type(contract IERC3156FlashLender)"
															}
														},
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "651:28:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC3156FlashLender_$58",
															"typeString": "contract IERC3156FlashLender"
														}
													},
													"src": "642:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC3156FlashLender_$58",
														"typeString": "contract IERC3156FlashLender"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "642:37:6"
											}
										]
									},
									"id": 747,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "_lender",
												"nameLocation": "622:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "614:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:17:6"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "631:0:6"
									},
									"scope": 840,
									"src": "602:85:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "804:117:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 757,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "868:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MockFlashLoanBorrower_$840",
																"typeString": "contract MockFlashLoanBorrower"
															}
														},
														{
															"id": 758,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "874:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 759,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "881:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "4172626974726172792064617461",
																	"id": 762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "895:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_858091638fef38ea86868531e48a032f6272cd6c53ac34fd8d86412bd113c114",
																		"typeString": "literal_string \"Arbitrary data\""
																	},
																	"value": "Arbitrary data"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_858091638fef38ea86868531e48a032f6272cd6c53ac34fd8d86412bd113c114",
																		"typeString": "literal_string \"Arbitrary data\""
																	}
																],
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "889:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 760,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "889:5:6",
																	"typeDescriptions": {}
																}
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "889:23:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_MockFlashLoanBorrower_$840",
																"typeString": "contract MockFlashLoanBorrower"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 754,
															"name": "lender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "851:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC3156FlashLender_$58",
																"typeString": "contract IERC3156FlashLender"
															}
														},
														"id": 756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "858:9:6",
														"memberName": "flashLoan",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 57,
														"src": "851:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC3156FlashBorrower_$19_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC3156FlashBorrower,address,uint256,bytes memory) external returns (bool)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "851:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "851:62:6"
											}
										]
									},
									"functionSelector": "5e2c1b3a",
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initiateFlashLoan",
									"nameLocation": "746:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "772:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "764:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "787:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "779:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "763:31:6"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "804:0:6"
									},
									"scope": 840,
									"src": "737:184:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										18
									],
									"body": {
										"id": 838,
										"nodeType": "Block",
										"src": "1189:727:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 784,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1208:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1212:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1208:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 788,
																		"name": "lender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "1230:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC3156FlashLender_$58",
																			"typeString": "contract IERC3156FlashLender"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC3156FlashLender_$58",
																			"typeString": "contract IERC3156FlashLender"
																		}
																	],
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1222:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 786,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1222:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1222:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1208:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206c656e6465722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1239:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6aa1d017add4bda9a1b3dd0f4db4ebb1955cd555648462b4c7596e3a66490688",
																"typeString": "literal_string \"Only lender can call this function\""
															},
															"value": "Only lender can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6aa1d017add4bda9a1b3dd0f4db4ebb1955cd555648462b4c7596e3a66490688",
																"typeString": "literal_string \"Only lender can call this function\""
															}
														],
														"id": 783,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1200:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1200:76:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "1200:76:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 795,
																"name": "initiator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "1295:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 798,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1316:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MockFlashLoanBorrower_$840",
																			"typeString": "contract MockFlashLoanBorrower"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MockFlashLoanBorrower_$840",
																			"typeString": "contract MockFlashLoanBorrower"
																		}
																	],
																	"id": 797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1308:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 796,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1308:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1308:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1295:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e74727573746564206c6f616e20696e69746961746f72",
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1323:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec164a17a43dffe626cad84e1aa8e8a47aad020b360cfd762620257ffdafe39c",
																"typeString": "literal_string \"Untrusted loan initiator\""
															},
															"value": "Untrusted loan initiator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec164a17a43dffe626cad84e1aa8e8a47aad020b360cfd762620257ffdafe39c",
																"typeString": "literal_string \"Untrusted loan initiator\""
															}
														],
														"id": 794,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1287:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1287:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "1287:63:6"
											},
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "totalRepayment",
														"nameLocation": "1615:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 838,
														"src": "1607:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 804,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1607:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 806,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "1632:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 807,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "1641:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1632:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1607:37:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 816,
																	"name": "lender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "1699:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC3156FlashLender_$58",
																		"typeString": "contract IERC3156FlashLender"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC3156FlashLender_$58",
																		"typeString": "contract IERC3156FlashLender"
																	}
																],
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1691:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 814,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1691:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1691:15:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 818,
															"name": "totalRepayment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "1708:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 811,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "1662:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 810,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "1655:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$136_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1655:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$136",
																"typeString": "contract IERC20"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1669:21:6",
														"memberName": "safeIncreaseAllowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 280,
														"src": "1655:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$136_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$136_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1655:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 820,
												"nodeType": "ExpressionStatement",
												"src": "1655:68:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 827,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1773:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MockFlashLoanBorrower_$840",
																		"typeString": "contract MockFlashLoanBorrower"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MockFlashLoanBorrower_$840",
																		"typeString": "contract MockFlashLoanBorrower"
																	}
																],
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1765:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 825,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1765:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1765:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 831,
																	"name": "lender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "1788:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC3156FlashLender_$58",
																		"typeString": "contract IERC3156FlashLender"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC3156FlashLender_$58",
																		"typeString": "contract IERC3156FlashLender"
																	}
																],
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1780:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 829,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1780:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1780:15:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 833,
															"name": "totalRepayment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "1797:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 822,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "1741:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 821,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "1734:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$136_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1734:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$136",
																"typeString": "contract IERC20"
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1748:16:6",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 249,
														"src": "1734:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$136_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$136_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1734:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "1734:78:6"
											},
											{
												"expression": {
													"id": 836,
													"name": "CALLBACK_SUCCESS",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 735,
													"src": "1832:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 782,
												"id": 837,
												"nodeType": "Return",
												"src": "1825:23:6"
											}
										]
									},
									"functionSelector": "23e30c8b",
									"id": 839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onFlashLoan",
									"nameLocation": "1005:11:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 779,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1162:8:6"
									},
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "initiator",
												"nameLocation": "1035:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "1027:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1063:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "1055:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1087:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "1079:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1112:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "1104:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1141:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "1126:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 776,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1126:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1016:136:6"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "1180:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 780,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1179:9:6"
									},
									"scope": 840,
									"src": "996:920:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 841,
							"src": "329:1590:6",
							"usedErrors": [
								189,
								470,
								475,
								478
							],
							"usedEvents": []
						}
					],
					"src": "33:1888:6"
				},
				"id": 6
			}
		}
	}
}